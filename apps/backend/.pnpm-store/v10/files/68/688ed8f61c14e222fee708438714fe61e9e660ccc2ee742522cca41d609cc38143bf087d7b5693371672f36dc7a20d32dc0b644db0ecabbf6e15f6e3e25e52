{"version":3,"file":"index.js","names":["c","_c","getTranslation","formatAdminURL","React","Fragment","useEffect","useFormInitializing","useFormProcessing","useConfig","useEditDepth","useLivePreviewContext","useTranslation","formatDate","Autosave","Button","CopyLocaleData","DeleteDocument","DuplicateDocument","MoveDocToFolder","Gutter","LivePreviewToggler","Locked","Popup","PopupList","PreviewButton","PublishButton","RenderCustomComponent","SaveButton","SaveDraftButton","Status","baseClass","DocumentControls","props","$","id","slug","BeforeDocumentControls","customComponents","t0","data","disableActions","disableCreate","EditMenuItems","hasSavePermission","isAccountView","isEditing","isInDrawer","onDelete","onDrawerCreateNew","onDuplicate","onTakeOver","permissions","readOnlyForIncomingUser","redirectAfterDelete","redirectAfterDuplicate","user","t1","undefined","CustomPreviewButton","CustomPublishButton","CustomSaveButton","CustomSaveDraftButton","i18n","t","editDepth","config","getEntityConfig","collectionConfig","collectionSlug","globalConfig","globalSlug","isLivePreviewEnabled","admin","t2","localization","routes","t3","dateFormat","adminRoute","updatedAt","setUpdatedAt","useState","createdAt","setCreatedAt","processing","initializing","t4","t5","date","pattern","hasCreatePermission","create","hasDeletePermission","delete","showDotMenu","Boolean","unsavedDraftWithValidations","versions","drafts","validate","collectionConfigDrafts","globalConfigDrafts","autosaveEnabled","autosave","collectionAutosaveEnabled","globalAutosaveEnabled","showSaveDraftButton","showCopyToLocale","disableCopyToLocale","showFolderMetaIcon","folders","showLockedMetaIcon","t6","_jsx","t7","buttonStyle","onClick","size","type","children","_jsxs","className","folderCollectionSlug","folderFieldName","fieldName","label","labels","singular","filter","join","collection","global","publishedDocUpdatedAt","timestamps","title","preview","CustomComponent","Fallback","button","disabled","horizontalAlign","verticalAlign","ButtonGroup","href","path","disableDuplicate","toString","singularLabel","buttonId","useAsTitle"],"sources":["../../../src/elements/DocumentControls/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  ClientUser,\n  Data,\n  SanitizedCollectionConfig,\n  SanitizedCollectionPermission,\n  SanitizedGlobalPermission,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { formatAdminURL } from 'payload/shared'\nimport React, { Fragment, useEffect } from 'react'\n\nimport type { DocumentDrawerContextType } from '../DocumentDrawer/Provider.js'\n\nimport { useFormInitializing, useFormProcessing } from '../../forms/Form/context.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useEditDepth } from '../../providers/EditDepth/index.js'\nimport { useLivePreviewContext } from '../../providers/LivePreview/context.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { formatDate } from '../../utilities/formatDocTitle/formatDateTitle.js'\nimport { Autosave } from '../Autosave/index.js'\nimport { Button } from '../Button/index.js'\nimport { CopyLocaleData } from '../CopyLocaleData/index.js'\nimport { DeleteDocument } from '../DeleteDocument/index.js'\nimport { DuplicateDocument } from '../DuplicateDocument/index.js'\nimport { MoveDocToFolder } from '../FolderView/MoveDocToFolder/index.js'\nimport { Gutter } from '../Gutter/index.js'\nimport { LivePreviewToggler } from '../LivePreview/Toggler/index.js'\nimport { Locked } from '../Locked/index.js'\nimport { Popup, PopupList } from '../Popup/index.js'\nimport { PreviewButton } from '../PreviewButton/index.js'\nimport { PublishButton } from '../PublishButton/index.js'\nimport { RenderCustomComponent } from '../RenderCustomComponent/index.js'\nimport { SaveButton } from '../SaveButton/index.js'\nimport { SaveDraftButton } from '../SaveDraftButton/index.js'\nimport { Status } from '../Status/index.js'\nimport './index.scss'\n\nconst baseClass = 'doc-controls'\n\nexport const DocumentControls: React.FC<{\n  readonly apiURL: string\n  readonly BeforeDocumentControls?: React.ReactNode\n  readonly customComponents?: {\n    readonly PreviewButton?: React.ReactNode\n    readonly PublishButton?: React.ReactNode\n    readonly SaveButton?: React.ReactNode\n    readonly SaveDraftButton?: React.ReactNode\n  }\n  readonly data?: Data\n  readonly disableActions?: boolean\n  readonly disableCreate?: boolean\n  readonly EditMenuItems?: React.ReactNode\n  readonly hasPublishPermission?: boolean\n  readonly hasSavePermission?: boolean\n  readonly id?: number | string\n  readonly isAccountView?: boolean\n  readonly isEditing?: boolean\n  readonly isInDrawer?: boolean\n  readonly onDelete?: DocumentDrawerContextType['onDelete']\n  readonly onDrawerCreateNew?: () => void\n  /* Only available if `redirectAfterDuplicate` is `false` */\n  readonly onDuplicate?: DocumentDrawerContextType['onDuplicate']\n  readonly onSave?: DocumentDrawerContextType['onSave']\n  readonly onTakeOver?: () => void\n  readonly permissions: null | SanitizedCollectionPermission | SanitizedGlobalPermission\n  readonly readOnlyForIncomingUser?: boolean\n  readonly redirectAfterDelete?: boolean\n  readonly redirectAfterDuplicate?: boolean\n  readonly slug: SanitizedCollectionConfig['slug']\n  readonly user?: ClientUser\n}> = (props) => {\n  const {\n    id,\n    slug,\n    BeforeDocumentControls,\n    customComponents: {\n      PreviewButton: CustomPreviewButton,\n      PublishButton: CustomPublishButton,\n      SaveButton: CustomSaveButton,\n      SaveDraftButton: CustomSaveDraftButton,\n    } = {},\n    data,\n    disableActions,\n    disableCreate,\n    EditMenuItems,\n    hasSavePermission,\n    isAccountView,\n    isEditing,\n    isInDrawer,\n    onDelete,\n    onDrawerCreateNew,\n    onDuplicate,\n    onTakeOver,\n    permissions,\n    readOnlyForIncomingUser,\n    redirectAfterDelete,\n    redirectAfterDuplicate,\n    user,\n  } = props\n\n  const { i18n, t } = useTranslation()\n\n  const editDepth = useEditDepth()\n\n  const { config, getEntityConfig } = useConfig()\n\n  const collectionConfig = getEntityConfig({ collectionSlug: slug })\n\n  const globalConfig = getEntityConfig({ globalSlug: slug })\n\n  const { isLivePreviewEnabled } = useLivePreviewContext()\n\n  const {\n    admin: { dateFormat },\n    localization,\n    routes: { admin: adminRoute },\n  } = config\n\n  // Settings these in state to avoid hydration issues if there is a mismatch between the server and client\n  const [updatedAt, setUpdatedAt] = React.useState<string>('')\n  const [createdAt, setCreatedAt] = React.useState<string>('')\n\n  const processing = useFormProcessing()\n  const initializing = useFormInitializing()\n\n  useEffect(() => {\n    if (data?.updatedAt) {\n      setUpdatedAt(formatDate({ date: data.updatedAt, i18n, pattern: dateFormat }))\n    }\n    if (data?.createdAt) {\n      setCreatedAt(formatDate({ date: data.createdAt, i18n, pattern: dateFormat }))\n    }\n  }, [data, i18n, dateFormat])\n\n  const hasCreatePermission = permissions && 'create' in permissions && permissions.create\n\n  const hasDeletePermission = permissions && 'delete' in permissions && permissions.delete\n\n  const showDotMenu = Boolean(\n    collectionConfig && id && !disableActions && (hasCreatePermission || hasDeletePermission),\n  )\n\n  const unsavedDraftWithValidations =\n    !id && collectionConfig?.versions?.drafts && collectionConfig.versions?.drafts.validate\n\n  const collectionConfigDrafts = collectionConfig?.versions?.drafts\n  const globalConfigDrafts = globalConfig?.versions?.drafts\n\n  const autosaveEnabled =\n    (collectionConfigDrafts && collectionConfigDrafts?.autosave) ||\n    (globalConfigDrafts && globalConfigDrafts?.autosave)\n\n  const collectionAutosaveEnabled = collectionConfigDrafts && collectionConfigDrafts?.autosave\n  const globalAutosaveEnabled = globalConfigDrafts && globalConfigDrafts?.autosave\n\n  const showSaveDraftButton =\n    (collectionAutosaveEnabled &&\n      collectionConfigDrafts.autosave !== false &&\n      collectionConfigDrafts.autosave.showSaveDraftButton === true) ||\n    (globalAutosaveEnabled &&\n      globalConfigDrafts.autosave !== false &&\n      globalConfigDrafts.autosave.showSaveDraftButton === true)\n\n  const showCopyToLocale = localization && !collectionConfig?.admin?.disableCopyToLocale\n\n  const showFolderMetaIcon = collectionConfig && collectionConfig.folders\n  const showLockedMetaIcon = user && readOnlyForIncomingUser\n\n  return (\n    <Gutter className={baseClass}>\n      <div className={`${baseClass}__wrapper`}>\n        <div className={`${baseClass}__content`}>\n          {showLockedMetaIcon || showFolderMetaIcon ? (\n            <div className={`${baseClass}__meta-icons`}>\n              {showLockedMetaIcon && (\n                <Locked className={`${baseClass}__locked-controls`} user={user} />\n              )}\n              {showFolderMetaIcon && config.folders && (\n                <MoveDocToFolder\n                  folderCollectionSlug={config.folders.slug}\n                  folderFieldName={config.folders.fieldName}\n                />\n              )}\n            </div>\n          ) : null}\n          <ul className={`${baseClass}__meta`}>\n            {collectionConfig && !isEditing && !isAccountView && (\n              <li className={`${baseClass}__list-item`}>\n                <p className={`${baseClass}__value`}>\n                  {i18n.t('general:creatingNewLabel', {\n                    label: getTranslation(\n                      collectionConfig?.labels?.singular ?? i18n.t('general:document'),\n                      i18n,\n                    ),\n                  })}\n                </p>\n              </li>\n            )}\n\n            {(collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts) && (\n              <Fragment>\n                {(globalConfig || (collectionConfig && isEditing)) && (\n                  <li\n                    className={[`${baseClass}__status`, `${baseClass}__list-item`]\n                      .filter(Boolean)\n                      .join(' ')}\n                  >\n                    <Status />\n                  </li>\n                )}\n                {hasSavePermission && autosaveEnabled && !unsavedDraftWithValidations && (\n                  <li className={`${baseClass}__list-item`}>\n                    <Autosave\n                      collection={collectionConfig}\n                      global={globalConfig}\n                      id={id}\n                      publishedDocUpdatedAt={data?.createdAt}\n                    />\n                  </li>\n                )}\n              </Fragment>\n            )}\n            {collectionConfig?.timestamps && (isEditing || isAccountView) && (\n              <Fragment>\n                <li\n                  className={[`${baseClass}__list-item`, `${baseClass}__value-wrap`]\n                    .filter(Boolean)\n                    .join(' ')}\n                  title={data?.updatedAt ? updatedAt : ''}\n                >\n                  <p className={`${baseClass}__label`}>{i18n.t('general:lastModified')}:&nbsp;</p>\n                  {data?.updatedAt && <p className={`${baseClass}__value`}>{updatedAt}</p>}\n                </li>\n                <li\n                  className={[`${baseClass}__list-item`, `${baseClass}__value-wrap`]\n                    .filter(Boolean)\n                    .join(' ')}\n                  title={data?.createdAt ? createdAt : ''}\n                >\n                  <p className={`${baseClass}__label`}>{i18n.t('general:created')}:&nbsp;</p>\n                  {data?.createdAt && <p className={`${baseClass}__value`}>{createdAt}</p>}\n                </li>\n              </Fragment>\n            )}\n          </ul>\n        </div>\n        <div className={`${baseClass}__controls-wrapper`}>\n          <div className={`${baseClass}__controls`}>\n            {BeforeDocumentControls}\n            {isLivePreviewEnabled && !isInDrawer && <LivePreviewToggler />}\n            {(collectionConfig?.admin.preview || globalConfig?.admin.preview) && (\n              <RenderCustomComponent\n                CustomComponent={CustomPreviewButton}\n                Fallback={<PreviewButton />}\n              />\n            )}\n            {hasSavePermission && (\n              <Fragment>\n                {collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts ? (\n                  <Fragment>\n                    {(unsavedDraftWithValidations ||\n                      !autosaveEnabled ||\n                      (autosaveEnabled && showSaveDraftButton)) && (\n                      <RenderCustomComponent\n                        CustomComponent={CustomSaveDraftButton}\n                        Fallback={<SaveDraftButton />}\n                      />\n                    )}\n                    <RenderCustomComponent\n                      CustomComponent={CustomPublishButton}\n                      Fallback={<PublishButton />}\n                    />\n                  </Fragment>\n                ) : (\n                  <RenderCustomComponent\n                    CustomComponent={CustomSaveButton}\n                    Fallback={<SaveButton />}\n                  />\n                )}\n              </Fragment>\n            )}\n            {user && readOnlyForIncomingUser && (\n              <Button\n                buttonStyle=\"secondary\"\n                id=\"take-over\"\n                onClick={onTakeOver}\n                size=\"medium\"\n                type=\"button\"\n              >\n                {t('general:takeOver')}\n              </Button>\n            )}\n          </div>\n          {showDotMenu && !readOnlyForIncomingUser && (\n            <Popup\n              button={\n                <div className={`${baseClass}__dots`}>\n                  <div />\n                  <div />\n                  <div />\n                </div>\n              }\n              className={`${baseClass}__popup`}\n              disabled={initializing || processing}\n              horizontalAlign=\"right\"\n              size=\"large\"\n              verticalAlign=\"bottom\"\n            >\n              <PopupList.ButtonGroup>\n                {showCopyToLocale && <CopyLocaleData />}\n                {hasCreatePermission && (\n                  <React.Fragment>\n                    {!disableCreate && (\n                      <Fragment>\n                        {editDepth > 1 ? (\n                          <PopupList.Button id=\"action-create\" onClick={onDrawerCreateNew}>\n                            {i18n.t('general:createNew')}\n                          </PopupList.Button>\n                        ) : (\n                          <PopupList.Button\n                            href={formatAdminURL({\n                              adminRoute,\n                              path: `/collections/${collectionConfig?.slug}/create`,\n                            })}\n                            id=\"action-create\"\n                          >\n                            {i18n.t('general:createNew')}\n                          </PopupList.Button>\n                        )}\n                      </Fragment>\n                    )}\n                    {collectionConfig.disableDuplicate !== true && isEditing && (\n                      <DuplicateDocument\n                        id={id.toString()}\n                        onDuplicate={onDuplicate}\n                        redirectAfterDuplicate={redirectAfterDuplicate}\n                        singularLabel={collectionConfig?.labels?.singular}\n                        slug={collectionConfig?.slug}\n                      />\n                    )}\n                  </React.Fragment>\n                )}\n                {hasDeletePermission && (\n                  <DeleteDocument\n                    buttonId=\"action-delete\"\n                    collectionSlug={collectionConfig?.slug}\n                    id={id.toString()}\n                    onDelete={onDelete}\n                    redirectAfterDelete={redirectAfterDelete}\n                    singularLabel={collectionConfig?.labels?.singular}\n                    useAsTitle={collectionConfig?.admin?.useAsTitle}\n                  />\n                )}\n                {EditMenuItems}\n              </PopupList.ButtonGroup>\n            </Popup>\n          )}\n        </div>\n      </div>\n      <div className={`${baseClass}__divider`} />\n    </Gutter>\n  )\n}\n"],"mappings":"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","ignoreList":[]}