{"version":3,"file":"index.js","names":["c","_c","ChevronIcon","FieldDiffLabel","useConfig","useTranslation","fieldIsArrayType","fieldIsBlockType","React","useState","countChangedFields","countChangedFieldsInRows","baseClass","DiffCollapser","t0","$","children","field","fields","hideGutter","t1","initCollapsed","t2","isIterable","t3","Label","locales","parentIsLocalized","valueFrom","valueTo","undefined","t","isCollapsed","setIsCollapsed","config","t4","changeCount","Error","t5","comparisonRows","t6","versionRows","Array","isArray","version","t7","filter","Boolean","contentClassNames","join","t8","_jsxs","className","onClick","type","_jsx","direction","size","count"],"sources":["../../../../../src/views/Version/RenderFieldsToDiff/DiffCollapser/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientField } from 'payload'\n\nimport { ChevronIcon, FieldDiffLabel, useConfig, useTranslation } from '@payloadcms/ui'\nimport { fieldIsArrayType, fieldIsBlockType } from 'payload/shared'\nimport React, { useState } from 'react'\n\nimport './index.scss'\nimport { countChangedFields, countChangedFieldsInRows } from '../utilities/countChangedFields.js'\n\nconst baseClass = 'diff-collapser'\n\ntype Props = {\n  hideGutter?: boolean\n  initCollapsed?: boolean\n  Label: React.ReactNode\n  locales: string[] | undefined\n  parentIsLocalized: boolean\n  valueTo: unknown\n} & (\n  | {\n      // fields collapser\n      children: React.ReactNode\n      field?: never\n      fields: ClientField[]\n      isIterable?: false\n      valueFrom: unknown\n    }\n  | {\n      // iterable collapser\n      children: React.ReactNode\n      field: ClientField\n      fields?: never\n      isIterable: true\n      valueFrom?: unknown\n    }\n)\n\nexport const DiffCollapser: React.FC<Props> = ({\n  children,\n  field,\n  fields,\n  hideGutter = false,\n  initCollapsed = false,\n  isIterable = false,\n  Label,\n  locales,\n  parentIsLocalized,\n  valueFrom,\n  valueTo,\n}) => {\n  const { t } = useTranslation()\n  const [isCollapsed, setIsCollapsed] = useState(initCollapsed)\n  const { config } = useConfig()\n\n  let changeCount = 0\n\n  if (isIterable) {\n    if (!fieldIsArrayType(field) && !fieldIsBlockType(field)) {\n      throw new Error(\n        'DiffCollapser: field must be an array or blocks field when isIterable is true',\n      )\n    }\n    const comparisonRows = valueFrom ?? []\n    const versionRows = valueTo ?? []\n\n    if (!Array.isArray(comparisonRows) || !Array.isArray(versionRows)) {\n      throw new Error(\n        'DiffCollapser: comparison and version must be arrays when isIterable is true',\n      )\n    }\n\n    changeCount = countChangedFieldsInRows({\n      comparisonRows,\n      config,\n      field,\n      locales,\n      parentIsLocalized,\n      versionRows,\n    })\n  } else {\n    changeCount = countChangedFields({\n      comparison: valueFrom,\n      config,\n      fields,\n      locales,\n      parentIsLocalized,\n      version: valueTo,\n    })\n  }\n\n  const contentClassNames = [\n    `${baseClass}__content`,\n    isCollapsed && `${baseClass}__content--is-collapsed`,\n    hideGutter && `${baseClass}__content--hide-gutter`,\n  ]\n    .filter(Boolean)\n    .join(' ')\n\n  return (\n    <div className={baseClass}>\n      <FieldDiffLabel>\n        <button\n          aria-label={isCollapsed ? 'Expand' : 'Collapse'}\n          className={`${baseClass}__toggle-button`}\n          onClick={() => setIsCollapsed(!isCollapsed)}\n          type=\"button\"\n        >\n          <div className={`${baseClass}__label`}>{Label}</div>\n\n          <ChevronIcon direction={isCollapsed ? 'right' : 'down'} size={'small'} />\n        </button>\n        {changeCount > 0 && isCollapsed && (\n          <span className={`${baseClass}__field-change-count`}>\n            {t('version:changedFieldsCount', { count: changeCount })}\n          </span>\n        )}\n      </FieldDiffLabel>\n      <div className={contentClassNames}>{children}</div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}