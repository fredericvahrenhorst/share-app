{"version":3,"file":"index.js","names":["React","useCallback","useEffect","useMemo","useState","v4","uuidv4","CodeEditor","RenderCustomComponent","useField","withCondition","FieldDescription","FieldError","FieldLabel","mergeFieldStyles","fieldBaseClass","baseClass","JSONFieldComponent","props","field","admin","className","description","editorOptions","maxHeight","jsonSchema","label","localized","required","path","pathFromProps","readOnly","validate","jsonError","setJsonError","inputChangeFromRef","useRef","editorKey","setEditorKey","memoizedValidate","value","options","customComponents","AfterInput","BeforeInput","Description","Error","Label","disabled","initialValue","setValue","showError","potentiallyStalePath","initialStringValue","setInitialStringValue","undefined","JSON","stringify","handleMount","editor","monaco","languages","json","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","schemas","diagnosticsOptions","uri","newUri","includes","crypto","randomUUID","setModel","createModel","Uri","parse","handleChange","val","current","e","Date","toString","styles","_jsxs","filter","Boolean","join","style","_jsx","CustomComponent","Fallback","message","defaultLanguage","onChange","onMount","wrapperProps","id","replace","JSONField"],"sources":["../../../src/fields/JSON/index.tsx"],"sourcesContent":["'use client'\nimport type { JSONFieldClientComponent } from 'payload'\n\nimport { type OnMount } from '@monaco-editor/react'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { CodeEditor } from '../../elements/CodeEditor/index.js'\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { FieldDescription } from '../FieldDescription/index.js'\nimport { FieldError } from '../FieldError/index.js'\nimport { FieldLabel } from '../FieldLabel/index.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport './index.scss'\n\nconst baseClass = 'json-field'\n\nconst JSONFieldComponent: JSONFieldClientComponent = (props) => {\n  const {\n    field,\n    field: {\n      admin: { className, description, editorOptions, maxHeight } = {},\n      jsonSchema,\n      label,\n      localized,\n      required,\n    },\n    path: pathFromProps,\n    readOnly,\n    validate,\n  } = props\n\n  const [jsonError, setJsonError] = useState<string>()\n  const inputChangeFromRef = React.useRef<'system' | 'user'>('system')\n  const [editorKey, setEditorKey] = useState<string>('')\n\n  const memoizedValidate = useCallback(\n    (value, options) => {\n      if (typeof validate === 'function') {\n        return validate(value, { ...options, jsonError, required })\n      }\n    },\n    [validate, required, jsonError],\n  )\n\n  const {\n    customComponents: { AfterInput, BeforeInput, Description, Error, Label } = {},\n    disabled,\n    initialValue,\n    path,\n    setValue,\n    showError,\n    value,\n  } = useField<string>({\n    potentiallyStalePath: pathFromProps,\n    validate: memoizedValidate,\n  })\n\n  const [initialStringValue, setInitialStringValue] = useState<string | undefined>(() =>\n    (value || initialValue) !== undefined\n      ? JSON.stringify(value ?? initialValue, null, 2)\n      : undefined,\n  )\n\n  const handleMount = useCallback<OnMount>(\n    (editor, monaco) => {\n      if (!jsonSchema) {\n        return\n      }\n\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        enableSchemaRequest: true,\n        schemas: [\n          ...(monaco.languages.json.jsonDefaults.diagnosticsOptions.schemas || []),\n          jsonSchema,\n        ],\n        validate: true,\n      })\n\n      const uri = jsonSchema.uri\n      const newUri = uri.includes('?')\n        ? `${uri}&${crypto.randomUUID ? crypto.randomUUID() : uuidv4()}`\n        : `${uri}?${crypto.randomUUID ? crypto.randomUUID() : uuidv4()}`\n\n      editor.setModel(\n        monaco.editor.createModel(JSON.stringify(value, null, 2), 'json', monaco.Uri.parse(newUri)),\n      )\n    },\n    [jsonSchema, value],\n  )\n\n  const handleChange = useCallback(\n    (val) => {\n      if (readOnly || disabled) {\n        return\n      }\n      inputChangeFromRef.current = 'user'\n\n      try {\n        setValue(val ? JSON.parse(val) : null)\n        setJsonError(undefined)\n      } catch (e) {\n        setValue(val ? val : null)\n        setJsonError(e)\n      }\n    },\n    [readOnly, disabled, setValue],\n  )\n\n  useEffect(() => {\n    if (inputChangeFromRef.current === 'system') {\n      setInitialStringValue(\n        (value || initialValue) !== undefined\n          ? JSON.stringify(value ?? initialValue, null, 2)\n          : undefined,\n      )\n      setEditorKey(new Date().toString())\n    }\n\n    inputChangeFromRef.current = 'system'\n  }, [initialValue, value])\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        baseClass,\n        className,\n        showError && 'error',\n        (readOnly || disabled) && 'read-only',\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      style={styles}\n    >\n      <RenderCustomComponent\n        CustomComponent={Label}\n        Fallback={\n          <FieldLabel label={label} localized={localized} path={path} required={required} />\n        }\n      />\n      <div className={`${fieldBaseClass}__wrap`}>\n        <RenderCustomComponent\n          CustomComponent={Error}\n          Fallback={<FieldError message={jsonError} path={path} showError={showError} />}\n        />\n        {BeforeInput}\n        <CodeEditor\n          defaultLanguage=\"json\"\n          key={editorKey}\n          maxHeight={maxHeight}\n          onChange={handleChange}\n          onMount={handleMount}\n          options={editorOptions}\n          readOnly={readOnly || disabled}\n          value={initialStringValue}\n          wrapperProps={{\n            id: `field-${path?.replace(/\\./g, '__')}`,\n          }}\n        />\n        {AfterInput}\n      </div>\n      <RenderCustomComponent\n        CustomComponent={Description}\n        Fallback={<FieldDescription description={description} path={path} />}\n      />\n    </div>\n  )\n}\n\nexport const JSONField = withCondition(JSONFieldComponent)\n"],"mappings":"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","ignoreList":[]}