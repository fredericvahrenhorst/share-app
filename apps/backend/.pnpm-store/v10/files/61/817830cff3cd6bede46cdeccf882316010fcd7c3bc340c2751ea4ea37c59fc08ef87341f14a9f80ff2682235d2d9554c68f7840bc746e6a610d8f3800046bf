{"version":3,"sources":["../../src/queries/getLocalizedSortProperty.spec.ts"],"sourcesContent":["import type { Config, SanitizedConfig } from 'payload'\n\nimport { flattenAllFields, sanitizeConfig } from 'payload'\n\nimport { getLocalizedSortProperty } from './getLocalizedSortProperty.js'\n\nlet config: SanitizedConfig\n\ndescribe('get localized sort property', () => {\n  beforeAll(async () => {\n    config = await sanitizeConfig({\n      localization: {\n        defaultLocale: 'en',\n        fallback: true,\n        locales: ['en', 'es'],\n      },\n    } as Config)\n  })\n  it('passes through a non-localized sort property', () => {\n    const result = getLocalizedSortProperty({\n      config,\n      parentIsLocalized: false,\n      fields: [\n        {\n          name: 'title',\n          type: 'text',\n        },\n      ],\n      locale: 'en',\n      segments: ['title'],\n    })\n\n    expect(result).toStrictEqual('title')\n  })\n\n  it('properly localizes an un-localized sort property', () => {\n    const result = getLocalizedSortProperty({\n      config,\n      parentIsLocalized: false,\n      fields: [\n        {\n          name: 'title',\n          type: 'text',\n          localized: true,\n        },\n      ],\n      locale: 'en',\n      segments: ['title'],\n    })\n\n    expect(result).toStrictEqual('title.en')\n  })\n\n  it('keeps specifically asked-for localized sort properties', () => {\n    const result = getLocalizedSortProperty({\n      config,\n      parentIsLocalized: false,\n      fields: [\n        {\n          name: 'title',\n          type: 'text',\n          localized: true,\n        },\n      ],\n      locale: 'en',\n      segments: ['title', 'es'],\n    })\n\n    expect(result).toStrictEqual('title.es')\n  })\n\n  it('properly localizes nested sort properties', () => {\n    const result = getLocalizedSortProperty({\n      config,\n      parentIsLocalized: false,\n      fields: flattenAllFields({\n        fields: [\n          {\n            name: 'group',\n            type: 'group',\n            fields: [\n              {\n                name: 'title',\n                type: 'text',\n                localized: true,\n              },\n            ],\n          },\n        ],\n      }),\n      locale: 'en',\n      segments: ['group', 'title'],\n    })\n\n    expect(result).toStrictEqual('group.title.en')\n  })\n\n  it('keeps requested locale with nested sort properties', () => {\n    const result = getLocalizedSortProperty({\n      config,\n      parentIsLocalized: false,\n      fields: flattenAllFields({\n        fields: [\n          {\n            name: 'group',\n            type: 'group',\n            fields: [\n              {\n                name: 'title',\n                type: 'text',\n                localized: true,\n              },\n            ],\n          },\n        ],\n      }),\n      locale: 'en',\n      segments: ['group', 'title', 'es'],\n    })\n\n    expect(result).toStrictEqual('group.title.es')\n  })\n\n  it('properly localizes field within row', () => {\n    const result = getLocalizedSortProperty({\n      config,\n      parentIsLocalized: false,\n      fields: flattenAllFields({\n        fields: [\n          {\n            type: 'row',\n            fields: [\n              {\n                name: 'title',\n                type: 'text',\n                localized: true,\n              },\n            ],\n          },\n        ],\n      }),\n      locale: 'en',\n      segments: ['title'],\n    })\n\n    expect(result).toStrictEqual('title.en')\n  })\n\n  it('properly localizes field within named tab', () => {\n    const result = getLocalizedSortProperty({\n      config,\n      parentIsLocalized: false,\n      fields: flattenAllFields({\n        fields: [\n          {\n            type: 'tabs',\n            tabs: [\n              {\n                name: 'tab',\n                fields: [\n                  {\n                    name: 'title',\n                    type: 'text',\n                    localized: true,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      }),\n      locale: 'en',\n      segments: ['tab', 'title'],\n    })\n\n    expect(result).toStrictEqual('tab.title.en')\n  })\n\n  it('properly localizes field within unnamed tab', () => {\n    const result = getLocalizedSortProperty({\n      config,\n      parentIsLocalized: false,\n      fields: flattenAllFields({\n        fields: [\n          {\n            type: 'tabs',\n            tabs: [\n              {\n                fields: [\n                  {\n                    name: 'title',\n                    type: 'text',\n                    localized: true,\n                  },\n                ],\n                label: 'Tab',\n              },\n            ],\n          },\n        ],\n      }),\n      locale: 'en',\n      segments: ['title'],\n    })\n\n    expect(result).toStrictEqual('title.en')\n  })\n})\n"],"names":["flattenAllFields","sanitizeConfig","getLocalizedSortProperty","config","describe","beforeAll","localization","defaultLocale","fallback","locales","it","result","parentIsLocalized","fields","name","type","locale","segments","expect","toStrictEqual","localized","tabs","label"],"mappings":"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"}