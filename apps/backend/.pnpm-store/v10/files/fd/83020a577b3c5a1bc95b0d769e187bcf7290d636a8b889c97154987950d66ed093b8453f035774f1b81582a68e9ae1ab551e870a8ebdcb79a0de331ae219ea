{"version":3,"file":"DrawerContent.js","names":["getTranslation","useRouter","useSearchParams","combineWhereConstraints","mergeListSearchAndWhere","qs","React","useCallback","toast","useConfig","useLocale","useRouteCache","useTranslation","requests","parseSearchParams","ConfirmationModal","UnpublishManyDrawerContent","props","collection","slug","labels","plural","singular","drawerSlug","ids","onSuccess","selectAll","config","routes","api","serverURL","code","locale","i18n","t","searchParams","router","clearRouteCache","addDefaultError","error","queryString","useMemo","whereConstraints","_status","not_equals","queryWithSearch","collectionConfig","search","get","push","id","in","stringify","where","addQueryPrefix","handleUnpublish","patch","body","JSON","headers","language","then","res","json","deletedDocs","docs","length","successLabel","status","success","count","label","errors","message","description","map","join","replace","page","undefined","forEach","_err","_jsx","confirmingLabel","heading","modalSlug","onConfirm"],"sources":["../../../src/elements/UnpublishMany/DrawerContent.tsx"],"sourcesContent":["import type { Where } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { combineWhereConstraints, mergeListSearchAndWhere } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React, { useCallback } from 'react'\nimport { toast } from 'sonner'\n\nimport type { UnpublishManyProps } from './index.js'\n\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useRouteCache } from '../../providers/RouteCache/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { parseSearchParams } from '../../utilities/parseSearchParams.js'\nimport { ConfirmationModal } from '../ConfirmationModal/index.js'\n\ntype UnpublishManyDrawerContentProps = {\n  drawerSlug: string\n  ids: (number | string)[]\n  onSuccess?: () => void\n  selectAll: boolean\n} & UnpublishManyProps\n\nexport function UnpublishManyDrawerContent(props: UnpublishManyDrawerContentProps) {\n  const {\n    collection,\n    collection: { slug, labels: { plural, singular } } = {},\n    drawerSlug,\n    ids,\n    onSuccess,\n    selectAll,\n  } = props\n\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n  const { code: locale } = useLocale()\n  const { i18n, t } = useTranslation()\n  const searchParams = useSearchParams()\n  const router = useRouter()\n  const { clearRouteCache } = useRouteCache()\n  const addDefaultError = useCallback(() => {\n    toast.error(t('error:unknown'))\n  }, [t])\n\n  const queryString = React.useMemo((): string => {\n    const whereConstraints: Where[] = [\n      {\n        _status: {\n          not_equals: 'draft',\n        },\n      },\n    ]\n\n    const queryWithSearch = mergeListSearchAndWhere({\n      collectionConfig: collection,\n      search: searchParams.get('search'),\n    })\n\n    if (queryWithSearch) {\n      whereConstraints.push(queryWithSearch)\n    }\n\n    if (!selectAll) {\n      // If we're not selecting all, we need to select specific docs\n      whereConstraints.push({\n        id: {\n          in: ids || [],\n        },\n      })\n    }\n\n    return qs.stringify(\n      {\n        locale,\n        where: combineWhereConstraints(whereConstraints),\n      },\n      { addQueryPrefix: true },\n    )\n  }, [collection, searchParams, selectAll, ids, locale])\n\n  const handleUnpublish = useCallback(async () => {\n    await requests\n      .patch(`${serverURL}${api}/${slug}${queryString}`, {\n        body: JSON.stringify({\n          _status: 'draft',\n        }),\n        headers: {\n          'Accept-Language': i18n.language,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(async (res) => {\n        try {\n          const json = await res.json()\n\n          const deletedDocs = json?.docs.length || 0\n          const successLabel = deletedDocs > 1 ? plural : singular\n\n          if (res.status < 400 || deletedDocs > 0) {\n            toast.success(\n              t('general:updatedCountSuccessfully', {\n                count: deletedDocs,\n                label: getTranslation(successLabel, i18n),\n              }),\n            )\n\n            if (json?.errors.length > 0) {\n              toast.error(json.message, {\n                description: json.errors.map((error) => error.message).join('\\n'),\n              })\n            }\n\n            router.replace(\n              qs.stringify(\n                {\n                  ...parseSearchParams(searchParams),\n                  page: selectAll ? '1' : undefined,\n                },\n                { addQueryPrefix: true },\n              ),\n            )\n\n            clearRouteCache()\n\n            if (typeof onSuccess === 'function') {\n              onSuccess()\n            }\n\n            return null\n          }\n\n          if (json.errors) {\n            json.errors.forEach((error) => toast.error(error.message))\n          } else {\n            addDefaultError()\n          }\n          return false\n        } catch (_err) {\n          return addDefaultError()\n        }\n      })\n  }, [\n    serverURL,\n    api,\n    slug,\n    queryString,\n    i18n,\n    plural,\n    singular,\n    t,\n    router,\n    searchParams,\n    selectAll,\n    clearRouteCache,\n    addDefaultError,\n    onSuccess,\n  ])\n\n  return (\n    <ConfirmationModal\n      body={t('version:aboutToUnpublishSelection', { label: getTranslation(plural, i18n) })}\n      confirmingLabel={t('version:unpublishing')}\n      heading={t('version:confirmUnpublish')}\n      modalSlug={drawerSlug}\n      onConfirm={handleUnpublish}\n    />\n  )\n}\n"],"mappings":"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","ignoreList":[]}