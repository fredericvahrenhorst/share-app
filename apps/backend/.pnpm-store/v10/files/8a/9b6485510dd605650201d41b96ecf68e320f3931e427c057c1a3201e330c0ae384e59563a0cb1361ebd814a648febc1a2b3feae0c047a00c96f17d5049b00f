{"version":3,"file":"generateLabelFromValue.js","names":["fieldAffectsData","fieldIsPresentationalOnly","fieldShouldBeLocalized","generateLabelFromValue","field","locale","parentIsLocalized","req","value","relatedDoc","valueToReturn","relationTo","relatedCollection","payload","collections","config","useAsTitle","admin","useAsTitleField","fields","find","f","name","titleFieldIsLocalized","String","id","JSON","stringify"],"sources":["../../../../../../src/views/Version/RenderFieldsToDiff/fields/Relationship/generateLabelFromValue.ts"],"sourcesContent":["import type { PayloadRequest, RelationshipField, TypeWithID } from 'payload'\n\nimport { fieldAffectsData, fieldIsPresentationalOnly, fieldShouldBeLocalized } from 'payload/shared'\n\nimport type { PopulatedRelationshipValue } from './index.js'\n\nexport const generateLabelFromValue = ({\n  field,\n  locale,\n  parentIsLocalized,\n  req,\n  value,\n}: {\n  field: RelationshipField\n  locale: string\n  parentIsLocalized: boolean\n  req: PayloadRequest\n  value: PopulatedRelationshipValue\n}): string => {\n  let relatedDoc: TypeWithID\n  let valueToReturn: string = ''\n\n  const relationTo: string = 'relationTo' in value ? value.relationTo : (field.relationTo as string)\n\n  if (typeof value === 'object' && 'relationTo' in value) {\n    relatedDoc = value.value\n  } else {\n    // Non-polymorphic relationship\n    relatedDoc = value\n  }\n\n  const relatedCollection = req.payload.collections[relationTo].config\n\n  const useAsTitle = relatedCollection?.admin?.useAsTitle\n  const useAsTitleField = relatedCollection.fields.find(\n    (f) => fieldAffectsData(f) && !fieldIsPresentationalOnly(f) && f.name === useAsTitle,\n  )\n  let titleFieldIsLocalized = false\n\n  if (useAsTitleField && fieldAffectsData(useAsTitleField)) {\n    titleFieldIsLocalized = fieldShouldBeLocalized({ field: useAsTitleField, parentIsLocalized })\n  }\n\n  if (typeof relatedDoc?.[useAsTitle] !== 'undefined') {\n    valueToReturn = relatedDoc[useAsTitle]\n  } else {\n    valueToReturn = String(relatedDoc.id)\n  }\n\n  if (\n    typeof valueToReturn === 'object' &&\n    valueToReturn &&\n    titleFieldIsLocalized &&\n    valueToReturn?.[locale]\n  ) {\n    valueToReturn = valueToReturn[locale]\n  }\n\n  if (\n    (valueToReturn && typeof valueToReturn === 'object' && valueToReturn !== null) ||\n    typeof valueToReturn !== 'string'\n  ) {\n    valueToReturn = JSON.stringify(valueToReturn)\n  }\n\n  return valueToReturn\n}\n"],"mappings":"AAEA,SAASA,gBAAgB,EAAEC,yBAAyB,EAAEC,sBAAsB,QAAQ;AAIpF,OAAO,MAAMC,sBAAA,GAAyBA,CAAC;EACrCC,KAAK;EACLC,MAAM;EACNC,iBAAiB;EACjBC,GAAG;EACHC;AAAK,CAON;EACC,IAAIC,UAAA;EACJ,IAAIC,aAAA,GAAwB;EAE5B,MAAMC,UAAA,GAAqB,gBAAgBH,KAAA,GAAQA,KAAA,CAAMG,UAAU,GAAIP,KAAA,CAAMO,UAAU;EAEvF,IAAI,OAAOH,KAAA,KAAU,YAAY,gBAAgBA,KAAA,EAAO;IACtDC,UAAA,GAAaD,KAAA,CAAMA,KAAK;EAC1B,OAAO;IACL;IACAC,UAAA,GAAaD,KAAA;EACf;EAEA,MAAMI,iBAAA,GAAoBL,GAAA,CAAIM,OAAO,CAACC,WAAW,CAACH,UAAA,CAAW,CAACI,MAAM;EAEpE,MAAMC,UAAA,GAAaJ,iBAAA,EAAmBK,KAAA,EAAOD,UAAA;EAC7C,MAAME,eAAA,GAAkBN,iBAAA,CAAkBO,MAAM,CAACC,IAAI,CAClDC,CAAA,IAAMrB,gBAAA,CAAiBqB,CAAA,KAAM,CAACpB,yBAAA,CAA0BoB,CAAA,KAAMA,CAAA,CAAEC,IAAI,KAAKN,UAAA;EAE5E,IAAIO,qBAAA,GAAwB;EAE5B,IAAIL,eAAA,IAAmBlB,gBAAA,CAAiBkB,eAAA,GAAkB;IACxDK,qBAAA,GAAwBrB,sBAAA,CAAuB;MAAEE,KAAA,EAAOc,eAAA;MAAiBZ;IAAkB;EAC7F;EAEA,IAAI,OAAOG,UAAA,GAAaO,UAAA,CAAW,KAAK,aAAa;IACnDN,aAAA,GAAgBD,UAAU,CAACO,UAAA,CAAW;EACxC,OAAO;IACLN,aAAA,GAAgBc,MAAA,CAAOf,UAAA,CAAWgB,EAAE;EACtC;EAEA,IACE,OAAOf,aAAA,KAAkB,YACzBA,aAAA,IACAa,qBAAA,IACAb,aAAA,GAAgBL,MAAA,CAAO,EACvB;IACAK,aAAA,GAAgBA,aAAa,CAACL,MAAA,CAAO;EACvC;EAEA,IACEK,aAAC,IAAiB,OAAOA,aAAA,KAAkB,YAAYA,aAAA,KAAkB,QACzE,OAAOA,aAAA,KAAkB,UACzB;IACAA,aAAA,GAAgBgB,IAAA,CAAKC,SAAS,CAACjB,aAAA;EACjC;EAEA,OAAOA,aAAA;AACT","ignoreList":[]}