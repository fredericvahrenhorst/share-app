{"version":3,"file":"index.js","names":["c","_c","useModal","isImage","React","Fragment","useCallback","useEffect","useRef","useState","toast","FieldError","fieldBaseClass","useForm","useFormProcessing","useField","useConfig","useDocumentInfo","EditDepthProvider","useTranslation","UploadControlsProvider","useUploadControls","useUploadEdits","Button","Drawer","Dropzone","EditUpload","FileDetails","PreviewSizes","Thumbnail","baseClass","editDrawerSlug","sizePreviewSlug","validate","value","undefined","UploadActions","t0","$","customActions","enableAdjustments","enablePreviewSizes","mimeType","t","openModal","t1","t2","Symbol","for","bb0","fileTypeIsAdjustable","length","t3","map","_temp","_jsxs","className","children","_jsx","buttonStyle","margin","onClick","size","Upload","props","resetUploadEdits","updateUploadEdits","uploadEdits","Upload_v4","collectionSlug","initialState","onChange","uploadConfig","UploadControls","setUploadControlFile","setUploadControlFileName","setUploadControlFileUrl","uploadControlFile","uploadControlFileName","uploadControlFileUrl","config","routes","api","serverURL","setModified","id","docPermissions","savedDocumentData","setUploadStatus","isFormSubmitting","errorMessage","setValue","showError","path","fileSrc","setFileSrc","removedFile","setRemovedFile","filename","setFilename","name","showUrlInput","setShowUrlInput","fileUrl","setFileUrl","urlInputRef","inputRef","useServerSideFetch","pasteURL","allowList","handleFileChange","newFile","File","URL","createObjectURL","renameFile","fileToChange","newName","type","lastModified","handleFileNameChange","e","updatedFileName","target","handleFileSelection","files","fileToUpload","handleFileRemoval","onEditsSave","args","handleUrlSubmit","clientResponse","fetch","ok","Error","status","blob","fileName","decodeURIComponent","split","pop","file","_clientError","error","encodeURIComponent","serverResponse","_serverError","current","canRemoveUpload","update","delete","hasImageSizes","imageSizes","hasResizeOptions","Boolean","resizeOptions","focalPointEnabled","focalPoint","crop","showCrop","showFocalPoint","acceptMimeTypes","mimeTypes","join","imageCacheTag","cacheTags","updatedAt","handleControlFileUrl","handleControlFile","filter","message","customUploadActions","doc","handleRemove","hideRemoveFile","hideFileInputOnCreate","click","accept","hidden","ref","title","icon","iconStyle","round","tooltip","Header","slug","url","initialCrop","initialFocalPoint","x","focalX","y","focalY","onSave","hoverTitle","label","CustomAction","i"],"sources":["../../../src/elements/Upload/index.tsx"],"sourcesContent":["'use client'\nimport type { FormState, SanitizedCollectionConfig, UploadEdits } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { isImage } from 'payload/shared'\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport { FieldError } from '../../fields/FieldError/index.js'\nimport { fieldBaseClass } from '../../fields/shared/index.js'\nimport { useForm, useFormProcessing } from '../../forms/Form/index.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useDocumentInfo } from '../../providers/DocumentInfo/index.js'\nimport { EditDepthProvider } from '../../providers/EditDepth/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { UploadControlsProvider, useUploadControls } from '../../providers/UploadControls/index.js'\nimport { useUploadEdits } from '../../providers/UploadEdits/index.js'\nimport { Button } from '../Button/index.js'\nimport { Drawer } from '../Drawer/index.js'\nimport { Dropzone } from '../Dropzone/index.js'\nimport { EditUpload } from '../EditUpload/index.js'\nimport './index.scss'\nimport { FileDetails } from '../FileDetails/index.js'\nimport { PreviewSizes } from '../PreviewSizes/index.js'\nimport { Thumbnail } from '../Thumbnail/index.js'\n\nconst baseClass = 'file-field'\nexport const editDrawerSlug = 'edit-upload'\nexport const sizePreviewSlug = 'preview-sizes'\n\nconst validate = (value) => {\n  if (!value && value !== undefined) {\n    return 'A file is required.'\n  }\n\n  return true\n}\n\ntype UploadActionsArgs = {\n  readonly customActions?: React.ReactNode[]\n  readonly enableAdjustments: boolean\n  readonly enablePreviewSizes: boolean\n  readonly mimeType: string\n}\n\nexport const UploadActions = ({\n  customActions,\n  enableAdjustments,\n  enablePreviewSizes,\n  mimeType,\n}: UploadActionsArgs) => {\n  const { t } = useTranslation()\n  const { openModal } = useModal()\n\n  const fileTypeIsAdjustable =\n    isImage(mimeType) && mimeType !== 'image/svg+xml' && mimeType !== 'image/jxl'\n\n  if (!fileTypeIsAdjustable && (!customActions || customActions.length === 0)) {\n    return null\n  }\n\n  return (\n    <div className={`${baseClass}__upload-actions`}>\n      {fileTypeIsAdjustable && (\n        <React.Fragment>\n          {enablePreviewSizes && (\n            <Button\n              buttonStyle=\"pill\"\n              className={`${baseClass}__previewSizes`}\n              margin={false}\n              onClick={() => {\n                openModal(sizePreviewSlug)\n              }}\n              size=\"small\"\n            >\n              {t('upload:previewSizes')}\n            </Button>\n          )}\n          {enableAdjustments && (\n            <Button\n              buttonStyle=\"pill\"\n              className={`${baseClass}__edit`}\n              margin={false}\n              onClick={() => {\n                openModal(editDrawerSlug)\n              }}\n              size=\"small\"\n            >\n              {t('upload:editImage')}\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n\n      {customActions &&\n        customActions.map((CustomAction, i) => {\n          return <React.Fragment key={i}>{CustomAction}</React.Fragment>\n        })}\n    </div>\n  )\n}\n\nexport type UploadProps = {\n  readonly collectionSlug: string\n  readonly customActions?: React.ReactNode[]\n  readonly initialState?: FormState\n  readonly onChange?: (file?: File) => void\n  readonly uploadConfig: SanitizedCollectionConfig['upload']\n  readonly UploadControls?: React.ReactNode\n}\n\nexport const Upload: React.FC<UploadProps> = (props) => {\n  const { resetUploadEdits, updateUploadEdits, uploadEdits } = useUploadEdits()\n  return (\n    <UploadControlsProvider>\n      <Upload_v4\n        {...props}\n        resetUploadEdits={resetUploadEdits}\n        updateUploadEdits={updateUploadEdits}\n        uploadEdits={uploadEdits}\n      />\n    </UploadControlsProvider>\n  )\n}\n\nexport type UploadProps_v4 = {\n  readonly resetUploadEdits?: () => void\n  readonly updateUploadEdits?: (args: UploadEdits) => void\n  readonly uploadEdits?: UploadEdits\n} & UploadProps\n\nexport const Upload_v4: React.FC<UploadProps_v4> = (props) => {\n  const {\n    collectionSlug,\n    customActions,\n    initialState,\n    onChange,\n    resetUploadEdits,\n    updateUploadEdits,\n    uploadConfig,\n    UploadControls,\n    uploadEdits,\n  } = props\n\n  const {\n    setUploadControlFile,\n    setUploadControlFileName,\n    setUploadControlFileUrl,\n    uploadControlFile,\n    uploadControlFileName,\n    uploadControlFileUrl,\n  } = useUploadControls()\n\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n\n  const { t } = useTranslation()\n  const { setModified } = useForm()\n  const { id, docPermissions, savedDocumentData, setUploadStatus } = useDocumentInfo()\n  const isFormSubmitting = useFormProcessing()\n  const { errorMessage, setValue, showError, value } = useField<File>({\n    path: 'file',\n    validate,\n  })\n\n  const [fileSrc, setFileSrc] = useState<null | string>(null)\n  const [removedFile, setRemovedFile] = useState(false)\n  const [filename, setFilename] = useState<string>(value?.name || '')\n  const [showUrlInput, setShowUrlInput] = useState(false)\n  const [fileUrl, setFileUrl] = useState<string>('')\n\n  const urlInputRef = useRef<HTMLInputElement>(null)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const useServerSideFetch =\n    typeof uploadConfig?.pasteURL === 'object' && uploadConfig.pasteURL.allowList?.length > 0\n\n  const handleFileChange = useCallback(\n    (newFile: File) => {\n      if (newFile instanceof File) {\n        setFileSrc(URL.createObjectURL(newFile))\n      }\n\n      setValue(newFile)\n      setShowUrlInput(false)\n      setUploadControlFileUrl('')\n      setUploadControlFileName(null)\n      setUploadControlFile(null)\n\n      if (typeof onChange === 'function') {\n        onChange(newFile)\n      }\n    },\n    [onChange, setValue, setUploadControlFile, setUploadControlFileName, setUploadControlFileUrl],\n  )\n\n  const renameFile = (fileToChange: File, newName: string): File => {\n    // Creating a new File object with updated properties\n    const newFile = new File([fileToChange], newName, {\n      type: fileToChange.type,\n      lastModified: fileToChange.lastModified,\n    })\n    return newFile\n  }\n\n  const handleFileNameChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const updatedFileName = e.target.value\n\n      if (value) {\n        handleFileChange(renameFile(value, updatedFileName))\n        setFilename(updatedFileName)\n      }\n    },\n    [handleFileChange, value],\n  )\n\n  const handleFileSelection = useCallback(\n    (files: FileList) => {\n      const fileToUpload = files?.[0]\n      handleFileChange(fileToUpload)\n    },\n    [handleFileChange],\n  )\n\n  const handleFileRemoval = useCallback(() => {\n    setRemovedFile(true)\n    handleFileChange(null)\n    setFileSrc('')\n    setFileUrl('')\n    resetUploadEdits()\n    setShowUrlInput(false)\n    setUploadControlFileUrl('')\n    setUploadControlFileName(null)\n    setUploadControlFile(null)\n  }, [\n    handleFileChange,\n    resetUploadEdits,\n    setUploadControlFile,\n    setUploadControlFileName,\n    setUploadControlFileUrl,\n  ])\n\n  const onEditsSave = useCallback(\n    (args: UploadEdits) => {\n      setModified(true)\n      updateUploadEdits(args)\n    },\n    [setModified, updateUploadEdits],\n  )\n\n  const handleUrlSubmit = useCallback(async () => {\n    if (!fileUrl || uploadConfig?.pasteURL === false) {\n      return\n    }\n\n    setUploadStatus('uploading')\n    try {\n      // Attempt client-side fetch\n      const clientResponse = await fetch(fileUrl)\n\n      if (!clientResponse.ok) {\n        throw new Error(`Fetch failed with status: ${clientResponse.status}`)\n      }\n\n      const blob = await clientResponse.blob()\n      const fileName = uploadControlFileName || decodeURIComponent(fileUrl.split('/').pop() || '')\n      const file = new File([blob], fileName, { type: blob.type })\n\n      handleFileChange(file)\n      setUploadStatus('idle')\n      return // Exit if client-side fetch succeeds\n    } catch (_clientError) {\n      if (!useServerSideFetch) {\n        // If server-side fetch is not enabled, show client-side error\n        toast.error('Failed to fetch the file.')\n        setUploadStatus('failed')\n        return\n      }\n    }\n\n    // Attempt server-side fetch if client-side fetch fails and useServerSideFetch is true\n    try {\n      const pasteURL = `/${collectionSlug}/paste-url${id ? `/${id}?` : '?'}src=${encodeURIComponent(fileUrl)}`\n      const serverResponse = await fetch(`${serverURL}${api}${pasteURL}`)\n\n      if (!serverResponse.ok) {\n        throw new Error(`Fetch failed with status: ${serverResponse.status}`)\n      }\n\n      const blob = await serverResponse.blob()\n      const fileName = decodeURIComponent(fileUrl.split('/').pop() || '')\n      const file = new File([blob], fileName, { type: blob.type })\n\n      handleFileChange(file)\n      setUploadStatus('idle')\n    } catch (_serverError) {\n      toast.error('The provided URL is not allowed.')\n      setUploadStatus('failed')\n    }\n  }, [\n    api,\n    collectionSlug,\n    fileUrl,\n    handleFileChange,\n    id,\n    serverURL,\n    setUploadStatus,\n    uploadConfig,\n    uploadControlFileName,\n    useServerSideFetch,\n  ])\n\n  useEffect(() => {\n    if (initialState?.file?.value instanceof File) {\n      setFileSrc(URL.createObjectURL(initialState.file.value))\n      setRemovedFile(false)\n    }\n  }, [initialState])\n\n  useEffect(() => {\n    if (showUrlInput && urlInputRef.current) {\n      // urlInputRef.current.focus() // Focus on the remote-url input field when showUrlInput is true\n    }\n  }, [showUrlInput])\n\n  useEffect(() => {\n    if (isFormSubmitting) {\n      setRemovedFile(false)\n    }\n  }, [isFormSubmitting])\n\n  const canRemoveUpload =\n    docPermissions?.update && 'delete' in docPermissions && docPermissions?.delete\n\n  const hasImageSizes = uploadConfig?.imageSizes?.length > 0\n  const hasResizeOptions = Boolean(uploadConfig?.resizeOptions)\n  // Explicity check if set to true, default is undefined\n  const focalPointEnabled = uploadConfig?.focalPoint === true\n\n  const { crop: showCrop = true, focalPoint = true } = uploadConfig\n\n  const showFocalPoint = focalPoint && (hasImageSizes || hasResizeOptions || focalPointEnabled)\n\n  const acceptMimeTypes = uploadConfig.mimeTypes?.join(', ')\n\n  const imageCacheTag = uploadConfig?.cacheTags && savedDocumentData?.updatedAt\n\n  useEffect(() => {\n    const handleControlFileUrl = async () => {\n      if (uploadControlFileUrl) {\n        setFileUrl(uploadControlFileUrl)\n        await handleUrlSubmit()\n      }\n    }\n\n    void handleControlFileUrl()\n  }, [uploadControlFileUrl, handleUrlSubmit])\n\n  useEffect(() => {\n    const handleControlFile = () => {\n      if (uploadControlFile) {\n        handleFileChange(uploadControlFile)\n      }\n    }\n\n    void handleControlFile()\n  }, [uploadControlFile, handleFileChange])\n\n  return (\n    <div className={[fieldBaseClass, baseClass].filter(Boolean).join(' ')}>\n      <FieldError message={errorMessage} showError={showError} />\n      {savedDocumentData && savedDocumentData.filename && !removedFile && (\n        <FileDetails\n          collectionSlug={collectionSlug}\n          customUploadActions={customActions}\n          doc={savedDocumentData}\n          enableAdjustments={showCrop || showFocalPoint}\n          handleRemove={canRemoveUpload ? handleFileRemoval : undefined}\n          hasImageSizes={hasImageSizes}\n          hideRemoveFile={uploadConfig.hideRemoveFile}\n          imageCacheTag={imageCacheTag}\n          uploadConfig={uploadConfig}\n        />\n      )}\n      {((!uploadConfig.hideFileInputOnCreate && !savedDocumentData?.filename) || removedFile) && (\n        <div className={`${baseClass}__upload`}>\n          {!value && !showUrlInput && (\n            <Dropzone onChange={handleFileSelection}>\n              <div className={`${baseClass}__dropzoneContent`}>\n                <div className={`${baseClass}__dropzoneButtons`}>\n                  <Button\n                    buttonStyle=\"pill\"\n                    onClick={() => {\n                      if (inputRef.current) {\n                        inputRef.current.click()\n                      }\n                    }}\n                    size=\"small\"\n                  >\n                    {t('upload:selectFile')}\n                  </Button>\n                  <input\n                    accept={acceptMimeTypes}\n                    aria-hidden=\"true\"\n                    className={`${baseClass}__hidden-input`}\n                    hidden\n                    onChange={(e) => {\n                      if (e.target.files && e.target.files.length > 0) {\n                        handleFileSelection(e.target.files)\n                      }\n                    }}\n                    ref={inputRef}\n                    type=\"file\"\n                  />\n                  {uploadConfig?.pasteURL !== false && (\n                    <Fragment>\n                      <span className={`${baseClass}__orText`}>{t('general:or')}</span>\n                      <Button\n                        buttonStyle=\"pill\"\n                        onClick={() => {\n                          setShowUrlInput(true)\n                          setUploadControlFileUrl('')\n                          setUploadControlFile(null)\n                          setUploadControlFileName(null)\n                        }}\n                        size=\"small\"\n                      >\n                        {t('upload:pasteURL')}\n                      </Button>\n                    </Fragment>\n                  )}\n\n                  {UploadControls ? UploadControls : null}\n                </div>\n                <p className={`${baseClass}__dragAndDropText`}>\n                  {t('general:or')} {t('upload:dragAndDrop')}\n                </p>\n              </div>\n            </Dropzone>\n          )}\n          {showUrlInput && (\n            <React.Fragment>\n              <div className={`${baseClass}__remote-file-wrap`}>\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <input\n                  className={`${baseClass}__remote-file`}\n                  onChange={(e) => {\n                    setFileUrl(e.target.value)\n                  }}\n                  ref={urlInputRef}\n                  title={fileUrl}\n                  type=\"text\"\n                  value={fileUrl}\n                />\n                <div className={`${baseClass}__add-file-wrap`}>\n                  <button\n                    className={`${baseClass}__add-file`}\n                    onClick={() => {\n                      void handleUrlSubmit()\n                    }}\n                    type=\"button\"\n                  >\n                    {t('upload:addFile')}\n                  </button>\n                </div>\n              </div>\n              <Button\n                buttonStyle=\"icon-label\"\n                className={`${baseClass}__remove`}\n                icon=\"x\"\n                iconStyle=\"with-border\"\n                onClick={() => {\n                  setShowUrlInput(false)\n                  setUploadControlFileUrl('')\n                  setUploadControlFile(null)\n                  setUploadControlFileName(null)\n                }}\n                round\n                tooltip={t('general:cancel')}\n              />\n            </React.Fragment>\n          )}\n          {value && fileSrc && (\n            <React.Fragment>\n              <div className={`${baseClass}__thumbnail-wrap`}>\n                <Thumbnail\n                  collectionSlug={collectionSlug}\n                  fileSrc={isImage(value.type) ? fileSrc : null}\n                />\n              </div>\n              <div className={`${baseClass}__file-adjustments`}>\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <input\n                  className={`${baseClass}__filename`}\n                  onChange={handleFileNameChange}\n                  title={filename || value.name}\n                  type=\"text\"\n                  value={filename || value.name}\n                />\n                <UploadActions\n                  customActions={customActions}\n                  enableAdjustments={showCrop || showFocalPoint}\n                  enablePreviewSizes={hasImageSizes && savedDocumentData?.filename && !removedFile}\n                  mimeType={value.type}\n                />\n              </div>\n              <Button\n                buttonStyle=\"icon-label\"\n                className={`${baseClass}__remove`}\n                icon=\"x\"\n                iconStyle=\"with-border\"\n                onClick={handleFileRemoval}\n                round\n                tooltip={t('general:cancel')}\n              />\n            </React.Fragment>\n          )}\n        </div>\n      )}\n      {(value || savedDocumentData?.filename) && (\n        <EditDepthProvider>\n          <Drawer Header={null} slug={editDrawerSlug}>\n            <EditUpload\n              fileName={value?.name || savedDocumentData?.filename}\n              fileSrc={savedDocumentData?.url || fileSrc}\n              imageCacheTag={imageCacheTag}\n              initialCrop={uploadEdits?.crop ?? undefined}\n              initialFocalPoint={{\n                x: uploadEdits?.focalPoint?.x || savedDocumentData?.focalX || 50,\n                y: uploadEdits?.focalPoint?.y || savedDocumentData?.focalY || 50,\n              }}\n              onSave={onEditsSave}\n              showCrop={showCrop}\n              showFocalPoint={showFocalPoint}\n            />\n          </Drawer>\n        </EditDepthProvider>\n      )}\n      {savedDocumentData && hasImageSizes && (\n        <Drawer\n          className={`${baseClass}__previewDrawer`}\n          hoverTitle\n          slug={sizePreviewSlug}\n          title={t('upload:sizesFor', { label: savedDocumentData.filename })}\n        >\n          <PreviewSizes\n            doc={savedDocumentData}\n            imageCacheTag={imageCacheTag}\n            uploadConfig={uploadConfig}\n          />\n        </Drawer>\n      )}\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]}