{"version":3,"file":"BlockContent.js","names":["c","_c","RenderFields","useFormSubmitted","React","createContext","useMemo","BlockComponentContext","initialState","useBlockComponentContext","use","BlockContent","props","$","BlockDrawer","Collapsible","CustomBlock","EditButton","errorCount","formSchema","nodeKey","RemoveButton","hasSubmitted","fieldHasErrors","t0","t1","props_0","_jsx","editButton","Label","removeButton","children","CollapsibleWithErrorProps","t2","_jsxs","value","BlockCollapsible","fields","forceRender","parentIndexPath","parentPath","parentSchemaPath","permissions"],"sources":["../../../../../src/features/blocks/client/component/BlockContent.tsx"],"sourcesContent":["'use client'\nimport type { ClientField, FormState } from 'payload'\n\nimport { RenderFields, useFormSubmitted } from '@payloadcms/ui'\nimport React, { createContext, useMemo } from 'react'\n\ntype Props = {\n  baseClass: string\n  BlockDrawer: React.FC\n  Collapsible: React.FC<{\n    children?: React.ReactNode\n    editButton?: boolean\n    errorCount?: number\n    fieldHasErrors?: boolean\n    /**\n     * Override the default label with a custom label\n     */\n    Label?: React.ReactNode\n    removeButton?: boolean\n  }>\n  CustomBlock: React.ReactNode\n  EditButton: React.FC\n  errorCount: number\n  formSchema: ClientField[]\n  initialState: false | FormState | undefined\n\n  nodeKey: string\n  RemoveButton: React.FC\n}\n\ntype BlockComponentContextType = {\n  BlockCollapsible?: React.FC<{\n    children?: React.ReactNode\n    editButton?: boolean\n    /**\n     * Override the default label with a custom label\n     */\n    Label?: React.ReactNode\n    removeButton?: boolean\n  }>\n  EditButton?: React.FC\n  initialState: false | FormState | undefined\n\n  nodeKey?: string\n  RemoveButton?: React.FC\n}\n\nconst BlockComponentContext = createContext<BlockComponentContextType>({\n  initialState: false,\n})\n\nexport const useBlockComponentContext = () => React.use(BlockComponentContext)\n\n/**\n * The actual content of the Block. This should be INSIDE a Form component,\n * scoped to the block. All format operations in here are thus scoped to the block's form, and\n * not the whole document.\n */\nexport const BlockContent: React.FC<Props> = (props) => {\n  const {\n    BlockDrawer,\n    Collapsible,\n    CustomBlock,\n    EditButton,\n    errorCount,\n    formSchema,\n    initialState,\n    nodeKey,\n    RemoveButton,\n  } = props\n\n  const hasSubmitted = useFormSubmitted()\n\n  const fieldHasErrors = hasSubmitted && errorCount > 0\n\n  const CollapsibleWithErrorProps = useMemo(\n    () =>\n      (props: {\n        children?: React.ReactNode\n        editButton?: boolean\n\n        /**\n         * Override the default label with a custom label\n         */\n        Label?: React.ReactNode\n        removeButton?: boolean\n      }) => (\n        <Collapsible\n          editButton={props.editButton}\n          errorCount={errorCount}\n          fieldHasErrors={fieldHasErrors}\n          Label={props.Label}\n          removeButton={props.removeButton}\n        >\n          {props.children}\n        </Collapsible>\n      ),\n    [Collapsible, fieldHasErrors, errorCount],\n  )\n\n  return CustomBlock ? (\n    <BlockComponentContext\n      value={{\n        BlockCollapsible: CollapsibleWithErrorProps,\n        EditButton,\n        initialState,\n        nodeKey,\n        RemoveButton,\n      }}\n    >\n      {CustomBlock}\n      <BlockDrawer />\n    </BlockComponentContext>\n  ) : (\n    <CollapsibleWithErrorProps>\n      <RenderFields\n        fields={formSchema}\n        forceRender={true}\n        parentIndexPath=\"\"\n        parentPath={''}\n        parentSchemaPath=\"\"\n        permissions={true}\n      />\n    </CollapsibleWithErrorProps>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAGA,SAASC,YAAY,EAAEC,gBAAgB,QAAQ;AAC/C,OAAOC,KAAA,IAASC,aAAa,EAAEC,OAAO,QAAQ;AA2C9C,MAAMC,qBAAA,gBAAwBF,aAAA,CAAyC;EACrEG,YAAA,EAAc;AAChB;AAEA,OAAO,MAAMC,wBAAA,GAA2BA,CAAA,KAAML,KAAA,CAAMM,GAAG,CAACH,qBAAA;AAExD;;;;;AAKA,OAAO,MAAMI,YAAA,GAAgCC,KAAA;EAAA,MAAAC,CAAA,GAAAZ,EAAA;EAC3C;IAAAa,WAAA;IAAAC,WAAA;IAAAC,WAAA;IAAAC,UAAA;IAAAC,UAAA;IAAAC,UAAA;IAAAX,YAAA;IAAAY,OAAA;IAAAC;EAAA,IAUIT,KAAA;EAEJ,MAAAU,YAAA,GAAqBnB,gBAAA;EAErB,MAAAoB,cAAA,GAAuBD,YAAA,IAAgBJ,UAAA,IAAa;EAAA,IAAAM,EAAA;EAAA,IAAAC,EAAA;EAAA,IAAAZ,CAAA,QAAAE,WAAA,IAAAF,CAAA,QAAAK,UAAA,IAAAL,CAAA,QAAAU,cAAA;IAIhDE,EAAA,GAAAC,OAAA,IAUEC,IAAA,CAACZ,WAAA;MAAAa,UAAA,EACahB,OAAA,CAAAgB,UAAA;MAAAV,UAAA;MAAAK,cAAA;MAAAM,KAAA,EAGLjB,OAAA,CAAAiB,KAAA;MAAAC,YAAA,EACOlB,OAAA,CAAAkB,YAAA;MAAAC,QAAA,EAEbnB,OAAA,CAAAmB;IAAA,C;;;;;;;;OAjBLN,E;EAFJ,MAAAO,yBAAA,GAAkCR,EAsBS;EAAA,IAAAS,EAAA;EAAA,IAAApB,CAAA,QAAAC,WAAA,IAAAD,CAAA,QAAAmB,yBAAA,IAAAnB,CAAA,QAAAG,WAAA,IAAAH,CAAA,QAAAI,UAAA,IAAAJ,CAAA,QAAAQ,YAAA,IAAAR,CAAA,QAAAM,UAAA,IAAAN,CAAA,SAAAL,YAAA,IAAAK,CAAA,SAAAO,OAAA;IAGpCa,EAAA,GAAAjB,WAAA,GACLkB,KAAA,CAAA3B,qBAAA;MAAA4B,KAAA;QAAAC,gBAAA,EAEsBJ,yBAAA;QAAAf,UAAA;QAAAT,YAAA;QAAAY,OAAA;QAAAC;MAAA;MAAAU,QAAA,GAOnBf,WAAA,EACDW,IAAA,CAACb,WAAA;IAAA,C,IAGHa,IAAA,CAACK,yBAAA;MAAAD,QAAA,EACCJ,IAAA,CAAAzB,YAAA;QAAAmC,MAAA,EACUlB,UAAA;QAAAmB,WAAA;QAAAC,eAAA,EAEQ;QAAAC,UAAA,EACJ;QAAAC,gBAAA,EACK;QAAAC,WAAA;MAAA,C;;;;;;;;;;;;;;SApBhBT,E;CAyBT","ignoreList":[]}