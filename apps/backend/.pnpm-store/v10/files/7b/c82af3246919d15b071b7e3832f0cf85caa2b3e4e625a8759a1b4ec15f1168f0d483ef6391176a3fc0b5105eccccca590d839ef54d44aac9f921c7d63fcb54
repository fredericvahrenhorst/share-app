{"version":3,"sources":["../../src/transactions/rollbackTransaction.ts"],"sourcesContent":["import type { RollbackTransaction } from 'payload'\n\nimport type { MongooseAdapter } from '../index.js'\n\nexport const rollbackTransaction: RollbackTransaction = async function rollbackTransaction(\n  this: MongooseAdapter,\n  incomingID = '',\n) {\n  let transactionID: number | string\n\n  if (incomingID instanceof Promise) {\n    transactionID = await incomingID\n  } else {\n    transactionID = incomingID\n  }\n\n  // if multiple operations are using the same transaction, the first will flow through and delete the session.\n  // subsequent calls should be ignored.\n  if (!this.sessions[transactionID]) {\n    return\n  }\n\n  // when session exists but is not inTransaction something unexpected is happening to the session\n  if (!this.sessions[transactionID]?.inTransaction()) {\n    this.payload.logger.warn('rollbackTransaction called when no transaction exists')\n    delete this.sessions[transactionID]\n    return\n  }\n\n  // the first call for rollback should be aborted and deleted causing any other operations with the same transaction to fail\n  try {\n    await this.sessions[transactionID]?.abortTransaction()\n    await this.sessions[transactionID]?.endSession()\n  } catch (error) {\n    // ignore the error as it is likely a race condition from multiple errors\n  }\n  delete this.sessions[transactionID]\n}\n"],"names":["rollbackTransaction","incomingID","transactionID","Promise","sessions","inTransaction","payload","logger","warn","abortTransaction","endSession","error"],"mappings":"AAIA,OAAO,MAAMA,sBAA2C,eAAeA,oBAErEC,aAAa,EAAE;IAEf,IAAIC;IAEJ,IAAID,sBAAsBE,SAAS;QACjCD,gBAAgB,MAAMD;IACxB,OAAO;QACLC,gBAAgBD;IAClB;IAEA,6GAA6G;IAC7G,sCAAsC;IACtC,IAAI,CAAC,IAAI,CAACG,QAAQ,CAACF,cAAc,EAAE;QACjC;IACF;IAEA,gGAAgG;IAChG,IAAI,CAAC,IAAI,CAACE,QAAQ,CAACF,cAAc,EAAEG,iBAAiB;QAClD,IAAI,CAACC,OAAO,CAACC,MAAM,CAACC,IAAI,CAAC;QACzB,OAAO,IAAI,CAACJ,QAAQ,CAACF,cAAc;QACnC;IACF;IAEA,2HAA2H;IAC3H,IAAI;QACF,MAAM,IAAI,CAACE,QAAQ,CAACF,cAAc,EAAEO;QACpC,MAAM,IAAI,CAACL,QAAQ,CAACF,cAAc,EAAEQ;IACtC,EAAE,OAAOC,OAAO;IACd,yEAAyE;IAC3E;IACA,OAAO,IAAI,CAACP,QAAQ,CAACF,cAAc;AACrC,EAAC"}