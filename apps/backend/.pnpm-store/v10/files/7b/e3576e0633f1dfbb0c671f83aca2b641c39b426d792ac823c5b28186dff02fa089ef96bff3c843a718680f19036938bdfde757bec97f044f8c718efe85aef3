{"version":3,"file":"metadata.js","names":["getTranslation","generateMetadata","generateEditViewMetadata","collectionConfig","config","globalConfig","i18n","isEditing","view","t","entityLabel","labels","singular","label","metaToUse","admin","meta","description","keywords","title","ogToUse","openGraph","components","views","edit","serverURL"],"sources":["../../../src/views/Edit/metadata.ts"],"sourcesContent":["import type { Metadata } from 'next'\nimport type { MetaConfig } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\n\nimport type { GenerateEditViewMetadata } from '../Document/getMetaBySegment.js'\n\nimport { generateMetadata } from '../../utilities/meta.js'\n\n/**\n * @todo Remove the type assertion. This is currently required because of how the `Metadata` type from `next` consumes the `URL` type.\n */\nexport const generateEditViewMetadata: GenerateEditViewMetadata = async ({\n  collectionConfig,\n  config,\n  globalConfig,\n  i18n,\n  isEditing,\n  view = 'default',\n}): Promise<Metadata> => {\n  const { t } = i18n\n\n  const entityLabel = collectionConfig\n    ? getTranslation(collectionConfig.labels.singular, i18n)\n    : globalConfig\n      ? getTranslation(globalConfig.label, i18n)\n      : ''\n\n  const metaToUse: MetaConfig = {\n    ...(config.admin.meta || {}),\n    description: `${isEditing ? t('general:editing') : t('general:creating')} - ${entityLabel}`,\n    keywords: `${entityLabel}, Payload, CMS`,\n    title: `${isEditing ? t('general:editing') : t('general:creating')} - ${entityLabel}`,\n  }\n\n  const ogToUse: MetaConfig['openGraph'] = {\n    title: `${isEditing ? t('general:edit') : t('general:edit')} - ${entityLabel}`,\n    ...(config.admin.meta.openGraph || {}),\n    ...((collectionConfig\n      ? {\n          ...(collectionConfig?.admin.meta?.openGraph || {}),\n          ...(collectionConfig?.admin?.components?.views?.edit?.[view]?.meta?.openGraph || {}),\n        }\n      : {}) as MetaConfig['openGraph']),\n    ...((globalConfig\n      ? {\n          ...(globalConfig?.admin.meta?.openGraph || {}),\n          ...(globalConfig?.admin?.components?.views?.edit?.[view]?.meta?.openGraph || {}),\n        }\n      : {}) as MetaConfig['openGraph']),\n  }\n\n  return generateMetadata({\n    ...metaToUse,\n    openGraph: ogToUse,\n    ...((collectionConfig\n      ? {\n          ...(collectionConfig?.admin.meta || {}),\n          ...(collectionConfig?.admin?.components?.views?.edit?.[view]?.meta || {}),\n        }\n      : {}) as MetaConfig),\n    ...((globalConfig\n      ? {\n          ...(globalConfig?.admin.meta || {}),\n          ...(globalConfig?.admin?.components?.views?.edit?.[view]?.meta || {}),\n        }\n      : {}) as MetaConfig),\n    serverURL: config.serverURL,\n  })\n}\n"],"mappings":"AAGA,SAASA,cAAc,QAAQ;AAI/B,SAASC,gBAAgB,QAAQ;AAEjC;;;AAGA,OAAO,MAAMC,wBAAA,GAAqD,MAAAA,CAAO;EACvEC,gBAAgB;EAChBC,MAAM;EACNC,YAAY;EACZC,IAAI;EACJC,SAAS;EACTC,IAAA,GAAO;AAAS,CACjB;EACC,MAAM;IAAEC;EAAC,CAAE,GAAGH,IAAA;EAEd,MAAMI,WAAA,GAAcP,gBAAA,GAChBH,cAAA,CAAeG,gBAAA,CAAiBQ,MAAM,CAACC,QAAQ,EAAEN,IAAA,IACjDD,YAAA,GACEL,cAAA,CAAeK,YAAA,CAAaQ,KAAK,EAAEP,IAAA,IACnC;EAEN,MAAMQ,SAAA,GAAwB;IAC5B,IAAIV,MAAA,CAAOW,KAAK,CAACC,IAAI,IAAI,CAAC,CAAC;IAC3BC,WAAA,EAAa,GAAGV,SAAA,GAAYE,CAAA,CAAE,qBAAqBA,CAAA,CAAE,yBAAyBC,WAAA,EAAa;IAC3FQ,QAAA,EAAU,GAAGR,WAAA,gBAA2B;IACxCS,KAAA,EAAO,GAAGZ,SAAA,GAAYE,CAAA,CAAE,qBAAqBA,CAAA,CAAE,yBAAyBC,WAAA;EAC1E;EAEA,MAAMU,OAAA,GAAmC;IACvCD,KAAA,EAAO,GAAGZ,SAAA,GAAYE,CAAA,CAAE,kBAAkBA,CAAA,CAAE,qBAAqBC,WAAA,EAAa;IAC9E,IAAIN,MAAA,CAAOW,KAAK,CAACC,IAAI,CAACK,SAAS,IAAI,CAAC,CAAC;IACrC,IAAKlB,gBAAA,GACD;MACE,IAAIA,gBAAA,EAAkBY,KAAA,CAAMC,IAAA,EAAMK,SAAA,IAAa,CAAC,CAAC;MACjD,IAAIlB,gBAAA,EAAkBY,KAAA,EAAOO,UAAA,EAAYC,KAAA,EAAOC,IAAA,GAAOhB,IAAA,CAAK,EAAEQ,IAAA,EAAMK,SAAA,IAAa,CAAC,CAAC;IACrF,IACA,CAAC,CAAC;IACN,IAAKhB,YAAA,GACD;MACE,IAAIA,YAAA,EAAcU,KAAA,CAAMC,IAAA,EAAMK,SAAA,IAAa,CAAC,CAAC;MAC7C,IAAIhB,YAAA,EAAcU,KAAA,EAAOO,UAAA,EAAYC,KAAA,EAAOC,IAAA,GAAOhB,IAAA,CAAK,EAAEQ,IAAA,EAAMK,SAAA,IAAa,CAAC,CAAC;IACjF,IACA,CAAC,CAAC;EACR;EAEA,OAAOpB,gBAAA,CAAiB;IACtB,GAAGa,SAAS;IACZO,SAAA,EAAWD,OAAA;IACX,IAAKjB,gBAAA,GACD;MACE,IAAIA,gBAAA,EAAkBY,KAAA,CAAMC,IAAA,IAAQ,CAAC,CAAC;MACtC,IAAIb,gBAAA,EAAkBY,KAAA,EAAOO,UAAA,EAAYC,KAAA,EAAOC,IAAA,GAAOhB,IAAA,CAAK,EAAEQ,IAAA,IAAQ,CAAC,CAAC;IAC1E,IACA,CAAC,CAAC;IACN,IAAKX,YAAA,GACD;MACE,IAAIA,YAAA,EAAcU,KAAA,CAAMC,IAAA,IAAQ,CAAC,CAAC;MAClC,IAAIX,YAAA,EAAcU,KAAA,EAAOO,UAAA,EAAYC,KAAA,EAAOC,IAAA,GAAOhB,IAAA,CAAK,EAAEQ,IAAA,IAAQ,CAAC,CAAC;IACtE,IACA,CAAC,CAAC;IACNS,SAAA,EAAWrB,MAAA,CAAOqB;EACpB;AACF","ignoreList":[]}