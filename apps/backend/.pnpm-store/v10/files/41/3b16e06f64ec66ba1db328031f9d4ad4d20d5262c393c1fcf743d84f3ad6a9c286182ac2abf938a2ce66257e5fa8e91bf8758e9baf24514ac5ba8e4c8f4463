{"version":3,"file":"DrawerContent.js","names":["useModal","React","useCallback","useEffect","useRef","useState","toast","LoadingOverlay","useConfig","useLocale","useServerFunctions","useTranslation","abortAndIgnore","handleAbortRef","DocumentDrawerContextProvider","DocumentDrawerContent","id","existingDocID","collectionSlug","disableActions","drawerSlug","initialData","onDelete","onDeleteFromProps","onDuplicate","onDuplicateFromProps","onSave","onSaveFromProps","overrideEntityVisibility","redirectAfterCreate","redirectAfterDelete","redirectAfterDuplicate","getEntityConfig","locale","collectionConfig","abortGetDocumentViewRef","closeModal","t","renderDocument","DocumentView","setDocumentView","undefined","isLoading","setIsLoading","hasInitialized","getDocumentView","docID","showLoadingIndicator","controller","fetchDocumentView","result","signal","Document","error","message","current","args","doc","clearDoc","abortGetDocumentView","_jsx"],"sources":["../../../src/elements/DocumentDrawer/DrawerContent.tsx"],"sourcesContent":["'use client'\n\nimport { useModal } from '@faceless-ui/modal'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport type { DocumentDrawerProps } from './types.js'\n\nimport { LoadingOverlay } from '../../elements/Loading/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useServerFunctions } from '../../providers/ServerFunctions/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { abortAndIgnore, handleAbortRef } from '../../utilities/abortAndIgnore.js'\nimport { DocumentDrawerContextProvider } from './Provider.js'\n\nexport const DocumentDrawerContent: React.FC<DocumentDrawerProps> = ({\n  id: existingDocID,\n  collectionSlug,\n  disableActions,\n  drawerSlug,\n  initialData,\n  onDelete: onDeleteFromProps,\n  onDuplicate: onDuplicateFromProps,\n  onSave: onSaveFromProps,\n  overrideEntityVisibility = true,\n  redirectAfterCreate,\n  redirectAfterDelete,\n  redirectAfterDuplicate,\n}) => {\n  const { getEntityConfig } = useConfig()\n  const locale = useLocale()\n\n  const [collectionConfig] = useState(() => getEntityConfig({ collectionSlug }))\n\n  const abortGetDocumentViewRef = React.useRef<AbortController>(null)\n\n  const { closeModal } = useModal()\n  const { t } = useTranslation()\n\n  const { renderDocument } = useServerFunctions()\n\n  const [DocumentView, setDocumentView] = useState<React.ReactNode>(undefined)\n  const [isLoading, setIsLoading] = useState(true)\n  const hasInitialized = useRef(false)\n\n  const getDocumentView = useCallback(\n    (docID?: number | string, showLoadingIndicator: boolean = false) => {\n      const controller = handleAbortRef(abortGetDocumentViewRef)\n\n      const fetchDocumentView = async () => {\n        if (showLoadingIndicator) {\n          setIsLoading(true)\n        }\n\n        try {\n          const result = await renderDocument({\n            collectionSlug,\n            disableActions,\n            docID,\n            drawerSlug,\n            initialData,\n            locale,\n            overrideEntityVisibility,\n            redirectAfterCreate,\n            redirectAfterDelete: redirectAfterDelete !== undefined ? redirectAfterDelete : false,\n            redirectAfterDuplicate:\n              redirectAfterDuplicate !== undefined ? redirectAfterDuplicate : false,\n            signal: controller.signal,\n          })\n\n          if (result?.Document) {\n            setDocumentView(result.Document)\n            setIsLoading(false)\n          }\n        } catch (error) {\n          toast.error(error?.message || t('error:unspecific'))\n          closeModal(drawerSlug)\n          // toast.error(data?.errors?.[0].message || t('error:unspecific'))\n        }\n\n        abortGetDocumentViewRef.current = null\n      }\n\n      void fetchDocumentView()\n    },\n    [\n      collectionSlug,\n      disableActions,\n      drawerSlug,\n      initialData,\n      redirectAfterDelete,\n      redirectAfterDuplicate,\n      renderDocument,\n      redirectAfterCreate,\n      closeModal,\n      overrideEntityVisibility,\n      t,\n      locale,\n    ],\n  )\n\n  const onSave = useCallback<DocumentDrawerProps['onSave']>(\n    (args) => {\n      getDocumentView(args.doc.id)\n\n      if (typeof onSaveFromProps === 'function') {\n        void onSaveFromProps({\n          ...args,\n          collectionConfig,\n        })\n      }\n    },\n    [onSaveFromProps, collectionConfig, getDocumentView],\n  )\n\n  const onDuplicate = useCallback<DocumentDrawerProps['onDuplicate']>(\n    (args) => {\n      getDocumentView(args.doc.id)\n\n      if (typeof onDuplicateFromProps === 'function') {\n        void onDuplicateFromProps({\n          ...args,\n          collectionConfig,\n        })\n      }\n    },\n    [onDuplicateFromProps, collectionConfig, getDocumentView],\n  )\n\n  const onDelete = useCallback<DocumentDrawerProps['onDelete']>(\n    (args) => {\n      if (typeof onDeleteFromProps === 'function') {\n        void onDeleteFromProps({\n          ...args,\n          collectionConfig,\n        })\n      }\n\n      closeModal(drawerSlug)\n    },\n    [onDeleteFromProps, closeModal, drawerSlug, collectionConfig],\n  )\n\n  const clearDoc = useCallback(() => {\n    getDocumentView(undefined, true)\n  }, [getDocumentView])\n\n  useEffect(() => {\n    if (!DocumentView && !hasInitialized.current) {\n      getDocumentView(existingDocID, true)\n      hasInitialized.current = true\n    }\n  }, [DocumentView, getDocumentView, existingDocID])\n\n  // Cleanup any pending requests when the component unmounts\n  useEffect(() => {\n    const abortGetDocumentView = abortGetDocumentViewRef.current\n\n    return () => {\n      abortAndIgnore(abortGetDocumentView)\n    }\n  }, [])\n\n  if (isLoading) {\n    return <LoadingOverlay />\n  }\n\n  return (\n    <DocumentDrawerContextProvider\n      clearDoc={clearDoc}\n      drawerSlug={drawerSlug}\n      onDelete={onDelete}\n      onDuplicate={onDuplicate}\n      onSave={onSave}\n    >\n      {DocumentView}\n    </DocumentDrawerContextProvider>\n  )\n}\n"],"mappings":"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","ignoreList":[]}