{"version":3,"file":"index.js","names":["getTranslation","React","CloseModalButton","useListDrawerContext","ListFolderPills","DrawerRelationshipSelect","ListDrawerCreateNewDocButton","ListHeader","ListBulkUploadButton","ListCreateNewButton","useConfig","ListSelection","drawerBaseClass","CollectionListHeader","className","collectionConfig","Description","disableBulkDelete","disableBulkEdit","hasCreatePermission","i18n","isBulkUploadEnabled","newDocumentURL","onBulkUploadSuccess","openBulkUpload","smallBreak","viewType","config","getEntityConfig","drawerSlug","isInDrawer","selectedOption","_jsx","Actions","slug","AfterListHeaderContent","_jsxs","_Fragment","title","collectionSlug","value","labels","plural","TitleActions","filter","Boolean","label","folders","folderCollectionSlug"],"sources":["../../../../src/views/List/ListHeader/index.tsx"],"sourcesContent":["import type { I18nClient, TFunction } from '@payloadcms/translations'\nimport type { ClientCollectionConfig } from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport React from 'react'\n\nimport { CloseModalButton } from '../../../elements/CloseModalButton/index.js'\nimport { useListDrawerContext } from '../../../elements/ListDrawer/Provider.js'\nimport { ListFolderPills } from '../../../elements/ListFolderPills/index.js'\nimport { DrawerRelationshipSelect } from '../../../elements/ListHeader/DrawerRelationshipSelect/index.js'\nimport { ListDrawerCreateNewDocButton } from '../../../elements/ListHeader/DrawerTitleActions/index.js'\nimport { ListHeader } from '../../../elements/ListHeader/index.js'\nimport {\n  ListBulkUploadButton,\n  ListCreateNewButton,\n} from '../../../elements/ListHeader/TitleActions/index.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport { ListSelection } from '../ListSelection/index.js'\nimport './index.scss'\n\nconst drawerBaseClass = 'list-drawer'\n\nexport type ListHeaderProps = {\n  Actions?: React.ReactNode[]\n  className?: string\n  collectionConfig: ClientCollectionConfig\n  Description?: React.ReactNode\n  disableBulkDelete?: boolean\n  disableBulkEdit?: boolean\n  hasCreatePermission: boolean\n  i18n: I18nClient\n  isBulkUploadEnabled: boolean\n  newDocumentURL: string\n  onBulkUploadSuccess?: () => void\n  /** @deprecated This prop will be removed in the next major version.\n   *\n   * Opening of the bulk upload modal is handled internally.\n   *\n   * Prefer `onBulkUploadSuccess` usage to handle the success of the bulk upload.\n   */\n  openBulkUpload: () => void\n  smallBreak: boolean\n  /** @deprecated This prop will be removed in the next major version. */\n  t?: TFunction\n  TitleActions?: React.ReactNode[]\n  viewType?: 'folders' | 'list'\n}\n\nexport const CollectionListHeader: React.FC<ListHeaderProps> = ({\n  className,\n  collectionConfig,\n  Description,\n  disableBulkDelete,\n  disableBulkEdit,\n  hasCreatePermission,\n  i18n,\n  isBulkUploadEnabled,\n  newDocumentURL,\n  onBulkUploadSuccess,\n  openBulkUpload,\n  smallBreak,\n  viewType,\n}) => {\n  const { config, getEntityConfig } = useConfig()\n  const { drawerSlug, isInDrawer, selectedOption } = useListDrawerContext()\n\n  if (isInDrawer) {\n    return (\n      <ListHeader\n        Actions={[\n          <CloseModalButton\n            className={`${drawerBaseClass}__header-close`}\n            key=\"close-button\"\n            slug={drawerSlug}\n          />,\n        ]}\n        AfterListHeaderContent={\n          <>\n            {Description}\n            {<DrawerRelationshipSelect />}\n          </>\n        }\n        className={`${drawerBaseClass}__header`}\n        title={getTranslation(\n          getEntityConfig({ collectionSlug: selectedOption.value })?.labels?.plural,\n          i18n,\n        )}\n        TitleActions={[\n          <ListDrawerCreateNewDocButton\n            hasCreatePermission={hasCreatePermission}\n            key=\"list-drawer-create-new-doc\"\n          />,\n        ].filter(Boolean)}\n      />\n    )\n  }\n\n  return (\n    <ListHeader\n      Actions={[\n        !smallBreak && (\n          <ListSelection\n            collectionConfig={collectionConfig}\n            disableBulkDelete={disableBulkDelete}\n            disableBulkEdit={disableBulkEdit}\n            key=\"list-selection\"\n            label={getTranslation(collectionConfig?.labels?.plural, i18n)}\n          />\n        ),\n        collectionConfig.folders && config.folders && (\n          <ListFolderPills\n            collectionConfig={collectionConfig}\n            folderCollectionSlug={config.folders.slug}\n            key=\"list-header-buttons\"\n            viewType={viewType}\n          />\n        ),\n      ].filter(Boolean)}\n      AfterListHeaderContent={Description}\n      className={className}\n      title={getTranslation(collectionConfig?.labels?.plural, i18n)}\n      TitleActions={[\n        hasCreatePermission && (\n          <ListCreateNewButton\n            collectionConfig={collectionConfig}\n            hasCreatePermission={hasCreatePermission}\n            key=\"list-header-create-new-doc\"\n            newDocumentURL={newDocumentURL}\n          />\n        ),\n        hasCreatePermission && isBulkUploadEnabled && (\n          <ListBulkUploadButton\n            collectionSlug={collectionConfig.slug}\n            hasCreatePermission={hasCreatePermission}\n            isBulkUploadEnabled={isBulkUploadEnabled}\n            key=\"list-header-bulk-upload\"\n            onBulkUploadSuccess={onBulkUploadSuccess}\n            openBulkUpload={openBulkUpload}\n          />\n        ),\n      ].filter(Boolean)}\n    />\n  )\n}\n"],"mappings":"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","ignoreList":[]}