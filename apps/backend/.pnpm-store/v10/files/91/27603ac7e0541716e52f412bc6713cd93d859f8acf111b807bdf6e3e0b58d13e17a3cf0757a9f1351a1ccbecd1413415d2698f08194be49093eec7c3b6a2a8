{"version":3,"file":"LexicalEditor.js","names":["c","_c","useLexicalComposerContext","LexicalErrorBoundary","HistoryPlugin","OnChangePlugin","RichTextPlugin","BLUR_COMMAND","COMMAND_PRIORITY_LOW","FOCUS_COMMAND","React","useEffect","useState","useEditorConfigContext","EditorPlugin","DecoratorPlugin","AddBlockHandlePlugin","DraggableBlockPlugin","InsertParagraphAtEndPlugin","MarkdownShortcutPlugin","NormalizeSelectionPlugin","SelectAllPlugin","SlashMenuPlugin","TextPlugin","LexicalContentEditable","LexicalEditor","props","$","editorConfig","editorContainerRef","isSmallWidthViewport","onChange","editorConfigContext","editor","floatingAnchorElem","setFloatingAnchorElem","t0","Symbol","for","_floatingAnchorElem","onRef","t1","t2","uuid","console","error","parentEditor","registerChild","handleFocus","focusEditor","handleBlur","blurEditor","unregisterFocus","registerCommand","unregisterBlur","unregisterChild","t3","t4","editorState","editor_0","tags","has","size","t5","features","plugins","_jsxs","Fragment","children","isEditable","_jsx","anchorElem","map","plugin_1","plugin","position","desktopOnly","clientProps","key","_temp","className","ref","_temp2","contentEditable","ignoreSelectionChange","markdownTransformers","length","_temp3","_temp4","_temp5","plugin_0","plugin_2","plugin_3","plugin_4"],"sources":["../../src/lexical/LexicalEditor.tsx"],"sourcesContent":["'use client'\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext.js'\nimport { LexicalErrorBoundary } from '@lexical/react/LexicalErrorBoundary.js'\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin.js'\nimport { OnChangePlugin } from '@lexical/react/LexicalOnChangePlugin.js'\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin.js'\nimport { BLUR_COMMAND, COMMAND_PRIORITY_LOW, FOCUS_COMMAND } from 'lexical'\nimport * as React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport type { LexicalProviderProps } from './LexicalProvider.js'\n\nimport { useEditorConfigContext } from './config/client/EditorConfigProvider.js'\nimport { EditorPlugin } from './EditorPlugin.js'\nimport './LexicalEditor.scss'\nimport { DecoratorPlugin } from './plugins/DecoratorPlugin/index.js'\nimport { AddBlockHandlePlugin } from './plugins/handles/AddBlockHandlePlugin/index.js'\nimport { DraggableBlockPlugin } from './plugins/handles/DraggableBlockPlugin/index.js'\nimport { InsertParagraphAtEndPlugin } from './plugins/InsertParagraphAtEnd/index.js'\nimport { MarkdownShortcutPlugin } from './plugins/MarkdownShortcut/index.js'\nimport { NormalizeSelectionPlugin } from './plugins/NormalizeSelection/index.js'\nimport { SelectAllPlugin } from './plugins/SelectAllPlugin/index.js'\nimport { SlashMenuPlugin } from './plugins/SlashMenu/index.js'\nimport { TextPlugin } from './plugins/TextPlugin/index.js'\nimport { LexicalContentEditable } from './ui/ContentEditable.js'\n\nexport const LexicalEditor: React.FC<\n  {\n    editorContainerRef: React.RefObject<HTMLDivElement | null>\n    isSmallWidthViewport: boolean\n  } & Pick<LexicalProviderProps, 'editorConfig' | 'onChange'>\n> = (props) => {\n  const { editorConfig, editorContainerRef, isSmallWidthViewport, onChange } = props\n  const editorConfigContext = useEditorConfigContext()\n  const [editor] = useLexicalComposerContext()\n\n  const [floatingAnchorElem, setFloatingAnchorElem] = useState<HTMLDivElement | null>(null)\n  const onRef = (_floatingAnchorElem: HTMLDivElement) => {\n    if (_floatingAnchorElem !== null) {\n      setFloatingAnchorElem(_floatingAnchorElem)\n    }\n  }\n\n  useEffect(() => {\n    if (!editorConfigContext?.uuid) {\n      console.error('Lexical Editor must be used within an EditorConfigProvider')\n      return\n    }\n    if (editorConfigContext?.parentEditor?.uuid) {\n      editorConfigContext.parentEditor?.registerChild(editorConfigContext.uuid, editorConfigContext)\n    }\n\n    const handleFocus = () => {\n      editorConfigContext.focusEditor(editorConfigContext)\n    }\n\n    const handleBlur = () => {\n      editorConfigContext.blurEditor(editorConfigContext)\n    }\n\n    const unregisterFocus = editor.registerCommand<MouseEvent>(\n      FOCUS_COMMAND,\n      () => {\n        handleFocus()\n        return true\n      },\n      COMMAND_PRIORITY_LOW,\n    )\n\n    const unregisterBlur = editor.registerCommand<MouseEvent>(\n      BLUR_COMMAND,\n      () => {\n        handleBlur()\n        return true\n      },\n      COMMAND_PRIORITY_LOW,\n    )\n\n    return () => {\n      unregisterFocus()\n      unregisterBlur()\n      editorConfigContext.parentEditor?.unregisterChild?.(editorConfigContext.uuid)\n    }\n  }, [editor, editorConfigContext])\n\n  return (\n    <React.Fragment>\n      {editorConfig.features.plugins?.map((plugin) => {\n        if (plugin.position === 'aboveContainer') {\n          return <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n        }\n      })}\n      <div className=\"editor-container\" ref={editorContainerRef}>\n        {editorConfig.features.plugins?.map((plugin) => {\n          if (plugin.position === 'top') {\n            return (\n              <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n            )\n          }\n        })}\n        <RichTextPlugin\n          contentEditable={\n            <div className=\"editor-scroller\">\n              <div className=\"editor\" ref={onRef}>\n                <LexicalContentEditable editorConfig={editorConfig} />\n              </div>\n            </div>\n          }\n          ErrorBoundary={LexicalErrorBoundary}\n        />\n        <NormalizeSelectionPlugin />\n        <InsertParagraphAtEndPlugin />\n        <DecoratorPlugin />\n        <TextPlugin features={editorConfig.features} />\n        <SelectAllPlugin />\n        <OnChangePlugin\n          // Selection changes can be ignored here, reducing the\n          // frequency that the FieldComponent and Payload receive updates.\n          // Selection changes are only needed if you are saving selection state\n          ignoreSelectionChange\n          onChange={(editorState, editor, tags) => {\n            // Ignore any onChange event triggered by focus only\n            if (!tags.has('focus') || tags.size > 1) {\n              if (onChange != null) {\n                onChange(editorState, editor, tags)\n              }\n            }\n          }}\n        />\n        {floatingAnchorElem && (\n          <React.Fragment>\n            {!isSmallWidthViewport && editor.isEditable() && (\n              <React.Fragment>\n                <DraggableBlockPlugin anchorElem={floatingAnchorElem} />\n                <AddBlockHandlePlugin anchorElem={floatingAnchorElem} />\n              </React.Fragment>\n            )}\n            {editorConfig.features.plugins?.map((plugin) => {\n              if (\n                plugin.position === 'floatingAnchorElem' &&\n                !(plugin.desktopOnly === true && isSmallWidthViewport)\n              ) {\n                return (\n                  <EditorPlugin\n                    anchorElem={floatingAnchorElem}\n                    clientProps={plugin.clientProps}\n                    key={plugin.key}\n                    plugin={plugin}\n                  />\n                )\n              }\n            })}\n            {editor.isEditable() && (\n              <React.Fragment>\n                <SlashMenuPlugin anchorElem={floatingAnchorElem} />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n        {editor.isEditable() && (\n          <React.Fragment>\n            <HistoryPlugin />\n            {editorConfig?.features?.markdownTransformers?.length > 0 && <MarkdownShortcutPlugin />}\n          </React.Fragment>\n        )}\n        {editorConfig.features.plugins?.map((plugin) => {\n          if (plugin.position === 'normal') {\n            return (\n              <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n            )\n          }\n        })}\n        {editorConfig.features.plugins?.map((plugin) => {\n          if (plugin.position === 'bottom') {\n            return (\n              <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n            )\n          }\n        })}\n      </div>\n      {editorConfig.features.plugins?.map((plugin) => {\n        if (plugin.position === 'belowContainer') {\n          return <EditorPlugin clientProps={plugin.clientProps} key={plugin.key} plugin={plugin} />\n        }\n      })}\n    </React.Fragment>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AACA,SAASC,yBAAyB,QAAQ;AAC1C,SAASC,oBAAoB,QAAQ;AACrC,SAASC,aAAa,QAAQ;AAC9B,SAASC,cAAc,QAAQ;AAC/B,SAASC,cAAc,QAAQ;AAC/B,SAASC,YAAY,EAAEC,oBAAoB,EAAEC,aAAa,QAAQ;AAClE,YAAYC,KAAA,MAAW;AACvB,SAASC,SAAS,EAAEC,QAAQ,QAAQ;AAIpC,SAASC,sBAAsB,QAAQ;AACvC,SAASC,YAAY,QAAQ;AAE7B,SAASC,eAAe,QAAQ;AAChC,SAASC,oBAAoB,QAAQ;AACrC,SAASC,oBAAoB,QAAQ;AACrC,SAASC,0BAA0B,QAAQ;AAC3C,SAASC,sBAAsB,QAAQ;AACvC,SAASC,wBAAwB,QAAQ;AACzC,SAASC,eAAe,QAAQ;AAChC,SAASC,eAAe,QAAQ;AAChC,SAASC,UAAU,QAAQ;AAC3B,SAASC,sBAAsB,QAAQ;AAEvC,OAAO,MAAMC,aAAA,GAKTC,KAAA;EAAA,MAAAC,CAAA,GAAA1B,EAAA;EACF;IAAA2B,YAAA;IAAAC,kBAAA;IAAAC,oBAAA;IAAAC;EAAA,IAA6EL,KAAA;EAC7E,MAAAM,mBAAA,GAA4BnB,sBAAA;EAC5B,OAAAoB,MAAA,IAAiB/B,yBAAA;EAEjB,OAAAgC,kBAAA,EAAAC,qBAAA,IAAoDvB,QAAA,KAAgC;EAAA,IAAAwB,EAAA;EAAA,IAAAT,CAAA,QAAAU,MAAA,CAAAC,GAAA;IACtEF,EAAA,GAAAG,mBAAA;MAAA,IACRA,mBAAA,SAAwB;QAC1BJ,qBAAA,CAAsBI,mBAAA;MAAA;IAAA;IAE1BZ,CAAA,MAAAS,EAAA;EAAA;IAAAA,EAAA,GAAAT,CAAA;EAAA;EAJA,MAAAa,KAAA,GAAcJ,EAId;EAAA,IAAAK,EAAA;EAAA,IAAAC,EAAA;EAAA,IAAAf,CAAA,QAAAM,MAAA,IAAAN,CAAA,QAAAK,mBAAA;IAEUS,EAAA,GAAAA,CAAA;MAAA,KACHT,mBAAA,EAAAW,IAAA;QACHC,OAAA,CAAAC,KAAA,CAAc;QAAA;MAAA;MAAA,IAGZb,mBAAA,EAAAc,YAAA,EAAAH,IAAA;QACFX,mBAAA,CAAAc,YAAA,EAAAC,aAAA,CAAgDf,mBAAA,CAAAW,IAAA,EAA0BX,mBAAA;MAAA;MAG5E,MAAAgB,WAAA,GAAAA,CAAA;QACEhB,mBAAA,CAAAiB,WAAA,CAAgCjB,mBAAA;MAAA;MAGlC,MAAAkB,UAAA,GAAAA,CAAA;QACElB,mBAAA,CAAAmB,UAAA,CAA+BnB,mBAAA;MAAA;MAGjC,MAAAoB,eAAA,GAAwBnB,MAAA,CAAAoB,eAAA,CAAA5C,aAAA;QAGpBuC,WAAA;QAAA;MAAA,GAAAxC,oBAGF;MAGF,MAAA8C,cAAA,GAAuBrB,MAAA,CAAAoB,eAAA,CAAA9C,YAAA;QAGnB2C,UAAA;QAAA;MAAA,GAAA1C,oBAGF;MAAA;QAIA4C,eAAA;QACAE,cAAA;QACAtB,mBAAA,CAAAc,YAAA,EAAAS,eAAA,GAAoDvB,mBAAA,CAAAW,IAAA;MAAA;IAAA;IAErDD,EAAA,IAACT,MAAA,EAAQD,mBAAA;IAAoBL,CAAA,MAAAM,MAAA;IAAAN,CAAA,MAAAK,mBAAA;IAAAL,CAAA,MAAAc,EAAA;IAAAd,CAAA,MAAAe,EAAA;EAAA;IAAAD,EAAA,GAAAd,CAAA;IAAAe,EAAA,GAAAf,CAAA;EAAA;EAxChChB,SAAA,CAAU8B,EAwCV,EAAGC,EAA6B;EAAA,IAAAc,EAAA;EAAA,IAAA7B,CAAA,QAAAM,MAAA,IAAAN,CAAA,QAAAC,YAAA,IAAAD,CAAA,QAAAE,kBAAA,IAAAF,CAAA,QAAAO,kBAAA,IAAAP,CAAA,QAAAG,oBAAA,IAAAH,CAAA,SAAAI,QAAA;IAAA,IAAA0B,EAAA;IAAA,IAAA9B,CAAA,SAAAI,QAAA;MAqCd0B,EAAA,GAAAA,CAAAC,WAAA,EAAAC,QAAA,EAAAC,IAAA;QAAA,IAEJ,CAACA,IAAA,CAAAC,GAAA,CAAS,YAAYD,IAAA,CAAAE,IAAA,IAAY;UAAA,IAChC/B,QAAA,QAAY;YACdA,QAAA,CAAS2B,WAAA,EAAazB,QAAA,EAAQ2B,IAAA;UAAA;QAAA;MAAA;MAGpCjC,CAAA,OAAAI,QAAA;MAAAJ,CAAA,OAAA8B,EAAA;IAAA;MAAAA,EAAA,GAAA9B,CAAA;IAAA;IAAA,IAAAoC,EAAA;IAAA,IAAApC,CAAA,SAAAM,MAAA,IAAAN,CAAA,SAAAC,YAAA,CAAAoC,QAAA,CAAAC,OAAA,IAAAtC,CAAA,SAAAO,kBAAA,IAAAP,CAAA,SAAAG,oBAAA;MAEDiC,EAAA,GAAA7B,kBAAA,IACCgC,KAAA,CAAAxD,KAAA,CAAAyD,QAAA;QAAAC,QAAA,GACG,CAACtC,oBAAA,IAAwBG,MAAA,CAAAoC,UAAA,CAAiB,KACzCH,KAAA,CAAAxD,KAAA,CAAAyD,QAAA;UAAAC,QAAA,GACEE,IAAA,CAAArD,oBAAA;YAAAsD,UAAA,EAAkCrC;UAAA,C,GAClCoC,IAAA,CAAAtD,oBAAA;YAAAuD,UAAA,EAAkCrC;UAAA,C;YAGrCN,YAAA,CAAAoC,QAAA,CAAAC,OAAA,EAAAO,GAAA,CAAAC,QAAA;UAAA,IAEGC,QAAA,CAAAC,QAAA,KAAoB,0BAClBD,QAAA,CAAAE,WAAA,SAAuB,IAAQ9C,oBAAmB;YAAA,OAGlDwC,IAAA,CAAAxD,YAAA;cAAAyD,UAAA,EACcrC,kBAAA;cAAA2C,WAAA,EACCH,QAAA,CAAAG,WAAA;cAAAH,MAAA,EAELA;YAAA,GADHA,QAAA,CAAAI,GAAU;UAAA;QAAA,IAMtB7C,MAAA,CAAAoC,UAAA,CAAiB,KAChBC,IAAA,CAAA5D,KAAA,CAAAyD,QAAA;UAAAC,QAAA,EACEE,IAAA,CAAAhD,eAAA;YAAAiD,UAAA,EAA6BrC;UAAA,C;;;;;;;;;;;IApEzCsB,EAAA,GAAAU,KAAA,CAAAxD,KAAA,CAAAyD,QAAA;MAAAC,QAAA,GACGxC,YAAA,CAAAoC,QAAA,CAAAC,OAAA,EAAAO,GAAA,CAAAO,KAAA,GAKDb,KAAA,CAAC;QAAAc,SAAA,EAAc;QAAAC,GAAA,EAAwBpD,kBAAA;QAAAuC,QAAA,GACpCxC,YAAA,CAAAoC,QAAA,CAAAC,OAAA,EAAAO,GAAA,CAAAU,MAAA,GAODZ,IAAA,CAAAhE,cAAA;UAAA6E,eAAA,EAEIb,IAAA,CAAC;YAAAU,SAAA,EAAc;YAAAZ,QAAA,EACbE,IAAA,CAAC;cAAAU,SAAA,EAAc;cAAAC,GAAA,EAAczC,KAAA;cAAA4B,QAAA,EAC3BE,IAAA,CAAA9C,sBAAA;gBAAAI;cAAA,C;;;;YAMR0C,IAAA,CAAAlD,wBAAA,IAAC,GACDkD,IAAA,CAAApD,0BAAA,IAAC,GACDoD,IAAA,CAAAvD,eAAA,IAAC,GACDuD,IAAA,CAAA/C,UAAA;UAAAyC,QAAA,EAAsBpC,YAAA,CAAAoC;QAAA,C,GACtBM,IAAA,CAAAjD,eAAA,IAAC,GACDiD,IAAA,CAAAjE,cAAA;UAAA+E,qBAAA;UAAArD,QAAA,EAKY0B;QAOV,C,GAEDM,E,EA8BA9B,MAAA,CAAAoC,UAAA,CAAiB,KAChBH,KAAA,CAAAxD,KAAA,CAAAyD,QAAA;UAAAC,QAAA,GACEE,IAAA,CAAAlE,aAAA,IAAC,GACAwB,YAAA,EAAAoC,QAAA,EAAAqB,oBAAA,EAAAC,MAAA,IAAuD,IAAKhB,IAAA,CAAAnD,sBAAA,IAAC;QAAA,C,GAGjES,YAAA,CAAAoC,QAAA,CAAAC,OAAA,EAAAO,GAAA,CAAAe,MAAA,GAOA3D,YAAA,CAAAoC,QAAA,CAAAC,OAAA,EAAAO,GAAA,CAAAgB,MAAA;MAAA,C,GAQF5D,YAAA,CAAAoC,QAAA,CAAAC,OAAA,EAAAO,GAAA,CAAAiB,MAAA;IAAA,C;;;;;;;;;;;SA9FHjC,E;CAqGJ;AA5JI,SAAAuB,MAAAL,MAAA;EAAA,IAyDQA,MAAA,CAAAC,QAAA,KAAoB;IAAA,OACfL,IAAA,CAAAxD,YAAA;MAAA+D,WAAA,EAA2BH,MAAA,CAAAG,WAAA;MAAAH;IAAA,GAAyBA,MAAA,CAAAI,GAAU;EAAA;AAAA;AA1D3E,SAAAI,OAAAQ,QAAA;EAAA,IA+DUhB,QAAA,CAAAC,QAAA,KAAoB;IAAA,OAEpBL,IAAA,CAAAxD,YAAA;MAAA+D,WAAA,EAA2BH,QAAA,CAAAG,WAAA;MAAAH,MAAA,EAA6CA;IAAA,GAApBA,QAAA,CAAAI,GAAU;EAAA;AAAA;AAjExE,SAAAS,OAAAI,QAAA;EAAA,IAuIUjB,QAAA,CAAAC,QAAA,KAAoB;IAAA,OAEpBL,IAAA,CAAAxD,YAAA;MAAA+D,WAAA,EAA2BH,QAAA,CAAAG,WAAA;MAAAH,MAAA,EAA6CA;IAAA,GAApBA,QAAA,CAAAI,GAAU;EAAA;AAAA;AAzIxE,SAAAU,OAAAI,QAAA;EAAA,IA8IUlB,QAAA,CAAAC,QAAA,KAAoB;IAAA,OAEpBL,IAAA,CAAAxD,YAAA;MAAA+D,WAAA,EAA2BH,QAAA,CAAAG,WAAA;MAAAH,MAAA,EAA6CA;IAAA,GAApBA,QAAA,CAAAI,GAAU;EAAA;AAAA;AAhJxE,SAAAW,OAAAI,QAAA;EAAA,IAsJQnB,QAAA,CAAAC,QAAA,KAAoB;IAAA,OACfL,IAAA,CAAAxD,YAAA;MAAA+D,WAAA,EAA2BH,QAAA,CAAAG,WAAA;MAAAH,MAAA,EAA6CA;IAAA,GAApBA,QAAA,CAAAI,GAAU;EAAA;AAAA","ignoreList":[]}