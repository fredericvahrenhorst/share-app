{"version":3,"file":"buildTableState.js","names":["APIError","formatErrors","isNumber","getClientConfig","renderFilters","renderTable","upsertPreferences","buildTableStateHandler","args","req","res","buildTableState","err","payload","logger","error","msg","message","collectionSlug","columns","docs","docsFromArgs","enableRowSelections","orderableFieldName","parent","query","renderRowTypes","i18n","config","user","tableAppearance","incomingUserSlug","collection","adminUserSlug","admin","adminAccessFunction","collections","access","canAccessAdmin","Error","hasUsers","find","depth","limit","pagination","length","clientConfig","importMap","collectionConfig","clientCollectionConfig","Array","isArray","slug","collectionPreferences","key","joinPath","value","Number","undefined","sort","data","select","currentSelectRef","segments","split","i","joinQuery","where","isNaN","page","parentDoc","findByID","id","joins","overrideAccess","parseInt","locale","columnState","Table","columnPreferences","useAsTitle","renderedFilters","fields","preferences","state"],"sources":["../../src/utilities/buildTableState.ts"],"sourcesContent":["import type {\n  BuildTableStateArgs,\n  ClientCollectionConfig,\n  ClientConfig,\n  CollectionPreferences,\n  Column,\n  ErrorResult,\n  PaginatedDocs,\n  SanitizedCollectionConfig,\n  ServerFunction,\n  Where,\n} from 'payload'\n\nimport { APIError, formatErrors } from 'payload'\nimport { isNumber } from 'payload/shared'\n\nimport { getClientConfig } from './getClientConfig.js'\nimport { renderFilters, renderTable } from './renderTable.js'\nimport { upsertPreferences } from './upsertPreferences.js'\n\ntype BuildTableStateSuccessResult = {\n  clientConfig?: ClientConfig\n  data: PaginatedDocs\n  errors?: never\n  preferences: CollectionPreferences\n  renderedFilters: Map<string, React.ReactNode>\n  state: Column[]\n  Table: React.ReactNode\n}\n\ntype BuildTableStateErrorResult = {\n  data?: any\n  renderedFilters?: never\n  state?: never\n  Table?: never\n} & (\n  | {\n      message: string\n    }\n  | ErrorResult\n)\n\nexport type BuildTableStateResult = BuildTableStateErrorResult | BuildTableStateSuccessResult\n\nexport const buildTableStateHandler: ServerFunction<\n  BuildTableStateArgs,\n  Promise<BuildTableStateResult>\n> = async (args) => {\n  const { req } = args\n\n  try {\n    const res = await buildTableState(args)\n    return res\n  } catch (err) {\n    req.payload.logger.error({ err, msg: `There was an error building form state` })\n\n    if (err.message === 'Could not find field schema for given path') {\n      return {\n        message: err.message,\n      }\n    }\n\n    if (err.message === 'Unauthorized') {\n      return null\n    }\n\n    return formatErrors(err)\n  }\n}\n\nconst buildTableState = async (\n  args: BuildTableStateArgs,\n): Promise<BuildTableStateSuccessResult> => {\n  const {\n    collectionSlug,\n    columns,\n    docs: docsFromArgs,\n    enableRowSelections,\n    orderableFieldName,\n    parent,\n    query,\n    renderRowTypes,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: { config },\n      user,\n    },\n    tableAppearance,\n  } = args\n\n  const incomingUserSlug = user?.collection\n\n  const adminUserSlug = config.admin.user\n\n  // If we have a user slug, test it against the functions\n  if (incomingUserSlug) {\n    const adminAccessFunction = payload.collections[incomingUserSlug].config.access?.admin\n\n    // Run the admin access function from the config if it exists\n    if (adminAccessFunction) {\n      const canAccessAdmin = await adminAccessFunction({ req })\n\n      if (!canAccessAdmin) {\n        throw new Error('Unauthorized')\n      }\n\n      // Match the user collection to the global admin config\n    } else if (adminUserSlug !== incomingUserSlug) {\n      throw new Error('Unauthorized')\n    }\n  } else {\n    const hasUsers = await payload.find({\n      collection: adminUserSlug,\n      depth: 0,\n      limit: 1,\n      pagination: false,\n    })\n\n    // If there are users, we should not allow access because of /create-first-user\n    if (hasUsers.docs.length) {\n      throw new Error('Unauthorized')\n    }\n  }\n\n  const clientConfig = getClientConfig({\n    config,\n    i18n,\n    importMap: payload.importMap,\n  })\n\n  let collectionConfig: SanitizedCollectionConfig\n  let clientCollectionConfig: ClientCollectionConfig\n\n  if (!Array.isArray(collectionSlug)) {\n    if (req.payload.collections[collectionSlug]) {\n      collectionConfig = req.payload.collections[collectionSlug].config\n      clientCollectionConfig = clientConfig.collections.find(\n        (collection) => collection.slug === collectionSlug,\n      )\n    }\n  }\n\n  const collectionPreferences = await upsertPreferences<CollectionPreferences>({\n    key: Array.isArray(collectionSlug)\n      ? `${parent.collectionSlug}-${parent.joinPath}`\n      : `collection-${collectionSlug}`,\n    req,\n    value: {\n      columns,\n      limit: isNumber(query?.limit) ? Number(query.limit) : undefined,\n      sort: query?.sort as string,\n    },\n  })\n\n  let docs = docsFromArgs\n  let data: PaginatedDocs\n\n  // lookup docs, if desired, i.e. within `join` field which initialize with `depth: 0`\n\n  if (!docs || query) {\n    if (Array.isArray(collectionSlug)) {\n      if (!parent) {\n        throw new APIError('Unexpected array of collectionSlug, parent must be provided')\n      }\n\n      const select = {}\n      let currentSelectRef = select\n\n      const segments = parent.joinPath.split('.')\n\n      for (let i = 0; i < segments.length; i++) {\n        currentSelectRef[segments[i]] = i === segments.length - 1 ? true : {}\n        currentSelectRef = currentSelectRef[segments[i]]\n      }\n\n      const joinQuery: { limit?: number; page?: number; sort?: string; where?: Where } = {\n        sort: query?.sort as string,\n        where: query?.where,\n      }\n\n      if (query) {\n        if (!Number.isNaN(Number(query.limit))) {\n          joinQuery.limit = Number(query.limit)\n        }\n\n        if (!Number.isNaN(Number(query.page))) {\n          joinQuery.limit = Number(query.limit)\n        }\n      }\n\n      let parentDoc = await payload.findByID({\n        id: parent.id,\n        collection: parent.collectionSlug,\n        depth: 1,\n        joins: {\n          [parent.joinPath]: joinQuery,\n        },\n        overrideAccess: false,\n        select,\n        user: req.user,\n      })\n\n      for (let i = 0; i < segments.length; i++) {\n        if (i === segments.length - 1) {\n          data = parentDoc[segments[i]]\n          docs = data.docs\n        } else {\n          parentDoc = parentDoc[segments[i]]\n        }\n      }\n    } else {\n      data = await payload.find({\n        collection: collectionSlug,\n        depth: 0,\n        limit: query?.limit ? parseInt(query.limit, 10) : undefined,\n        locale: req.locale,\n        overrideAccess: false,\n        page: query?.page ? parseInt(query.page, 10) : undefined,\n        sort: query?.sort,\n        user: req.user,\n        where: query?.where,\n      })\n      docs = data.docs\n    }\n  }\n\n  const { columnState, Table } = renderTable({\n    clientCollectionConfig,\n    clientConfig,\n    collectionConfig,\n    collections: Array.isArray(collectionSlug) ? collectionSlug : undefined,\n    columnPreferences: Array.isArray(collectionSlug) ? collectionPreferences?.columns : undefined, // TODO, might not be neededcolumns,\n    columns,\n    docs,\n    enableRowSelections,\n    i18n: req.i18n,\n    orderableFieldName,\n    payload,\n    renderRowTypes,\n    tableAppearance,\n    useAsTitle: Array.isArray(collectionSlug)\n      ? payload.collections[collectionSlug[0]]?.config?.admin?.useAsTitle\n      : collectionConfig?.admin?.useAsTitle,\n  })\n\n  let renderedFilters\n\n  if (collectionConfig) {\n    renderedFilters = renderFilters(collectionConfig.fields, req.payload.importMap)\n  }\n\n  return {\n    data,\n    preferences: collectionPreferences,\n    renderedFilters,\n    state: columnState,\n    Table,\n  }\n}\n"],"mappings":"AAaA,SAASA,QAAQ,EAAEC,YAAY,QAAQ;AACvC,SAASC,QAAQ,QAAQ;AAEzB,SAASC,eAAe,QAAQ;AAChC,SAASC,aAAa,EAAEC,WAAW,QAAQ;AAC3C,SAASC,iBAAiB,QAAQ;AA0BlC,OAAO,MAAMC,sBAAA,GAGT,MAAOC,IAAA;EACT,MAAM;IAAEC;EAAG,CAAE,GAAGD,IAAA;EAEhB,IAAI;IACF,MAAME,GAAA,GAAM,MAAMC,eAAA,CAAgBH,IAAA;IAClC,OAAOE,GAAA;EACT,EAAE,OAAOE,GAAA,EAAK;IACZH,GAAA,CAAII,OAAO,CAACC,MAAM,CAACC,KAAK,CAAC;MAAEH,GAAA;MAAKI,GAAA,EAAK;IAAyC;IAE9E,IAAIJ,GAAA,CAAIK,OAAO,KAAK,8CAA8C;MAChE,OAAO;QACLA,OAAA,EAASL,GAAA,CAAIK;MACf;IACF;IAEA,IAAIL,GAAA,CAAIK,OAAO,KAAK,gBAAgB;MAClC,OAAO;IACT;IAEA,OAAOhB,YAAA,CAAaW,GAAA;EACtB;AACF;AAEA,MAAMD,eAAA,GAAkB,MACtBH,IAAA;EAEA,MAAM;IACJU,cAAc;IACdC,OAAO;IACPC,IAAA,EAAMC,YAAY;IAClBC,mBAAmB;IACnBC,kBAAkB;IAClBC,MAAM;IACNC,KAAK;IACLC,cAAc;IACdjB,GAAG;IACHA,GAAA,EAAK;MACHkB,IAAI;MACJd,OAAO;MACPA,OAAA,EAAS;QAAEe;MAAM,CAAE;MACnBC;IAAI,CACL;IACDC;EAAe,CAChB,GAAGtB,IAAA;EAEJ,MAAMuB,gBAAA,GAAmBF,IAAA,EAAMG,UAAA;EAE/B,MAAMC,aAAA,GAAgBL,MAAA,CAAOM,KAAK,CAACL,IAAI;EAEvC;EACA,IAAIE,gBAAA,EAAkB;IACpB,MAAMI,mBAAA,GAAsBtB,OAAA,CAAQuB,WAAW,CAACL,gBAAA,CAAiB,CAACH,MAAM,CAACS,MAAM,EAAEH,KAAA;IAEjF;IACA,IAAIC,mBAAA,EAAqB;MACvB,MAAMG,cAAA,GAAiB,MAAMH,mBAAA,CAAoB;QAAE1B;MAAI;MAEvD,IAAI,CAAC6B,cAAA,EAAgB;QACnB,MAAM,IAAIC,KAAA,CAAM;MAClB;MAEA;IACF,OAAO,IAAIN,aAAA,KAAkBF,gBAAA,EAAkB;MAC7C,MAAM,IAAIQ,KAAA,CAAM;IAClB;EACF,OAAO;IACL,MAAMC,QAAA,GAAW,MAAM3B,OAAA,CAAQ4B,IAAI,CAAC;MAClCT,UAAA,EAAYC,aAAA;MACZS,KAAA,EAAO;MACPC,KAAA,EAAO;MACPC,UAAA,EAAY;IACd;IAEA;IACA,IAAIJ,QAAA,CAASpB,IAAI,CAACyB,MAAM,EAAE;MACxB,MAAM,IAAIN,KAAA,CAAM;IAClB;EACF;EAEA,MAAMO,YAAA,GAAe3C,eAAA,CAAgB;IACnCyB,MAAA;IACAD,IAAA;IACAoB,SAAA,EAAWlC,OAAA,CAAQkC;EACrB;EAEA,IAAIC,gBAAA;EACJ,IAAIC,sBAAA;EAEJ,IAAI,CAACC,KAAA,CAAMC,OAAO,CAACjC,cAAA,GAAiB;IAClC,IAAIT,GAAA,CAAII,OAAO,CAACuB,WAAW,CAAClB,cAAA,CAAe,EAAE;MAC3C8B,gBAAA,GAAmBvC,GAAA,CAAII,OAAO,CAACuB,WAAW,CAAClB,cAAA,CAAe,CAACU,MAAM;MACjEqB,sBAAA,GAAyBH,YAAA,CAAaV,WAAW,CAACK,IAAI,CACnDT,UAAA,IAAeA,UAAA,CAAWoB,IAAI,KAAKlC,cAAA;IAExC;EACF;EAEA,MAAMmC,qBAAA,GAAwB,MAAM/C,iBAAA,CAAyC;IAC3EgD,GAAA,EAAKJ,KAAA,CAAMC,OAAO,CAACjC,cAAA,IACf,GAAGM,MAAA,CAAON,cAAc,IAAIM,MAAA,CAAO+B,QAAQ,EAAE,GAC7C,cAAcrC,cAAA,EAAgB;IAClCT,GAAA;IACA+C,KAAA,EAAO;MACLrC,OAAA;MACAwB,KAAA,EAAOzC,QAAA,CAASuB,KAAA,EAAOkB,KAAA,IAASc,MAAA,CAAOhC,KAAA,CAAMkB,KAAK,IAAIe,SAAA;MACtDC,IAAA,EAAMlC,KAAA,EAAOkC;IACf;EACF;EAEA,IAAIvC,IAAA,GAAOC,YAAA;EACX,IAAIuC,IAAA;EAEJ;EAEA,IAAI,CAACxC,IAAA,IAAQK,KAAA,EAAO;IAClB,IAAIyB,KAAA,CAAMC,OAAO,CAACjC,cAAA,GAAiB;MACjC,IAAI,CAACM,MAAA,EAAQ;QACX,MAAM,IAAIxB,QAAA,CAAS;MACrB;MAEA,MAAM6D,MAAA,GAAS,CAAC;MAChB,IAAIC,gBAAA,GAAmBD,MAAA;MAEvB,MAAME,QAAA,GAAWvC,MAAA,CAAO+B,QAAQ,CAACS,KAAK,CAAC;MAEvC,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAIF,QAAA,CAASlB,MAAM,EAAEoB,CAAA,IAAK;QACxCH,gBAAgB,CAACC,QAAQ,CAACE,CAAA,CAAE,CAAC,GAAGA,CAAA,KAAMF,QAAA,CAASlB,MAAM,GAAG,IAAI,OAAO,CAAC;QACpEiB,gBAAA,GAAmBA,gBAAgB,CAACC,QAAQ,CAACE,CAAA,CAAE,CAAC;MAClD;MAEA,MAAMC,SAAA,GAA6E;QACjFP,IAAA,EAAMlC,KAAA,EAAOkC,IAAA;QACbQ,KAAA,EAAO1C,KAAA,EAAO0C;MAChB;MAEA,IAAI1C,KAAA,EAAO;QACT,IAAI,CAACgC,MAAA,CAAOW,KAAK,CAACX,MAAA,CAAOhC,KAAA,CAAMkB,KAAK,IAAI;UACtCuB,SAAA,CAAUvB,KAAK,GAAGc,MAAA,CAAOhC,KAAA,CAAMkB,KAAK;QACtC;QAEA,IAAI,CAACc,MAAA,CAAOW,KAAK,CAACX,MAAA,CAAOhC,KAAA,CAAM4C,IAAI,IAAI;UACrCH,SAAA,CAAUvB,KAAK,GAAGc,MAAA,CAAOhC,KAAA,CAAMkB,KAAK;QACtC;MACF;MAEA,IAAI2B,SAAA,GAAY,MAAMzD,OAAA,CAAQ0D,QAAQ,CAAC;QACrCC,EAAA,EAAIhD,MAAA,CAAOgD,EAAE;QACbxC,UAAA,EAAYR,MAAA,CAAON,cAAc;QACjCwB,KAAA,EAAO;QACP+B,KAAA,EAAO;UACL,CAACjD,MAAA,CAAO+B,QAAQ,GAAGW;QACrB;QACAQ,cAAA,EAAgB;QAChBb,MAAA;QACAhC,IAAA,EAAMpB,GAAA,CAAIoB;MACZ;MAEA,KAAK,IAAIoC,CAAA,GAAI,GAAGA,CAAA,GAAIF,QAAA,CAASlB,MAAM,EAAEoB,CAAA,IAAK;QACxC,IAAIA,CAAA,KAAMF,QAAA,CAASlB,MAAM,GAAG,GAAG;UAC7Be,IAAA,GAAOU,SAAS,CAACP,QAAQ,CAACE,CAAA,CAAE,CAAC;UAC7B7C,IAAA,GAAOwC,IAAA,CAAKxC,IAAI;QAClB,OAAO;UACLkD,SAAA,GAAYA,SAAS,CAACP,QAAQ,CAACE,CAAA,CAAE,CAAC;QACpC;MACF;IACF,OAAO;MACLL,IAAA,GAAO,MAAM/C,OAAA,CAAQ4B,IAAI,CAAC;QACxBT,UAAA,EAAYd,cAAA;QACZwB,KAAA,EAAO;QACPC,KAAA,EAAOlB,KAAA,EAAOkB,KAAA,GAAQgC,QAAA,CAASlD,KAAA,CAAMkB,KAAK,EAAE,MAAMe,SAAA;QAClDkB,MAAA,EAAQnE,GAAA,CAAImE,MAAM;QAClBF,cAAA,EAAgB;QAChBL,IAAA,EAAM5C,KAAA,EAAO4C,IAAA,GAAOM,QAAA,CAASlD,KAAA,CAAM4C,IAAI,EAAE,MAAMX,SAAA;QAC/CC,IAAA,EAAMlC,KAAA,EAAOkC,IAAA;QACb9B,IAAA,EAAMpB,GAAA,CAAIoB,IAAI;QACdsC,KAAA,EAAO1C,KAAA,EAAO0C;MAChB;MACA/C,IAAA,GAAOwC,IAAA,CAAKxC,IAAI;IAClB;EACF;EAEA,MAAM;IAAEyD,WAAW;IAAEC;EAAK,CAAE,GAAGzE,WAAA,CAAY;IACzC4C,sBAAA;IACAH,YAAA;IACAE,gBAAA;IACAZ,WAAA,EAAac,KAAA,CAAMC,OAAO,CAACjC,cAAA,IAAkBA,cAAA,GAAiBwC,SAAA;IAC9DqB,iBAAA,EAAmB7B,KAAA,CAAMC,OAAO,CAACjC,cAAA,IAAkBmC,qBAAA,EAAuBlC,OAAA,GAAUuC,SAAA;IACpFvC,OAAA;IACAC,IAAA;IACAE,mBAAA;IACAK,IAAA,EAAMlB,GAAA,CAAIkB,IAAI;IACdJ,kBAAA;IACAV,OAAA;IACAa,cAAA;IACAI,eAAA;IACAkD,UAAA,EAAY9B,KAAA,CAAMC,OAAO,CAACjC,cAAA,IACtBL,OAAA,CAAQuB,WAAW,CAAClB,cAAc,CAAC,EAAE,CAAC,EAAEU,MAAA,EAAQM,KAAA,EAAO8C,UAAA,GACvDhC,gBAAA,EAAkBd,KAAA,EAAO8C;EAC/B;EAEA,IAAIC,eAAA;EAEJ,IAAIjC,gBAAA,EAAkB;IACpBiC,eAAA,GAAkB7E,aAAA,CAAc4C,gBAAA,CAAiBkC,MAAM,EAAEzE,GAAA,CAAII,OAAO,CAACkC,SAAS;EAChF;EAEA,OAAO;IACLa,IAAA;IACAuB,WAAA,EAAa9B,qBAAA;IACb4B,eAAA;IACAG,KAAA,EAAOP,WAAA;IACPC;EACF;AACF","ignoreList":[]}