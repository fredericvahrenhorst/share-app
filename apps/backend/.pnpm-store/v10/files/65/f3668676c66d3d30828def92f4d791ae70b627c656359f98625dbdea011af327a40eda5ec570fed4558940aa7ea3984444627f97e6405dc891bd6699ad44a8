{"version":3,"file":"index.js","names":["c","_c","Gutter","useModal","RenderTitle","XIcon","useDocumentInfo","useDocumentTitle","useTranslation","IDLabel","documentDrawerBaseClass","DocumentDrawerHeader","t0","$","drawerSlug","showDocumentID","t1","undefined","closeModal","t","t2","t3","t4","_jsx","DocumentID","_jsxs","className","children","element","onClick","type","id","title","toString"],"sources":["../../../../src/elements/DocumentDrawer/DrawerHeader/index.tsx"],"sourcesContent":["'use client'\n\nimport { Gutter } from '../../../elements/Gutter/index.js'\nimport { useModal } from '../../../elements/Modal/index.js'\nimport { RenderTitle } from '../../../elements/RenderTitle/index.js'\nimport { XIcon } from '../../../icons/X/index.js'\nimport { useDocumentInfo } from '../../../providers/DocumentInfo/index.js'\nimport { useDocumentTitle } from '../../../providers/DocumentTitle/index.js'\nimport { useTranslation } from '../../../providers/Translation/index.js'\nimport { IDLabel } from '../../IDLabel/index.js'\nimport { documentDrawerBaseClass } from '../index.js'\nimport './index.scss'\n\nexport const DocumentDrawerHeader: React.FC<{\n  drawerSlug: string\n  showDocumentID?: boolean\n}> = ({ drawerSlug, showDocumentID = true }) => {\n  const { closeModal } = useModal()\n  const { t } = useTranslation()\n\n  return (\n    <Gutter className={`${documentDrawerBaseClass}__header`}>\n      <div className={`${documentDrawerBaseClass}__header-content`}>\n        <h2 className={`${documentDrawerBaseClass}__header-text`}>\n          {<RenderTitle element=\"span\" />}\n        </h2>\n        <button\n          aria-label={t('general:close')}\n          className={`${documentDrawerBaseClass}__header-close`}\n          onClick={() => closeModal(drawerSlug)}\n          type=\"button\"\n        >\n          <XIcon />\n        </button>\n      </div>\n      {showDocumentID && <DocumentID />}\n    </Gutter>\n  )\n}\n\nconst DocumentID: React.FC = () => {\n  const { id } = useDocumentInfo()\n  const { title } = useDocumentTitle()\n  return id && id !== title ? <IDLabel id={id.toString()} /> : null\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAEA,SAASC,MAAM,QAAQ;AACvB,SAASC,QAAQ,QAAQ;AACzB,SAASC,WAAW,QAAQ;AAC5B,SAASC,KAAK,QAAQ;AACtB,SAASC,eAAe,QAAQ;AAChC,SAASC,gBAAgB,QAAQ;AACjC,SAASC,cAAc,QAAQ;AAC/B,SAASC,OAAO,QAAQ;AACxB,SAASC,uBAAuB,QAAQ;AACxC,OAAO;AAEP,OAAO,MAAMC,oBAAA,GAGRC,EAAA;EAAA,MAAAC,CAAA,GAAAZ,EAAA;EAAC;IAAAa,UAAA;IAAAC,cAAA,EAAAC;EAAA,IAAAJ,EAAqC;EAAvB,MAAAG,cAAA,GAAAC,EAAqB,KAAAC,SAAA,UAArBD,EAAqB;EACvC;IAAAE;EAAA,IAAuBf,QAAA;EACvB;IAAAgB;EAAA,IAAcX,cAAA;EAAA,IAAAY,EAAA;EAAA,IAAAP,CAAA,QAAAK,UAAA,IAAAL,CAAA,QAAAC,UAAA,IAAAD,CAAA,QAAAE,cAAA,IAAAF,CAAA,QAAAM,CAAA;IAAA,IAAAE,EAAA;IAAA,IAAAR,CAAA,QAAAK,UAAA,IAAAL,CAAA,QAAAC,UAAA;MAWGO,EAAA,GAAAA,CAAA,KAAMH,UAAA,CAAWJ,UAAA;MAAAD,CAAA,MAAAK,UAAA;MAAAL,CAAA,MAAAC,UAAA;MAAAD,CAAA,MAAAQ,EAAA;IAAA;MAAAA,EAAA,GAAAR,CAAA;IAAA;IAAA,IAAAS,EAAA;IAAA,IAAAT,CAAA,QAAAE,cAAA;MAM7BO,EAAA,GAAAP,cAAA,IAAkBQ,IAAA,CAAAC,UAAA,IAAC;MAAAX,CAAA,MAAAE,cAAA;MAAAF,CAAA,MAAAS,EAAA;IAAA;MAAAA,EAAA,GAAAT,CAAA;IAAA;IAdtBO,EAAA,GAAAK,KAAA,CAAAvB,MAAA;MAAAwB,SAAA,EAAmB,GAAAhB,uBAAA,UAAoC;MAAAiB,QAAA,GACrDF,KAAA,CAAC;QAAAC,SAAA,EAAe,GAAAhB,uBAAA,kBAA4C;QAAAiB,QAAA,GAC1DJ,IAAA,CAAC;UAAAG,SAAA,EAAc,GAAAhB,uBAAA,eAAyC;UAAAiB,QAAA,EACrDJ,IAAA,CAAAnB,WAAA;YAAAwB,OAAA,EAAqB;UAAA,C;YAExBL,IAAA,CAAC;UAAA,cACaJ,CAAA,CAAE;UAAAO,SAAA,EACH,GAAAhB,uBAAA,gBAA0C;UAAAmB,OAAA,EAC5CR,EAAiB;UAAAS,IAAA,EACrB;UAAAH,QAAA,EAELJ,IAAA,CAAAlB,KAAA,IAAC;QAAA,C;UAGJiB,EAAmB;IAAA,C;;;;;;;;;SAdtBF,E;CAiBJ;AAEA,MAAMI,UAAA,GAAuBA,CAAA;EAAA,MAAAX,CAAA,GAAAZ,EAAA;EAC3B;IAAA8B;EAAA,IAAezB,eAAA;EACf;IAAA0B;EAAA,IAAkBzB,gBAAA;EAAA,IAAAK,EAAA;EAAA,IAAAC,CAAA,QAAAkB,EAAA,IAAAlB,CAAA,QAAAmB,KAAA;IACXpB,EAAA,GAAAmB,EAAA,IAAMA,EAAA,KAAOC,KAAA,GAAQT,IAAA,CAAAd,OAAA;MAAAsB,EAAA,EAAaA,EAAA,CAAAE,QAAA,CAAW;IAAA,C,QAAS;IAAApB,CAAA,MAAAkB,EAAA;IAAAlB,CAAA,MAAAmB,KAAA;IAAAnB,CAAA,MAAAD,EAAA;EAAA;IAAAA,EAAA,GAAAC,CAAA;EAAA;EAAA,OAAtDD,EAAsD;AAAA,CAC/D","ignoreList":[]}