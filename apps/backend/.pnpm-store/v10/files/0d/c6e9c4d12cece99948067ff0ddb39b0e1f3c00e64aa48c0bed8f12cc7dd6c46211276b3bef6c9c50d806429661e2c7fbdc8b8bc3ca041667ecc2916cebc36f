{"version":3,"file":"renderTable.js","names":["getTranslation","fieldAffectsData","fieldIsHiddenOrDisabled","flattenTopLevelFields","React","RenderServerComponent","OrderableTable","Pill","SelectAll","SelectRow","SortHeader","SortRow","Table","filterFields","buildColumnState","getInitialColumns","renderFilters","fields","importMap","reduce","acc","field","admin","components","Filter","set","name","Component","Map","renderTable","clientCollectionConfig","clientConfig","collectionConfig","collections","columnPreferences","columns","columnsFromArgs","customCellProps","docs","enableRowSelections","i18n","orderableFieldName","payload","renderRowTypes","tableAppearance","useAsTitle","columnState","clientFields","serverFields","isPolymorphic","collection","find","each","slug","some","push","serverCollectionConfig","config","filter","column","keepPresentationalFields","moveSubFieldsToTop","accessor","undefined","defaultColumns","sharedArgs","collectionSlug","dataType","columnsToUse","unshift","active","disabled","hidden","Heading","t","renderedCells","map","doc","i","_jsx","size","relationTo","labels","singular","_","rowData","appearance","data"],"sources":["../../src/utilities/renderTable.tsx"],"sourcesContent":["import type {\n  ClientCollectionConfig,\n  ClientConfig,\n  ClientField,\n  CollectionConfig,\n  CollectionPreferences,\n  Column,\n  ColumnPreference,\n  Field,\n  ImportMap,\n  PaginatedDocs,\n  Payload,\n  SanitizedCollectionConfig,\n} from 'payload'\n\nimport { getTranslation, type I18nClient } from '@payloadcms/translations'\nimport { fieldAffectsData, fieldIsHiddenOrDisabled, flattenTopLevelFields } from 'payload/shared'\nimport React from 'react'\n\nimport type { BuildColumnStateArgs } from '../providers/TableColumns/buildColumnState/index.js'\n\nimport { RenderServerComponent } from '../elements/RenderServerComponent/index.js'\nimport {\n  OrderableTable,\n  Pill,\n  SelectAll,\n  SelectRow,\n  SortHeader,\n  SortRow,\n  Table,\n  // eslint-disable-next-line payload/no-imports-from-exports-dir -- these MUST reference the exports dir: https://github.com/payloadcms/payload/issues/12002#issuecomment-2791493587\n} from '../exports/client/index.js'\nimport { filterFields } from '../providers/TableColumns/buildColumnState/filterFields.js'\nimport { buildColumnState } from '../providers/TableColumns/buildColumnState/index.js'\nimport { getInitialColumns } from '../providers/TableColumns/getInitialColumns.js'\n\nexport const renderFilters = (\n  fields: Field[],\n  importMap: ImportMap,\n): Map<string, React.ReactNode> =>\n  fields.reduce(\n    (acc, field) => {\n      if (fieldIsHiddenOrDisabled(field)) {\n        return acc\n      }\n\n      if ('name' in field && field.admin?.components?.Filter) {\n        acc.set(\n          field.name,\n          RenderServerComponent({\n            Component: field.admin.components?.Filter,\n            importMap,\n          }),\n        )\n      }\n\n      return acc\n    },\n    new Map() as Map<string, React.ReactNode>,\n  )\n\nexport const renderTable = ({\n  clientCollectionConfig,\n  clientConfig,\n  collectionConfig,\n  collections,\n  columnPreferences,\n  columns: columnsFromArgs,\n  customCellProps,\n  docs,\n  enableRowSelections,\n  i18n,\n  orderableFieldName,\n  payload,\n  renderRowTypes,\n  tableAppearance,\n  useAsTitle,\n}: {\n  clientCollectionConfig?: ClientCollectionConfig\n  clientConfig?: ClientConfig\n  collectionConfig?: SanitizedCollectionConfig\n  collections?: string[]\n  columnPreferences: CollectionPreferences['columns']\n  columns?: CollectionPreferences['columns']\n  customCellProps?: Record<string, unknown>\n  docs: PaginatedDocs['docs']\n  drawerSlug?: string\n  enableRowSelections: boolean\n  i18n: I18nClient\n  orderableFieldName: string\n  payload: Payload\n  renderRowTypes?: boolean\n  tableAppearance?: 'condensed' | 'default'\n  useAsTitle: CollectionConfig['admin']['useAsTitle']\n}): {\n  columnState: Column[]\n  Table: React.ReactNode\n} => {\n  // Ensure that columns passed as args comply with the field config, i.e. `hidden`, `disableListColumn`, etc.\n\n  let columnState: Column[]\n  let clientFields: ClientField[] = clientCollectionConfig?.fields || []\n  let serverFields: Field[] = collectionConfig?.fields || []\n  const isPolymorphic = collections\n\n  if (isPolymorphic) {\n    clientFields = []\n    serverFields = []\n    for (const collection of collections) {\n      const clientCollectionConfig = clientConfig.collections.find(\n        (each) => each.slug === collection,\n      )\n      for (const field of filterFields(clientCollectionConfig.fields)) {\n        if (fieldAffectsData(field)) {\n          if (clientFields.some((each) => fieldAffectsData(each) && each.name === field.name)) {\n            continue\n          }\n        }\n\n        clientFields.push(field)\n      }\n\n      const serverCollectionConfig = payload.collections[collection].config\n      for (const field of filterFields(serverCollectionConfig.fields)) {\n        if (fieldAffectsData(field)) {\n          if (serverFields.some((each) => fieldAffectsData(each) && each.name === field.name)) {\n            continue\n          }\n        }\n\n        serverFields.push(field)\n      }\n    }\n  }\n\n  const columns: ColumnPreference[] = columnsFromArgs\n    ? columnsFromArgs?.filter((column) =>\n        flattenTopLevelFields(clientFields, {\n          i18n,\n          keepPresentationalFields: true,\n          moveSubFieldsToTop: true,\n        })?.some((field) => {\n          const accessor =\n            'accessor' in field ? field.accessor : 'name' in field ? field.name : undefined\n          return accessor === column.accessor\n        }),\n      )\n    : getInitialColumns(\n        isPolymorphic ? clientFields : filterFields(clientFields),\n        useAsTitle,\n        isPolymorphic ? [] : clientCollectionConfig?.admin?.defaultColumns,\n      )\n\n  const sharedArgs: Pick<\n    BuildColumnStateArgs,\n    | 'clientFields'\n    | 'columnPreferences'\n    | 'columns'\n    | 'customCellProps'\n    | 'enableRowSelections'\n    | 'i18n'\n    | 'payload'\n    | 'serverFields'\n    | 'useAsTitle'\n  > = {\n    clientFields,\n    columnPreferences,\n    columns,\n    enableRowSelections,\n    i18n,\n    // sortColumnProps,\n    customCellProps,\n    payload,\n    serverFields,\n    useAsTitle,\n  }\n\n  if (isPolymorphic) {\n    columnState = buildColumnState({\n      ...sharedArgs,\n      collectionSlug: undefined,\n      dataType: 'polymorphic',\n      docs,\n    })\n  } else {\n    columnState = buildColumnState({\n      ...sharedArgs,\n      collectionSlug: clientCollectionConfig.slug,\n      dataType: 'monomorphic',\n      docs,\n    })\n  }\n\n  const columnsToUse = [...columnState]\n\n  if (renderRowTypes) {\n    columnsToUse.unshift({\n      accessor: 'collection',\n      active: true,\n      field: {\n        admin: {\n          disabled: true,\n        },\n        hidden: true,\n      },\n      Heading: i18n.t('version:type'),\n      renderedCells: docs.map((doc, i) => (\n        <Pill key={i} size=\"small\">\n          {getTranslation(\n            collections\n              ? payload.collections[doc.relationTo].config.labels.singular\n              : clientCollectionConfig.labels.singular,\n            i18n,\n          )}\n        </Pill>\n      )),\n    } as Column)\n  }\n\n  if (enableRowSelections) {\n    columnsToUse.unshift({\n      accessor: '_select',\n      active: true,\n      field: {\n        admin: {\n          disabled: true,\n        },\n        hidden: true,\n      },\n      Heading: <SelectAll />,\n      renderedCells: docs.map((_, i) => <SelectRow key={i} rowData={docs[i]} />),\n    } as Column)\n  }\n\n  if (!orderableFieldName) {\n    return {\n      columnState,\n      // key is required since Next.js 15.2.0 to prevent React key error\n      Table: <Table appearance={tableAppearance} columns={columnsToUse} data={docs} key=\"table\" />,\n    }\n  }\n\n  columnsToUse.unshift({\n    accessor: '_dragHandle',\n    active: true,\n    field: {\n      admin: {\n        disabled: true,\n      },\n      hidden: true,\n    },\n    Heading: <SortHeader />,\n    renderedCells: docs.map((_, i) => <SortRow key={i} />),\n  } as Column)\n\n  return {\n    columnState,\n    // key is required since Next.js 15.2.0 to prevent React key error\n    Table: (\n      <OrderableTable\n        appearance={tableAppearance}\n        collection={clientCollectionConfig}\n        columns={columnsToUse}\n        data={docs}\n        key=\"table\"\n      />\n    ),\n  }\n}\n"],"mappings":"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","ignoreList":[]}