{"version":3,"file":"index.js","names":["c","_c","useModal","getTranslation","useRouter","useSearchParams","mergeListSearchAndWhere","qs","React","toast","useAuth","useConfig","useLocale","useRouteCache","SelectAllStatus","useSelection","useTranslation","requests","parseSearchParams","ConfirmationModal","ListSelectionButton","confirmManyDeleteDrawerSlug","DeleteMany","props","$","collection","t0","t1","undefined","slug","permissions","count","getSelectedIds","selectAll","toggleAll","router","searchParams","clearRouteCache","collectionPermissions","collections","hasDeletePermission","delete","None","selectingAll","AllAvailable","t2","selectedIDs","t3","replace","stringify","page","addQueryPrefix","_jsx","Fragment","children","DeleteMany_v4","afterDelete","search","selections","all","ids","totalCount","length","where","t","config","routes","api","serverURL","code","locale","i18n","openModal","handleDelete","useCallback","deletingOneCollection","Object","keys","result","relationTo","entries","collectionConfig","find","whereConstraint","id","not_equals","in","deleteManyResponse","limit","headers","language","plural","singular","labels","json","deletedDocs","docs","successLabel","status","success","label","errors","error","message","description","map","join","deletedCount","doc","totalDocs","_err","labelString","labelCount","reduce","acc","key","value","index","array","collectionLabel","newLabel","_jsxs","className","onClick","body","confirmingLabel","heading","modalSlug","onConfirm"],"sources":["../../../src/elements/DeleteMany/index.tsx"],"sourcesContent":["'use client'\nimport type { ClientCollectionConfig, Where } from 'payload'\n\nimport { useModal } from '@faceless-ui/modal'\nimport { getTranslation } from '@payloadcms/translations'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { mergeListSearchAndWhere } from 'payload/shared'\nimport * as qs from 'qs-esm'\nimport React from 'react'\nimport { toast } from 'sonner'\n\nimport { useAuth } from '../../providers/Auth/index.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useLocale } from '../../providers/Locale/index.js'\nimport { useRouteCache } from '../../providers/RouteCache/index.js'\nimport { SelectAllStatus, useSelection } from '../../providers/Selection/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { requests } from '../../utilities/api.js'\nimport { parseSearchParams } from '../../utilities/parseSearchParams.js'\nimport { ConfirmationModal } from '../ConfirmationModal/index.js'\nimport { ListSelectionButton } from '../ListSelection/index.js'\n\nconst confirmManyDeleteDrawerSlug = `confirm-delete-many-docs`\n\nexport type Props = {\n  collection: ClientCollectionConfig\n  title?: string\n}\n\nexport const DeleteMany: React.FC<Props> = (props) => {\n  const { collection: { slug } = {} } = props\n\n  const { permissions } = useAuth()\n  const { count, getSelectedIds, selectAll, toggleAll } = useSelection()\n  const router = useRouter()\n  const searchParams = useSearchParams()\n  const { clearRouteCache } = useRouteCache()\n\n  const collectionPermissions = permissions?.collections?.[slug]\n  const hasDeletePermission = collectionPermissions?.delete\n\n  if (selectAll === SelectAllStatus.None || !hasDeletePermission) {\n    return null\n  }\n\n  const selectingAll = selectAll === SelectAllStatus.AllAvailable\n  const selectedIDs = !selectingAll ? getSelectedIds() : []\n\n  return (\n    <React.Fragment>\n      <DeleteMany_v4\n        afterDelete={() => {\n          toggleAll()\n\n          router.replace(\n            qs.stringify(\n              {\n                ...parseSearchParams(searchParams),\n                page: selectAll ? '1' : undefined,\n              },\n              { addQueryPrefix: true },\n            ),\n          )\n\n          clearRouteCache()\n        }}\n        search={parseSearchParams(searchParams)?.search as string}\n        selections={{\n          [slug]: {\n            all: selectAll === SelectAllStatus.AllAvailable,\n            ids: selectedIDs,\n            totalCount: selectingAll ? count : selectedIDs.length,\n          },\n        }}\n        where={parseSearchParams(searchParams)?.where as Where}\n      />\n    </React.Fragment>\n  )\n}\n\ntype AfterDeleteResult = {\n  [relationTo: string]: {\n    deletedCount: number\n    errors: unknown[]\n    ids: (number | string)[]\n    totalCount: number\n  }\n}\ntype DeleteMany_v4Props = {\n  /**\n   * A callback function to be called after the delete request is completed.\n   */\n  afterDelete?: (result: AfterDeleteResult) => void\n  /**\n   * Optionally pass a search string to filter the documents to be deleted.\n   *\n   * This is intentionally passed as a prop so modals could pass in their own\n   * search string that may not be stored in the URL.\n   */\n  search?: string\n  /**\n   * An object containing the relationTo as the key and an object with the following properties:\n   * - all: boolean\n   * - totalCount: number\n   * - ids: (string | number)[]\n   */\n  selections: {\n    [relationTo: string]: {\n      all?: boolean\n      ids?: (number | string)[]\n      totalCount?: number\n    }\n  }\n  /**\n   * Optionally pass a where clause to filter the documents to be deleted.\n   * This will be ignored if multiple relations are selected.\n   *\n   * This is intentionally passed as a prop so modals could pass in their own\n   * where clause that may not be stored in the URL.\n   */\n  where?: Where\n}\n\n/**\n * Handles polymorphic document delete operations.\n *\n * If you are deleting monomorphic documents, shape your `selections` to match the polymorphic structure.\n */\nexport function DeleteMany_v4({ afterDelete, search, selections, where }: DeleteMany_v4Props) {\n  const { t } = useTranslation()\n  const {\n    config: {\n      collections,\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n  const { code: locale } = useLocale()\n  const { i18n } = useTranslation()\n  const { openModal } = useModal()\n\n  const handleDelete = React.useCallback(async () => {\n    const deletingOneCollection = Object.keys(selections).length === 1\n    const result: AfterDeleteResult = {}\n    for (const [relationTo, { all, ids = [] }] of Object.entries(selections)) {\n      const collectionConfig = collections.find(({ slug }) => slug === relationTo)\n      if (collectionConfig) {\n        let whereConstraint: Where\n\n        if (all) {\n          // selecting all documents with optional where filter\n          if (deletingOneCollection && where) {\n            whereConstraint = where\n          } else {\n            whereConstraint = {\n              id: { not_equals: '' },\n            }\n          }\n        } else {\n          // selecting specific documents\n          whereConstraint = {\n            id: {\n              in: ids,\n            },\n          }\n        }\n\n        const deleteManyResponse = await requests.delete(\n          `${serverURL}${api}/${relationTo}${qs.stringify(\n            {\n              limit: 0,\n              locale,\n              where: mergeListSearchAndWhere({\n                collectionConfig,\n                search,\n                where: whereConstraint,\n              }),\n            },\n            { addQueryPrefix: true },\n          )}`,\n          {\n            headers: {\n              'Accept-Language': i18n.language,\n              'Content-Type': 'application/json',\n            },\n          },\n        )\n\n        try {\n          const { plural, singular } = collectionConfig.labels\n          const json = await deleteManyResponse.json()\n\n          const deletedDocs = json?.docs.length || 0\n          const successLabel = deletedDocs > 1 ? plural : singular\n\n          if (deleteManyResponse.status < 400 || deletedDocs > 0) {\n            toast.success(\n              t('general:deletedCountSuccessfully', {\n                count: deletedDocs,\n                label: getTranslation(successLabel, i18n),\n              }),\n            )\n          }\n\n          if (json?.errors.length > 0) {\n            toast.error(json.message, {\n              description: json.errors.map((error) => error.message).join('\\n'),\n            })\n          }\n\n          result[relationTo] = {\n            deletedCount: deletedDocs,\n            errors: json?.errors || null,\n            ids: json?.docs.map((doc) => doc.id) || [],\n            totalCount: json.totalDocs,\n          }\n\n          if (deleteManyResponse.status > 400 && json?.errors.length === 0) {\n            toast.error(t('error:unknown'))\n            result[relationTo].errors = [t('error:unknown')]\n          }\n          continue\n        } catch (_err) {\n          toast.error(t('error:unknown'))\n          result[relationTo] = {\n            deletedCount: 0,\n            errors: [_err],\n            ids: [],\n            totalCount: 0,\n          }\n          continue\n        }\n      }\n    }\n\n    if (typeof afterDelete === 'function') {\n      afterDelete(result)\n    }\n  }, [selections, afterDelete, collections, locale, search, serverURL, api, i18n, where, t])\n\n  const { label: labelString, labelCount } = Object.entries(selections).reduce(\n    (acc, [key, value], index, array) => {\n      const collectionConfig = collections.find(({ slug }) => slug === key)\n      if (collectionConfig) {\n        const labelCount = acc.labelCount === undefined ? value.totalCount : acc.labelCount\n        const collectionLabel = `${acc.labelCount !== undefined ? `${value.totalCount} ` : ''}${getTranslation(\n          value.totalCount > 1 ? collectionConfig.labels.plural : collectionConfig.labels.singular,\n          i18n,\n        )}`\n        let newLabel\n        if (index === array.length - 1 && index !== 0) {\n          newLabel = `${acc.label} and ${collectionLabel}`\n        } else if (index > 0) {\n          newLabel = `${acc.label}, ${collectionLabel}`\n        } else {\n          newLabel = collectionLabel\n        }\n\n        return {\n          label: newLabel,\n          labelCount,\n        }\n      }\n      return acc\n    },\n    {\n      label: '',\n      labelCount: undefined,\n    },\n  )\n\n  return (\n    <React.Fragment>\n      <ListSelectionButton\n        aria-label={t('general:delete')}\n        className=\"delete-documents__toggle\"\n        onClick={() => {\n          openModal(confirmManyDeleteDrawerSlug)\n        }}\n      >\n        {t('general:delete')}\n      </ListSelectionButton>\n      <ConfirmationModal\n        body={t('general:aboutToDeleteCount', {\n          count: labelCount,\n          label: labelString,\n        })}\n        confirmingLabel={t('general:deleting')}\n        heading={t('general:confirmDeletion')}\n        modalSlug={confirmManyDeleteDrawerSlug}\n        onConfirm={handleDelete}\n      />\n    </React.Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]}