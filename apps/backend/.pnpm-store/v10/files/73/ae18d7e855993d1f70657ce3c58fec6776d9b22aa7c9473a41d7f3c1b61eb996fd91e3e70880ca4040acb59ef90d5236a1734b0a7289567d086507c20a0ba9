{"version":3,"sources":["../../../src/folders/utils/getFolderData.ts"],"sourcesContent":["import type { CollectionSlug } from '../../index.js'\nimport type { PayloadRequest, Where } from '../../types/index.js'\nimport type { GetFolderDataResult } from '../types.js'\n\nimport { parseDocumentID } from '../../index.js'\nimport { getFolderBreadcrumbs } from './getFolderBreadcrumbs.js'\nimport { queryDocumentsAndFoldersFromJoin } from './getFoldersAndDocumentsFromJoin.js'\nimport { getOrphanedDocs } from './getOrphanedDocs.js'\n\ntype Args = {\n  /**\n   * Specify to query documents from a specific collection\n   * @default undefined\n   * @example 'posts'\n   */\n  collectionSlug?: CollectionSlug\n  /**\n   * Optional where clause to filter documents by\n   * @default undefined\n   */\n  documentWhere?: Where\n  /**\n   * The ID of the folder to query documents from\n   * @default undefined\n   */\n  folderID?: number | string\n  /** Optional where clause to filter subfolders by\n   * @default undefined\n   */\n  folderWhere?: Where\n  req: PayloadRequest\n}\n/**\n * Query for documents, subfolders and breadcrumbs for a given folder\n */\nexport const getFolderData = async ({\n  collectionSlug,\n  documentWhere,\n  folderID: _folderID,\n  folderWhere,\n  req,\n}: Args): Promise<GetFolderDataResult> => {\n  const { payload } = req\n\n  if (payload.config.folders === false) {\n    throw new Error('Folders are not enabled')\n  }\n\n  const parentFolderID = parseDocumentID({\n    id: _folderID,\n    collectionSlug: payload.config.folders.slug,\n    payload,\n  })\n\n  const breadcrumbsPromise = getFolderBreadcrumbs({\n    folderID: parentFolderID,\n    req,\n  })\n\n  if (parentFolderID) {\n    // subfolders and documents are queried together\n    const documentAndSubfolderPromise = queryDocumentsAndFoldersFromJoin({\n      documentWhere,\n      folderWhere,\n      parentFolderID,\n      req,\n    })\n    const [breadcrumbs, documentsAndSubfolders] = await Promise.all([\n      breadcrumbsPromise,\n      documentAndSubfolderPromise,\n    ])\n\n    return {\n      breadcrumbs,\n      documents: documentsAndSubfolders.documents,\n      subfolders: documentsAndSubfolders.subfolders,\n    }\n  } else {\n    // subfolders and documents are queried separately\n    const subfoldersPromise = getOrphanedDocs({\n      collectionSlug: payload.config.folders.slug,\n      folderFieldName: payload.config.folders.fieldName,\n      req,\n      where: folderWhere,\n    })\n    const documentsPromise = collectionSlug\n      ? getOrphanedDocs({\n          collectionSlug,\n          folderFieldName: payload.config.folders.fieldName,\n          req,\n          where: documentWhere,\n        })\n      : Promise.resolve([])\n    const [breadcrumbs, subfolders, documents] = await Promise.all([\n      breadcrumbsPromise,\n      subfoldersPromise,\n      documentsPromise,\n    ])\n    return {\n      breadcrumbs,\n      documents,\n      subfolders,\n    }\n  }\n}\n"],"names":["parseDocumentID","getFolderBreadcrumbs","queryDocumentsAndFoldersFromJoin","getOrphanedDocs","getFolderData","collectionSlug","documentWhere","folderID","_folderID","folderWhere","req","payload","config","folders","Error","parentFolderID","id","slug","breadcrumbsPromise","documentAndSubfolderPromise","breadcrumbs","documentsAndSubfolders","Promise","all","documents","subfolders","subfoldersPromise","folderFieldName","fieldName","where","documentsPromise","resolve"],"mappings":"AAIA,SAASA,eAAe,QAAQ,iBAAgB;AAChD,SAASC,oBAAoB,QAAQ,4BAA2B;AAChE,SAASC,gCAAgC,QAAQ,sCAAqC;AACtF,SAASC,eAAe,QAAQ,uBAAsB;AAyBtD;;CAEC,GACD,OAAO,MAAMC,gBAAgB,OAAO,EAClCC,cAAc,EACdC,aAAa,EACbC,UAAUC,SAAS,EACnBC,WAAW,EACXC,GAAG,EACE;IACL,MAAM,EAAEC,OAAO,EAAE,GAAGD;IAEpB,IAAIC,QAAQC,MAAM,CAACC,OAAO,KAAK,OAAO;QACpC,MAAM,IAAIC,MAAM;IAClB;IAEA,MAAMC,iBAAiBf,gBAAgB;QACrCgB,IAAIR;QACJH,gBAAgBM,QAAQC,MAAM,CAACC,OAAO,CAACI,IAAI;QAC3CN;IACF;IAEA,MAAMO,qBAAqBjB,qBAAqB;QAC9CM,UAAUQ;QACVL;IACF;IAEA,IAAIK,gBAAgB;QAClB,gDAAgD;QAChD,MAAMI,8BAA8BjB,iCAAiC;YACnEI;YACAG;YACAM;YACAL;QACF;QACA,MAAM,CAACU,aAAaC,uBAAuB,GAAG,MAAMC,QAAQC,GAAG,CAAC;YAC9DL;YACAC;SACD;QAED,OAAO;YACLC;YACAI,WAAWH,uBAAuBG,SAAS;YAC3CC,YAAYJ,uBAAuBI,UAAU;QAC/C;IACF,OAAO;QACL,kDAAkD;QAClD,MAAMC,oBAAoBvB,gBAAgB;YACxCE,gBAAgBM,QAAQC,MAAM,CAACC,OAAO,CAACI,IAAI;YAC3CU,iBAAiBhB,QAAQC,MAAM,CAACC,OAAO,CAACe,SAAS;YACjDlB;YACAmB,OAAOpB;QACT;QACA,MAAMqB,mBAAmBzB,iBACrBF,gBAAgB;YACdE;YACAsB,iBAAiBhB,QAAQC,MAAM,CAACC,OAAO,CAACe,SAAS;YACjDlB;YACAmB,OAAOvB;QACT,KACAgB,QAAQS,OAAO,CAAC,EAAE;QACtB,MAAM,CAACX,aAAaK,YAAYD,UAAU,GAAG,MAAMF,QAAQC,GAAG,CAAC;YAC7DL;YACAQ;YACAI;SACD;QACD,OAAO;YACLV;YACAI;YACAC;QACF;IACF;AACF,EAAC"}