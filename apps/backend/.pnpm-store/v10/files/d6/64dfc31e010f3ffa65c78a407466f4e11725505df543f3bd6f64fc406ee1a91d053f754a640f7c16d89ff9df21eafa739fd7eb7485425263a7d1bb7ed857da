{"version":3,"sources":["../../src/queries/buildQuery.ts"],"sourcesContent":["import type { FlattenedField, Where } from 'payload'\n\nimport type { MongooseAdapter } from '../index.js'\n\nimport { parseParams } from './parseParams.js'\n\nexport const buildQuery = async ({\n  adapter,\n  collectionSlug,\n  fields,\n  globalSlug,\n  locale,\n  where,\n}: {\n  adapter: MongooseAdapter\n  collectionSlug?: string\n  fields: FlattenedField[]\n  globalSlug?: string\n  locale?: string\n  where: Where\n}) => {\n  const result = await parseParams({\n    collectionSlug,\n    fields,\n    globalSlug,\n    locale,\n    parentIsLocalized: false,\n    payload: adapter.payload,\n    where,\n  })\n\n  return result\n}\n"],"names":["parseParams","buildQuery","adapter","collectionSlug","fields","globalSlug","locale","where","result","parentIsLocalized","payload"],"mappings":"AAIA,SAASA,WAAW,QAAQ,mBAAkB;AAE9C,OAAO,MAAMC,aAAa,OAAO,EAC/BC,OAAO,EACPC,cAAc,EACdC,MAAM,EACNC,UAAU,EACVC,MAAM,EACNC,KAAK,EAQN;IACC,MAAMC,SAAS,MAAMR,YAAY;QAC/BG;QACAC;QACAC;QACAC;QACAG,mBAAmB;QACnBC,SAASR,QAAQQ,OAAO;QACxBH;IACF;IAEA,OAAOC;AACT,EAAC"}