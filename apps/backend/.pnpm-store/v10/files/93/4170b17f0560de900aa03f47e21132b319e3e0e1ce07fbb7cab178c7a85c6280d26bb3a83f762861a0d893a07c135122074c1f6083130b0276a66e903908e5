{"version":3,"sources":["../../src/utilities/transform.spec.ts"],"sourcesContent":["import { flattenAllFields, type Field, type SanitizedConfig } from 'payload'\n\nimport { Types } from 'mongoose'\n\nimport { transform } from './transform.js'\nimport type { MongooseAdapter } from '../index.js'\n\nconst flattenRelationshipValues = (obj: Record<string, any>, prefix = ''): Record<string, any> => {\n  return Object.keys(obj).reduce(\n    (acc, key) => {\n      const fullKey = prefix ? `${prefix}.${key}` : key\n      const value = obj[key]\n\n      if (value && typeof value === 'object' && !(value instanceof Types.ObjectId)) {\n        Object.assign(acc, flattenRelationshipValues(value, fullKey))\n        // skip relationTo and blockType\n      } else if (!fullKey.endsWith('relationTo') && !fullKey.endsWith('blockType')) {\n        acc[fullKey] = value\n      }\n\n      return acc\n    },\n    {} as Record<string, any>,\n  )\n}\n\nconst relsFields: Field[] = [\n  {\n    name: 'rel_1',\n    type: 'relationship',\n    relationTo: 'rels',\n  },\n  {\n    name: 'rel_1_l',\n    type: 'relationship',\n    localized: true,\n    relationTo: 'rels',\n  },\n  {\n    name: 'rel_2',\n    type: 'relationship',\n    hasMany: true,\n    relationTo: 'rels',\n  },\n  {\n    name: 'rel_2_l',\n    type: 'relationship',\n    hasMany: true,\n    localized: true,\n    relationTo: 'rels',\n  },\n  {\n    name: 'rel_3',\n    type: 'relationship',\n    relationTo: ['rels'],\n  },\n  {\n    name: 'rel_3_l',\n    type: 'relationship',\n    localized: true,\n    relationTo: ['rels'],\n  },\n  {\n    name: 'rel_4',\n    type: 'relationship',\n    hasMany: true,\n    relationTo: ['rels'],\n  },\n  {\n    name: 'rel_4_l',\n    type: 'relationship',\n    hasMany: true,\n    localized: true,\n    relationTo: ['rels'],\n  },\n]\n\nconst referenceBlockFields: Field[] = [\n  ...relsFields,\n  {\n    name: 'group',\n    type: 'group',\n    fields: relsFields,\n  },\n  {\n    name: 'array',\n    type: 'array',\n    fields: relsFields,\n  },\n]\n\nconst config = {\n  blocks: [\n    {\n      slug: 'reference-block',\n      fields: referenceBlockFields,\n      flattenedFields: flattenAllFields({ fields: referenceBlockFields }),\n    },\n  ],\n  collections: [\n    {\n      slug: 'docs',\n      fields: [\n        ...relsFields,\n        {\n          name: 'array',\n          type: 'array',\n          fields: [\n            {\n              name: 'array',\n              type: 'array',\n              fields: relsFields,\n            },\n            {\n              name: 'blocks',\n              type: 'blocks',\n              blocks: [{ slug: 'block', fields: relsFields }],\n            },\n            ...relsFields,\n          ],\n        },\n        {\n          name: 'arrayLocalized',\n          type: 'array',\n          fields: [\n            {\n              name: 'array',\n              type: 'array',\n              fields: relsFields,\n            },\n            {\n              name: 'blocks',\n              type: 'blocks',\n              blocks: [{ slug: 'block', fields: relsFields }],\n            },\n            ...relsFields,\n          ],\n          localized: true,\n        },\n        {\n          name: 'blocks',\n          type: 'blocks',\n          blocks: [\n            {\n              slug: 'block',\n              fields: [\n                ...relsFields,\n                {\n                  name: 'group',\n                  type: 'group',\n                  fields: relsFields,\n                },\n                {\n                  name: 'array',\n                  type: 'array',\n                  fields: relsFields,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'blockReferences',\n          type: 'blocks',\n          blockReferences: ['reference-block'],\n        },\n        {\n          name: 'group',\n          type: 'group',\n          fields: [\n            ...relsFields,\n            {\n              name: 'array',\n              type: 'array',\n              fields: relsFields,\n            },\n          ],\n        },\n        {\n          name: 'groupLocalized',\n          type: 'group',\n          fields: [\n            ...relsFields,\n            {\n              name: 'array',\n              type: 'array',\n              fields: relsFields,\n            },\n          ],\n          localized: true,\n        },\n        {\n          name: 'groupAndRow',\n          type: 'group',\n          fields: [\n            {\n              type: 'row',\n              fields: [\n                ...relsFields,\n                {\n                  type: 'array',\n                  name: 'array',\n                  fields: relsFields,\n                },\n              ],\n            },\n          ],\n        },\n        {\n          type: 'tabs',\n          tabs: [\n            {\n              name: 'tab',\n              fields: relsFields,\n            },\n            {\n              name: 'tabLocalized',\n              fields: relsFields,\n              localized: true,\n            },\n            {\n              label: 'another',\n              fields: [\n                {\n                  type: 'tabs',\n                  tabs: [\n                    {\n                      name: 'nestedTab',\n                      fields: relsFields,\n                    },\n                  ],\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n    {\n      slug: 'rels',\n      fields: [],\n    },\n  ],\n  localization: {\n    defaultLocale: 'en',\n    localeCodes: ['en', 'es'],\n    locales: [\n      { code: 'en', label: 'EN' },\n      { code: 'es', label: 'ES' },\n    ],\n  },\n} as SanitizedConfig\n\nconst relsData = {\n  rel_1: new Types.ObjectId().toHexString(),\n  rel_1_l: {\n    en: new Types.ObjectId().toHexString(),\n    es: new Types.ObjectId().toHexString(),\n  },\n  rel_2: [new Types.ObjectId().toHexString()],\n  rel_2_l: {\n    en: [new Types.ObjectId().toHexString()],\n    es: [new Types.ObjectId().toHexString()],\n  },\n  rel_3: {\n    relationTo: 'rels',\n    value: new Types.ObjectId().toHexString(),\n  },\n  rel_3_l: {\n    en: {\n      relationTo: 'rels',\n      value: new Types.ObjectId().toHexString(),\n    },\n    es: {\n      relationTo: 'rels',\n      value: new Types.ObjectId().toHexString(),\n    },\n  },\n  rel_4: [\n    {\n      relationTo: 'rels',\n      value: new Types.ObjectId().toHexString(),\n    },\n  ],\n  rel_4_l: {\n    en: [\n      {\n        relationTo: 'rels',\n        value: new Types.ObjectId().toHexString(),\n      },\n    ],\n    es: [\n      {\n        relationTo: 'rels',\n        value: new Types.ObjectId().toHexString(),\n      },\n    ],\n  },\n}\n\ndescribe('transform', () => {\n  it('should sanitize relationships', () => {\n    const data = {\n      ...relsData,\n      array: [\n        {\n          ...relsData,\n          array: [{ ...relsData }],\n          blocks: [\n            {\n              blockType: 'block',\n              ...relsData,\n            },\n          ],\n        },\n      ],\n      arrayLocalized: {\n        en: [\n          {\n            ...relsData,\n            array: [{ ...relsData }],\n            blocks: [\n              {\n                blockType: 'block',\n                ...relsData,\n              },\n            ],\n          },\n        ],\n        es: [\n          {\n            ...relsData,\n            array: [{ ...relsData }],\n            blocks: [\n              {\n                blockType: 'block',\n                ...relsData,\n              },\n            ],\n          },\n        ],\n      },\n      blocks: [\n        {\n          blockType: 'block',\n          ...relsData,\n          array: [{ ...relsData }],\n          group: { ...relsData },\n        },\n      ],\n      blockReferences: [\n        {\n          blockType: 'reference-block',\n          array: [{ ...relsData }],\n          group: { ...relsData },\n          ...relsData,\n        },\n      ],\n      group: {\n        ...relsData,\n        array: [{ ...relsData }],\n      },\n      groupAndRow: {\n        ...relsData,\n        array: [{ ...relsData }],\n      },\n      groupLocalized: {\n        en: {\n          ...relsData,\n          array: [{ ...relsData }],\n        },\n        es: {\n          ...relsData,\n          array: [{ ...relsData }],\n        },\n      },\n      tab: { ...relsData },\n      tabLocalized: {\n        en: { ...relsData },\n        es: { ...relsData },\n      },\n      nestedTab: { ...relsData },\n    }\n    const flattenValuesBefore = Object.values(flattenRelationshipValues(data))\n\n    const mockAdapter = {\n      payload: {\n        config,\n      },\n    } as MongooseAdapter\n\n    transform({\n      adapter: mockAdapter,\n      operation: 'write',\n      data,\n      fields: config.collections[0].fields,\n    })\n    const flattenValuesAfter = Object.values(flattenRelationshipValues(data))\n\n    flattenValuesAfter.forEach((value, i) => {\n      expect(value).toBeInstanceOf(Types.ObjectId)\n      expect(flattenValuesBefore[i]).toBe(value.toHexString())\n    })\n  })\n})\n"],"names":["flattenAllFields","Types","transform","flattenRelationshipValues","obj","prefix","Object","keys","reduce","acc","key","fullKey","value","ObjectId","assign","endsWith","relsFields","name","type","relationTo","localized","hasMany","referenceBlockFields","fields","config","blocks","slug","flattenedFields","collections","blockReferences","tabs","label","localization","defaultLocale","localeCodes","locales","code","relsData","rel_1","toHexString","rel_1_l","en","es","rel_2","rel_2_l","rel_3","rel_3_l","rel_4","rel_4_l","describe","it","data","array","blockType","arrayLocalized","group","groupAndRow","groupLocalized","tab","tabLocalized","nestedTab","flattenValuesBefore","values","mockAdapter","payload","adapter","operation","flattenValuesAfter","forEach","i","expect","toBeInstanceOf","toBe"],"mappings":"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"}