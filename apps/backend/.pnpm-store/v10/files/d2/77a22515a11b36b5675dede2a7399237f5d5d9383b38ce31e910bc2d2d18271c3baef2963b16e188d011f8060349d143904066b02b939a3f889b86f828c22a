{"version":3,"file":"getFolderResultsComponentAndData.js","names":["APIError","formatErrors","getFolderData","buildFolderWhereConstraints","FolderFileTable","ItemCardGrid","getFolderResultsComponentAndDataHandler","args","req","res","getFolderResultsComponentAndData","err","payload","logger","error","msg","message","activeCollectionSlugs","browseByFolder","displayAs","folderID","undefined","sort","config","folders","collectionSlug","documentWhere","folderWhere","activeCollectionSlug","slug","folderCollectionConstraints","collectionConfig","collections","localeCode","locale","search","query","or","collectionConstraints","push","folderData","FolderResultsComponent","_jsxs","subfolders","length","_jsx","_Fragment","items","title","type","documents","subfolderCount","showRelationCell","breadcrumbs"],"sources":["../../src/utilities/getFolderResultsComponentAndData.tsx"],"sourcesContent":["import type {\n  CollectionSlug,\n  ErrorResult,\n  GetFolderResultsComponentAndDataArgs,\n  ServerFunction,\n  Where,\n} from 'payload'\nimport type { FolderBreadcrumb, FolderOrDocument } from 'payload/shared'\n\nimport { APIError, formatErrors, getFolderData } from 'payload'\nimport { buildFolderWhereConstraints } from 'payload/shared'\n\nimport {\n  FolderFileTable,\n  ItemCardGrid,\n  // eslint-disable-next-line payload/no-imports-from-exports-dir -- This component is returned via server functions, it must reference the exports dir\n} from '../exports/client/index.js'\n\ntype GetFolderResultsComponentAndDataResult = {\n  breadcrumbs?: FolderBreadcrumb[]\n  documents?: FolderOrDocument[]\n  FolderResultsComponent: React.ReactNode\n  subfolders?: FolderOrDocument[]\n}\n\ntype GetFolderResultsComponentAndDataErrorResult = {\n  breadcrumbs?: never\n  documents?: never\n  FolderResultsComponent?: never\n  subfolders?: never\n} & (\n  | {\n      message: string\n    }\n  | ErrorResult\n)\n\nexport const getFolderResultsComponentAndDataHandler: ServerFunction<\n  GetFolderResultsComponentAndDataArgs,\n  Promise<GetFolderResultsComponentAndDataErrorResult | GetFolderResultsComponentAndDataResult>\n> = async (args) => {\n  const { req } = args\n\n  try {\n    const res = await getFolderResultsComponentAndData(args)\n    return res\n  } catch (err) {\n    req.payload.logger.error({ err, msg: `There was an error building form state` })\n\n    if (err.message === 'Could not find field schema for given path') {\n      return {\n        message: err.message,\n      }\n    }\n\n    if (err.message === 'Unauthorized') {\n      return null\n    }\n\n    return formatErrors(err)\n  }\n}\n\n/**\n * This function is responsible for fetching folder data, building the results component\n * and returns the data and component together.\n *\n *\n * Open ended questions:\n * - If we rerender the results section, does the provider update?? I dont think so, if the provider is on the server.\n *   Maybe we should move the provider to the client.\n */\nexport const getFolderResultsComponentAndData = async ({\n  activeCollectionSlugs,\n  browseByFolder,\n  displayAs,\n  folderID = undefined,\n  req,\n  sort,\n}: GetFolderResultsComponentAndDataArgs): Promise<GetFolderResultsComponentAndDataResult> => {\n  const { payload } = req\n\n  if (!payload.config.folders) {\n    throw new APIError('Folders are not enabled in the configuration.')\n  }\n\n  let collectionSlug: CollectionSlug | undefined = undefined\n  let documentWhere: undefined | Where = undefined\n  let folderWhere: undefined | Where = undefined\n\n  // todo(perf): - collect promises and resolve them in parallel\n  for (const activeCollectionSlug of activeCollectionSlugs) {\n    if (activeCollectionSlug === payload.config.folders.slug) {\n      const folderCollectionConstraints = await buildFolderWhereConstraints({\n        collectionConfig: payload.collections[activeCollectionSlug].config,\n        folderID,\n        localeCode: req?.locale,\n        req,\n        search: typeof req?.query?.search === 'string' ? req.query.search : undefined,\n        sort,\n      })\n\n      if (folderCollectionConstraints) {\n        folderWhere = folderCollectionConstraints\n      }\n    } else if ((browseByFolder && folderID) || !browseByFolder) {\n      if (!browseByFolder) {\n        collectionSlug = activeCollectionSlug\n      }\n\n      if (!documentWhere) {\n        documentWhere = {\n          or: [],\n        }\n      }\n\n      const collectionConstraints = await buildFolderWhereConstraints({\n        collectionConfig: payload.collections[activeCollectionSlug].config,\n        folderID,\n        localeCode: req?.locale,\n        req,\n        search: typeof req?.query?.search === 'string' ? req.query.search : undefined,\n        sort,\n      })\n\n      if (collectionConstraints) {\n        documentWhere.or.push(collectionConstraints)\n      }\n    }\n  }\n\n  const folderData = await getFolderData({\n    collectionSlug,\n    documentWhere,\n    folderID,\n    folderWhere,\n    req,\n  })\n\n  let FolderResultsComponent = null\n\n  if (displayAs === 'grid') {\n    FolderResultsComponent = (\n      <div>\n        {folderData.subfolders.length ? (\n          <>\n            <ItemCardGrid items={folderData.subfolders} title={'Folders'} type=\"folder\" />\n          </>\n        ) : null}\n\n        {folderData.documents.length ? (\n          <>\n            <ItemCardGrid\n              items={folderData.documents}\n              subfolderCount={folderData.subfolders.length}\n              title={'Documents'}\n              type=\"file\"\n            />\n          </>\n        ) : null}\n      </div>\n    )\n  } else {\n    FolderResultsComponent = <FolderFileTable showRelationCell={browseByFolder} />\n  }\n\n  return {\n    breadcrumbs: folderData.breadcrumbs,\n    documents: folderData.documents,\n    FolderResultsComponent,\n    subfolders: folderData.subfolders,\n  }\n}\n"],"mappings":"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","ignoreList":[]}