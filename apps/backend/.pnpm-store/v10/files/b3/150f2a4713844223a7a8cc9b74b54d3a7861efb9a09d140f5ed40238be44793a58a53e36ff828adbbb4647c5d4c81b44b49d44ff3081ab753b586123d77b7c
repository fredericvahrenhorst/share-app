{"version":3,"file":"reducer.js","names":["formsManagementReducer","state","action","type","newForms","i","files","length","errorCount","formID","crypto","randomUUID","formState","initialState","file","initialValue","valid","value","uploadEdits","activeIndex","forms","remainingFormStates","removedForm","splice","index","affectedByShift","nextIndex","boundedActiveIndex","Math","min","totalErrorCount","count","reduce","acc","form","updatedForms"],"sources":["../../../../src/elements/BulkUpload/FormsManager/reducer.ts"],"sourcesContent":["import type { FormState, UploadEdits } from 'payload'\n\nexport type State = {\n  activeIndex: number\n  forms: {\n    errorCount: number\n    formID: string\n    formState: FormState\n    uploadEdits?: UploadEdits\n  }[]\n  totalErrorCount: number\n}\n\ntype Action =\n  | {\n      count: number\n      index: number\n      type: 'UPDATE_ERROR_COUNT'\n    }\n  | {\n      errorCount: number\n      formState: FormState\n      index: number\n      type: 'UPDATE_FORM'\n      updatedFields?: Record<string, unknown>\n      uploadEdits?: UploadEdits\n    }\n  | {\n      files: FileList\n      initialState: FormState | null\n      type: 'ADD_FORMS'\n    }\n  | {\n      index: number\n      type: 'REMOVE_FORM'\n    }\n  | {\n      index: number\n      type: 'SET_ACTIVE_INDEX'\n    }\n  | {\n      state: Partial<State>\n      type: 'REPLACE'\n    }\n\nexport function formsManagementReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'ADD_FORMS': {\n      const newForms: State['forms'] = []\n      for (let i = 0; i < action.files.length; i++) {\n        newForms[i] = {\n          errorCount: 0,\n          formID: crypto.randomUUID(),\n          formState: {\n            ...(action.initialState || {}),\n            file: {\n              initialValue: action.files[i],\n              valid: true,\n              value: action.files[i],\n            },\n          },\n          uploadEdits: {},\n        }\n      }\n\n      return {\n        ...state,\n        activeIndex: 0,\n        forms: [...newForms, ...state.forms],\n      }\n    }\n    case 'REMOVE_FORM': {\n      const remainingFormStates = [...state.forms]\n      const [removedForm] = remainingFormStates.splice(action.index, 1)\n\n      const affectedByShift = state.activeIndex >= action.index\n      const nextIndex =\n        state.activeIndex === action.index\n          ? action.index\n          : affectedByShift\n            ? state.activeIndex - 1\n            : state.activeIndex\n      const boundedActiveIndex = Math.min(remainingFormStates.length - 1, nextIndex)\n\n      return {\n        ...state,\n        activeIndex: affectedByShift ? boundedActiveIndex : state.activeIndex,\n        forms: remainingFormStates,\n        totalErrorCount: state.totalErrorCount - removedForm.errorCount,\n      }\n    }\n    case 'REPLACE': {\n      return {\n        ...state,\n        ...action.state,\n      }\n    }\n    case 'SET_ACTIVE_INDEX': {\n      return {\n        ...state,\n        activeIndex: action.index,\n      }\n    }\n    case 'UPDATE_ERROR_COUNT': {\n      const forms = [...state.forms]\n      forms[action.index].errorCount = action.count\n\n      return {\n        ...state,\n        forms,\n        totalErrorCount: state.forms.reduce((acc, form) => acc + form.errorCount, 0),\n      }\n    }\n    case 'UPDATE_FORM': {\n      const updatedForms = [...state.forms]\n      updatedForms[action.index].errorCount = action.errorCount\n\n      // Merge the existing formState with the new formState\n      updatedForms[action.index] = {\n        ...updatedForms[action.index],\n        formState: {\n          ...updatedForms[action.index].formState,\n          ...action.formState,\n        },\n        uploadEdits: {\n          ...updatedForms[action.index].uploadEdits,\n          ...action.uploadEdits,\n        },\n      }\n\n      return {\n        ...state,\n        forms: updatedForms,\n        totalErrorCount: state.forms.reduce((acc, form) => acc + form.errorCount, 0),\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}