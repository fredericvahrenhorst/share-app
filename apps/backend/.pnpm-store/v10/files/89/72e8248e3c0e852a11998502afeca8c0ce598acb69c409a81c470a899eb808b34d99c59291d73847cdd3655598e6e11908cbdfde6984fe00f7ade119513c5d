{"version":3,"file":"CreatedAtCell.js","names":["c","_c","useConfig","useModal","useRouteTransition","useTranslation","formatDate","usePathname","useRouter","useSearchParams","VersionDrawerCreatedAtCell","t0","$","rowData","t1","t2","undefined","id","updatedAt","config","t3","admin","t4","dateFormat","closeAllModals","router","pathname","searchParams","startRouteTransition","i18n","t5","current","URLSearchParams","Array","from","entries","set","String","search","toString","query","push","t6","_jsx","className","onClick","type","children","date","pattern"],"sources":["../../../../../src/views/Version/SelectComparison/VersionDrawer/CreatedAtCell.tsx"],"sourcesContent":["'use client'\nimport { useConfig, useModal, useRouteTransition, useTranslation } from '@payloadcms/ui'\nimport { formatDate } from '@payloadcms/ui/shared'\nimport { usePathname, useRouter, useSearchParams } from 'next/navigation.js'\n\nimport type { CreatedAtCellProps } from '../../../Versions/cells/CreatedAt/index.js'\n\nexport const VersionDrawerCreatedAtCell: React.FC<CreatedAtCellProps> = ({\n  rowData: { id, updatedAt } = {},\n}) => {\n  const {\n    config: {\n      admin: { dateFormat },\n    },\n  } = useConfig()\n  const { closeAllModals } = useModal()\n  const router = useRouter()\n  const pathname = usePathname()\n  const searchParams = useSearchParams()\n  const { startRouteTransition } = useRouteTransition()\n\n  const { i18n } = useTranslation()\n\n  return (\n    <button\n      className=\"created-at-cell\"\n      onClick={() => {\n        closeAllModals()\n        const current = new URLSearchParams(Array.from(searchParams.entries()))\n\n        if (id) {\n          current.set('versionFrom', String(id))\n        }\n\n        const search = current.toString()\n        const query = search ? `?${search}` : ''\n\n        startRouteTransition(() => router.push(`${pathname}${query}`))\n      }}\n      type=\"button\"\n    >\n      {formatDate({ date: updatedAt, i18n, pattern: dateFormat })}\n    </button>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AACA,SAASC,SAAS,EAAEC,QAAQ,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ;AACxE,SAASC,UAAU,QAAQ;AAC3B,SAASC,WAAW,EAAEC,SAAS,EAAEC,eAAe,QAAQ;AAIxD,OAAO,MAAMC,0BAAA,GAA2DC,EAAA;EAAA,MAAAC,CAAA,GAAAX,EAAA;EAAC;IAAAY,OAAA,EAAAC;EAAA,IAAAH,EAExE;EAAA,IAAAI,EAAA;EAAA,IAAAH,CAAA,QAAAE,EAAA;IADUC,EAAA,GAAAD,EAAsB,KAAAE,SAAA,QAAtBF,EAAsB;IAAAF,CAAA,MAAAE,EAAA;IAAAF,CAAA,MAAAG,EAAA;EAAA;IAAAA,EAAA,GAAAH,CAAA;EAAA;EAAtB;IAAAK,EAAA;IAAAC;EAAA,IAAAH,EAAsB;EAE/B;IAAAI,MAAA,EAAAC;EAAA,IAIIlB,SAAA;EAHM;IAAAmB,KAAA,EAAAC;EAAA,IAAAF,EAEP;EADQ;IAAAG;EAAA,IAAAD,EAAc;EAGzB;IAAAE;EAAA,IAA2BrB,QAAA;EAC3B,MAAAsB,MAAA,GAAejB,SAAA;EACf,MAAAkB,QAAA,GAAiBnB,WAAA;EACjB,MAAAoB,YAAA,GAAqBlB,eAAA;EACrB;IAAAmB;EAAA,IAAiCxB,kBAAA;EAEjC;IAAAyB;EAAA,IAAiBxB,cAAA;EAAA,IAAAyB,EAAA;EAAA,IAAAlB,CAAA,QAAAY,cAAA,IAAAZ,CAAA,QAAAK,EAAA,IAAAL,CAAA,QAAAc,QAAA,IAAAd,CAAA,QAAAa,MAAA,IAAAb,CAAA,QAAAe,YAAA,IAAAf,CAAA,QAAAgB,oBAAA;IAKJE,EAAA,GAAAA,CAAA;MACPN,cAAA;MACA,MAAAO,OAAA,OAAAC,eAAA,CAAoCC,KAAA,CAAAC,IAAA,CAAWP,YAAA,CAAAQ,OAAA,CAAoB;MAAA,IAE/DlB,EAAA;QACFc,OAAA,CAAAK,GAAA,CAAY,eAAeC,MAAA,CAAOpB,EAAA;MAAA;MAGpC,MAAAqB,MAAA,GAAeP,OAAA,CAAAQ,QAAA,CAAgB;MAC/B,MAAAC,KAAA,GAAcF,MAAA,GAAS,IAAIA,MAAA,EAAQ,GAAG;MAEtCV,oBAAA,OAA2BH,MAAA,CAAAgB,IAAA,CAAY,GAAGf,QAAA,GAAWc,KAAA,EAAO;IAAA;IAC9D5B,CAAA,MAAAY,cAAA;IAAAZ,CAAA,MAAAK,EAAA;IAAAL,CAAA,MAAAc,QAAA;IAAAd,CAAA,MAAAa,MAAA;IAAAb,CAAA,MAAAe,YAAA;IAAAf,CAAA,MAAAgB,oBAAA;IAAAhB,CAAA,MAAAkB,EAAA;EAAA;IAAAA,EAAA,GAAAlB,CAAA;EAAA;EAAA,IAAA8B,EAAA;EAAA,IAAA9B,CAAA,QAAAW,UAAA,IAAAX,CAAA,SAAAiB,IAAA,IAAAjB,CAAA,SAAAkB,EAAA,IAAAlB,CAAA,SAAAM,SAAA;IAdFwB,EAAA,GAAAC,IAAA,CAAC;MAAAC,SAAA,EACW;MAAAC,OAAA,EACDf,EAYT;MAAAgB,IAAA,EACK;MAAAC,QAAA,EAEJzC,UAAA;QAAA0C,IAAA,EAAmB9B,SAAA;QAAAW,IAAA;QAAAoB,OAAA,EAA0B1B;MAAA,CAAW;IAAA,C;;;;;;;;;SAjB3DmB,E;CAoBJ","ignoreList":[]}