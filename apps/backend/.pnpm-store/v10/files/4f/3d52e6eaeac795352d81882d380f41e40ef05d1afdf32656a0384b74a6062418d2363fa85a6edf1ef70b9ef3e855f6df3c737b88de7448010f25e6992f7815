{"version":3,"file":"index.js","names":["RenderServerComponent","React","ShouldRenderTabs","DocumentTab","getTabs","baseClass","DocumentTabs","props","collectionConfig","globalConfig","i18n","payload","permissions","config","tabs","_jsx","className","map","tab","viewPath","index","condition","meetsCondition","Component","clientProps","path","importMap","key","serverProps"],"sources":["../../../../src/elements/DocumentHeader/Tabs/index.tsx"],"sourcesContent":["import type { I18n } from '@payloadcms/translations'\nimport type {\n  DocumentTabClientProps,\n  DocumentTabServerPropsOnly,\n  Payload,\n  SanitizedCollectionConfig,\n  SanitizedGlobalConfig,\n  SanitizedPermissions,\n} from 'payload'\n\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport React from 'react'\n\nimport { ShouldRenderTabs } from './ShouldRenderTabs.js'\nimport { DocumentTab } from './Tab/index.js'\nimport { getTabs } from './tabs/index.js'\nimport './index.scss'\n\nconst baseClass = 'doc-tabs'\n\nexport const DocumentTabs: React.FC<{\n  collectionConfig: SanitizedCollectionConfig\n  globalConfig: SanitizedGlobalConfig\n  i18n: I18n\n  payload: Payload\n  permissions: SanitizedPermissions\n}> = (props) => {\n  const { collectionConfig, globalConfig, i18n, payload, permissions } = props\n  const { config } = payload\n\n  const tabs = getTabs({\n    collectionConfig,\n    globalConfig,\n  })\n\n  return (\n    <ShouldRenderTabs>\n      <div className={baseClass}>\n        <div className={`${baseClass}__tabs-container`}>\n          <ul className={`${baseClass}__tabs`}>\n            {tabs?.map(({ tab, viewPath }, index) => {\n              const { condition } = tab || {}\n\n              const meetsCondition =\n                !condition || condition({ collectionConfig, config, globalConfig, permissions })\n\n              if (!meetsCondition) {\n                return null\n              }\n\n              if (tab?.Component) {\n                return RenderServerComponent({\n                  clientProps: {\n                    path: viewPath,\n                  } satisfies DocumentTabClientProps,\n                  Component: tab.Component,\n                  importMap: payload.importMap,\n                  key: `tab-${index}`,\n                  serverProps: {\n                    collectionConfig,\n                    globalConfig,\n                    i18n,\n                    payload,\n                    permissions,\n                  } satisfies DocumentTabServerPropsOnly,\n                })\n              }\n\n              return (\n                <DocumentTab\n                  key={`tab-${index}`}\n                  path={viewPath}\n                  {...{\n                    ...props,\n                    ...tab,\n                  }}\n                />\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </ShouldRenderTabs>\n  )\n}\n"],"mappings":";AAUA,SAASA,qBAAqB,QAAQ;AACtC,OAAOC,KAAA,MAAW;AAElB,SAASC,gBAAgB,QAAQ;AACjC,SAASC,WAAW,QAAQ;AAC5B,SAASC,OAAO,QAAQ;AAGxB,MAAMC,SAAA,GAAY;AAElB,OAAO,MAAMC,YAAA,GAMPC,KAAA;EACJ,MAAM;IAAEC,gBAAgB;IAAEC,YAAY;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAW,CAAE,GAAGL,KAAA;EACvE,MAAM;IAAEM;EAAM,CAAE,GAAGF,OAAA;EAEnB,MAAMG,IAAA,GAAOV,OAAA,CAAQ;IACnBI,gBAAA;IACAC;EACF;EAEA,oBACEM,IAAA,CAACb,gBAAA;cACC,aAAAa,IAAA,CAAC;MAAIC,SAAA,EAAWX,SAAA;gBACd,aAAAU,IAAA,CAAC;QAAIC,SAAA,EAAW,GAAGX,SAAA,kBAA2B;kBAC5C,aAAAU,IAAA,CAAC;UAAGC,SAAA,EAAW,GAAGX,SAAA,QAAiB;oBAChCS,IAAA,EAAMG,GAAA,CAAI,CAAC;YAAEC,GAAG;YAAEC;UAAQ,CAAE,EAAEC,KAAA;YAC7B,MAAM;cAAEC;YAAS,CAAE,GAAGH,GAAA,IAAO,CAAC;YAE9B,MAAMI,cAAA,GACJ,CAACD,SAAA,IAAaA,SAAA,CAAU;cAAEb,gBAAA;cAAkBK,MAAA;cAAQJ,YAAA;cAAcG;YAAY;YAEhF,IAAI,CAACU,cAAA,EAAgB;cACnB,OAAO;YACT;YAEA,IAAIJ,GAAA,EAAKK,SAAA,EAAW;cAClB,OAAOvB,qBAAA,CAAsB;gBAC3BwB,WAAA,EAAa;kBACXC,IAAA,EAAMN;gBACR;gBACAI,SAAA,EAAWL,GAAA,CAAIK,SAAS;gBACxBG,SAAA,EAAWf,OAAA,CAAQe,SAAS;gBAC5BC,GAAA,EAAK,OAAOP,KAAA,EAAO;gBACnBQ,WAAA,EAAa;kBACXpB,gBAAA;kBACAC,YAAA;kBACAC,IAAA;kBACAC,OAAA;kBACAC;gBACF;cACF;YACF;YAEA,oBACEG,IAAA,CAACZ,WAAA;cAECsB,IAAA,EAAMN,QAAA;cAEJ,GAAGZ,KAAK;cACR,GAAGW;eAJA,OAAOE,KAAA,EAAO;UAQzB;;;;;AAMZ","ignoreList":[]}