{"version":3,"file":"index.js","names":["$createHeadingNode","$isHeadingNode","HeadingNode","$setBlocksType","$getSelection","$isRangeSelection","H1Icon","H2Icon","H3Icon","H4Icon","H5Icon","H6Icon","createClientFeature","slashMenuBasicGroupWithItems","toolbarTextDropdownGroupWithItems","MarkdownTransformer","$setHeading","headingSize","selection","iconImports","h1","h2","h3","h4","h5","h6","HeadingFeatureClient","props","enabledHeadingSizes","toolbarGroups","map","i","ChildComponent","isActive","node","getNodes","getTag","parent","getParent","key","label","i18n","t","headingLevel","charAt","onSelect","editor","update","order","markdownTransformers","nodes","sanitizedClientFeatureProps","slashMenu","groups","length","Icon","keywords","toolbarFixed","toolbarInline"],"sources":["../../../../src/features/heading/client/index.tsx"],"sourcesContent":["'use client'\n\nimport type { HeadingTagType } from '@lexical/rich-text'\n\nimport { $createHeadingNode, $isHeadingNode, HeadingNode } from '@lexical/rich-text'\nimport { $setBlocksType } from '@lexical/selection'\nimport { $getSelection, $isRangeSelection } from 'lexical'\n\nimport type { ToolbarGroup } from '../../toolbars/types.js'\nimport type { HeadingFeatureProps } from '../server/index.js'\n\nimport { H1Icon } from '../../../lexical/ui/icons/H1/index.js'\nimport { H2Icon } from '../../../lexical/ui/icons/H2/index.js'\nimport { H3Icon } from '../../../lexical/ui/icons/H3/index.js'\nimport { H4Icon } from '../../../lexical/ui/icons/H4/index.js'\nimport { H5Icon } from '../../../lexical/ui/icons/H5/index.js'\nimport { H6Icon } from '../../../lexical/ui/icons/H6/index.js'\nimport { createClientFeature } from '../../../utilities/createClientFeature.js'\nimport { slashMenuBasicGroupWithItems } from '../../shared/slashMenu/basicGroup.js'\nimport { toolbarTextDropdownGroupWithItems } from '../../shared/toolbar/textDropdownGroup.js'\nimport { MarkdownTransformer } from '../markdownTransformer.js'\n\nconst $setHeading = (headingSize: HeadingTagType) => {\n  const selection = $getSelection()\n  $setBlocksType(selection, () => $createHeadingNode(headingSize))\n}\n\nconst iconImports = {\n  h1: H1Icon,\n  h2: H2Icon,\n  h3: H3Icon,\n  h4: H4Icon,\n  h5: H5Icon,\n  h6: H6Icon,\n}\n\nexport const HeadingFeatureClient = createClientFeature<HeadingFeatureProps>(({ props }) => {\n  const { enabledHeadingSizes = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] } = props\n\n  const toolbarGroups: ToolbarGroup[] = [\n    toolbarTextDropdownGroupWithItems(\n      enabledHeadingSizes.map((headingSize, i) => {\n        return {\n          ChildComponent: iconImports[headingSize],\n          isActive: ({ selection }) => {\n            if (!$isRangeSelection(selection)) {\n              return false\n            }\n            for (const node of selection.getNodes()) {\n              if ($isHeadingNode(node) && node.getTag() === headingSize) {\n                continue\n              }\n\n              const parent = node.getParent()\n              if ($isHeadingNode(parent) && parent.getTag() === headingSize) {\n                continue\n              }\n\n              return false\n            }\n            return true\n          },\n          key: headingSize,\n          label: ({ i18n }) => {\n            return i18n.t('lexical:heading:label', { headingLevel: headingSize.charAt(1) })\n          },\n          onSelect: ({ editor }) => {\n            editor.update(() => {\n              $setHeading(headingSize)\n            })\n          },\n          order: i + 2,\n        }\n      }),\n    ),\n  ]\n\n  return {\n    markdownTransformers: [MarkdownTransformer(enabledHeadingSizes)],\n    nodes: [HeadingNode],\n    sanitizedClientFeatureProps: props,\n    slashMenu: {\n      groups: enabledHeadingSizes?.length\n        ? [\n            slashMenuBasicGroupWithItems(\n              enabledHeadingSizes.map((headingSize) => {\n                return {\n                  Icon: iconImports[headingSize],\n                  key: `heading-${headingSize.charAt(1)}`,\n                  keywords: ['heading', headingSize],\n                  label: ({ i18n }) => {\n                    return i18n.t('lexical:heading:label', {\n                      headingLevel: headingSize.charAt(1),\n                    })\n                  },\n                  onSelect: ({ editor }) => {\n                    editor.update(() => {\n                      $setHeading(headingSize)\n                    })\n                  },\n                }\n              }),\n            ),\n          ]\n        : [],\n    },\n    toolbarFixed: {\n      groups: enabledHeadingSizes?.length ? toolbarGroups : [],\n    },\n    toolbarInline: {\n      groups: enabledHeadingSizes?.length ? toolbarGroups : [],\n    },\n  }\n})\n"],"mappings":"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","ignoreList":[]}