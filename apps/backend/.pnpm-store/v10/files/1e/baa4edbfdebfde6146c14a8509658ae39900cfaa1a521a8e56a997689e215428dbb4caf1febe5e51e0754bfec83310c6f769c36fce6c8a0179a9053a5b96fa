{"version":3,"sources":["../../src/utilities/handleError.ts"],"sourcesContent":["import type { PayloadRequest } from 'payload'\n\nimport { ValidationError } from 'payload'\n\nexport const handleError = ({\n  collection,\n  error,\n  global,\n  req,\n}: {\n  collection?: string\n  error: unknown\n  global?: string\n  req?: Partial<PayloadRequest>\n}) => {\n  if (!error || typeof error !== 'object') {\n    throw error\n  }\n\n  // Handle uniqueness error from MongoDB\n  if (\n    'code' in error &&\n    error.code === 11000 &&\n    'keyValue' in error &&\n    error.keyValue &&\n    typeof error.keyValue === 'object'\n  ) {\n    throw new ValidationError(\n      {\n        collection,\n        errors: [\n          {\n            message: req?.t ? req.t('error:valueMustBeUnique') : 'Value must be unique',\n            path: Object.keys(error.keyValue)[0] ?? '',\n          },\n        ],\n        global,\n      },\n      req?.t,\n    )\n  }\n\n  // eslint-disable-next-line @typescript-eslint/only-throw-error\n  throw error\n}\n"],"names":["ValidationError","handleError","collection","error","global","req","code","keyValue","errors","message","t","path","Object","keys"],"mappings":"AAEA,SAASA,eAAe,QAAQ,UAAS;AAEzC,OAAO,MAAMC,cAAc,CAAC,EAC1BC,UAAU,EACVC,KAAK,EACLC,MAAM,EACNC,GAAG,EAMJ;IACC,IAAI,CAACF,SAAS,OAAOA,UAAU,UAAU;QACvC,MAAMA;IACR;IAEA,uCAAuC;IACvC,IACE,UAAUA,SACVA,MAAMG,IAAI,KAAK,SACf,cAAcH,SACdA,MAAMI,QAAQ,IACd,OAAOJ,MAAMI,QAAQ,KAAK,UAC1B;QACA,MAAM,IAAIP,gBACR;YACEE;YACAM,QAAQ;gBACN;oBACEC,SAASJ,KAAKK,IAAIL,IAAIK,CAAC,CAAC,6BAA6B;oBACrDC,MAAMC,OAAOC,IAAI,CAACV,MAAMI,QAAQ,CAAC,CAAC,EAAE,IAAI;gBAC1C;aACD;YACDH;QACF,GACAC,KAAKK;IAET;IAEA,+DAA+D;IAC/D,MAAMP;AACR,EAAC"}