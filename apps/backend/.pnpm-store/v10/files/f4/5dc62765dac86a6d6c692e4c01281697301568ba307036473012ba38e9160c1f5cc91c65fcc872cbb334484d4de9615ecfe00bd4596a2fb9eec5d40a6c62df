{"version":3,"sources":["../../src/folders/createFolderCollection.ts"],"sourcesContent":["import type { CollectionConfig } from '../collections/config/types.js'\n\nimport { populateFolderDataEndpoint } from './endpoints/populateFolderData.js'\nimport { deleteSubfoldersBeforeDelete } from './hooks/deleteSubfoldersAfterDelete.js'\nimport { dissasociateAfterDelete } from './hooks/dissasociateAfterDelete.js'\nimport { reparentChildFolder } from './hooks/reparentChildFolder.js'\n\ntype CreateFolderCollectionArgs = {\n  collectionSlugs: string[]\n  debug?: boolean\n  folderFieldName: string\n  slug: string\n}\nexport const createFolderCollection = ({\n  slug,\n  collectionSlugs,\n  debug,\n  folderFieldName,\n}: CreateFolderCollectionArgs): CollectionConfig => ({\n  slug,\n  admin: {\n    hidden: !debug,\n    useAsTitle: 'name',\n  },\n  endpoints: [populateFolderDataEndpoint],\n  fields: [\n    {\n      name: 'name',\n      type: 'text',\n      index: true,\n      required: true,\n    },\n    {\n      name: folderFieldName,\n      type: 'relationship',\n      admin: {\n        hidden: !debug,\n      },\n      index: true,\n      relationTo: slug,\n    },\n    {\n      name: 'documentsAndFolders',\n      type: 'join',\n      admin: {\n        hidden: !debug,\n      },\n      collection: [slug, ...collectionSlugs],\n      hasMany: true,\n      on: folderFieldName,\n    },\n  ],\n  hooks: {\n    afterChange: [\n      reparentChildFolder({\n        folderFieldName,\n      }),\n    ],\n    afterDelete: [\n      dissasociateAfterDelete({\n        collectionSlugs,\n        folderFieldName,\n      }),\n    ],\n    beforeDelete: [deleteSubfoldersBeforeDelete({ folderFieldName, folderSlug: slug })],\n  },\n  labels: {\n    plural: 'Folders',\n    singular: 'Folder',\n  },\n  typescript: {\n    interface: 'FolderInterface',\n  },\n})\n"],"names":["populateFolderDataEndpoint","deleteSubfoldersBeforeDelete","dissasociateAfterDelete","reparentChildFolder","createFolderCollection","slug","collectionSlugs","debug","folderFieldName","admin","hidden","useAsTitle","endpoints","fields","name","type","index","required","relationTo","collection","hasMany","on","hooks","afterChange","afterDelete","beforeDelete","folderSlug","labels","plural","singular","typescript","interface"],"mappings":"AAEA,SAASA,0BAA0B,QAAQ,oCAAmC;AAC9E,SAASC,4BAA4B,QAAQ,yCAAwC;AACrF,SAASC,uBAAuB,QAAQ,qCAAoC;AAC5E,SAASC,mBAAmB,QAAQ,iCAAgC;AAQpE,OAAO,MAAMC,yBAAyB,CAAC,EACrCC,IAAI,EACJC,eAAe,EACfC,KAAK,EACLC,eAAe,EACY,GAAwB,CAAA;QACnDH;QACAI,OAAO;YACLC,QAAQ,CAACH;YACTI,YAAY;QACd;QACAC,WAAW;YAACZ;SAA2B;QACvCa,QAAQ;YACN;gBACEC,MAAM;gBACNC,MAAM;gBACNC,OAAO;gBACPC,UAAU;YACZ;YACA;gBACEH,MAAMN;gBACNO,MAAM;gBACNN,OAAO;oBACLC,QAAQ,CAACH;gBACX;gBACAS,OAAO;gBACPE,YAAYb;YACd;YACA;gBACES,MAAM;gBACNC,MAAM;gBACNN,OAAO;oBACLC,QAAQ,CAACH;gBACX;gBACAY,YAAY;oBAACd;uBAASC;iBAAgB;gBACtCc,SAAS;gBACTC,IAAIb;YACN;SACD;QACDc,OAAO;YACLC,aAAa;gBACXpB,oBAAoB;oBAClBK;gBACF;aACD;YACDgB,aAAa;gBACXtB,wBAAwB;oBACtBI;oBACAE;gBACF;aACD;YACDiB,cAAc;gBAACxB,6BAA6B;oBAAEO;oBAAiBkB,YAAYrB;gBAAK;aAAG;QACrF;QACAsB,QAAQ;YACNC,QAAQ;YACRC,UAAU;QACZ;QACAC,YAAY;YACVC,WAAW;QACb;IACF,CAAA,EAAE"}