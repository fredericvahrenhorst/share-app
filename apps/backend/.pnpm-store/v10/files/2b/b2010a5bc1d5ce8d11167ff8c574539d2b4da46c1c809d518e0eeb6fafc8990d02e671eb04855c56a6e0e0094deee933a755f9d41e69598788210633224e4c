{"version":3,"file":"renderCell.js","names":["MissingEditorProp","RenderCustomComponent","RenderServerComponent","DefaultCell","RenderDefaultCell","hasOptionLabelJSXElement","findValueFromPath","renderCell","clientField","collectionSlug","columnIndex","customCellProps","doc","enableRowSelections","i18n","isLinkedColumn","payload","rowIndex","serverField","baseCellClientProps","cellData","undefined","field","rowData","accessor","name","cellClientProps","link","cellServerProps","className","collectionConfig","collections","config","onClick","CustomCell","type","editor","Error","admin","components","clientProps","Component","CellComponent","importMap","serverProps","CustomCellComponent","Cell","_jsx","CustomComponent","Fallback"],"sources":["../../../../src/providers/TableColumns/buildColumnState/renderCell.tsx"],"sourcesContent":["import type { I18nClient } from '@payloadcms/translations'\nimport type {\n  ClientField,\n  DefaultCellComponentProps,\n  DefaultServerCellComponentProps,\n  Document,\n  Field,\n  Payload,\n} from 'payload'\n\nimport { MissingEditorProp } from 'payload'\n\nimport { RenderCustomComponent } from '../../../elements/RenderCustomComponent/index.js'\nimport { RenderServerComponent } from '../../../elements/RenderServerComponent/index.js'\nimport {\n  DefaultCell,\n  RenderDefaultCell,\n  // eslint-disable-next-line payload/no-imports-from-exports-dir -- MUST reference the exports dir: https://github.com/payloadcms/payload/issues/12002#issuecomment-2791493587\n} from '../../../exports/client/index.js'\nimport { hasOptionLabelJSXElement } from '../../../utilities/hasOptionLabelJSXElement.js'\nimport { findValueFromPath } from './findValueFromPath.js'\n\ntype RenderCellArgs = {\n  readonly clientField: ClientField\n  readonly collectionSlug: string\n  readonly columnIndex: number\n  readonly customCellProps: DefaultCellComponentProps['customCellProps']\n  readonly doc: Document\n  readonly enableRowSelections: boolean\n  readonly i18n: I18nClient\n  readonly isLinkedColumn: boolean\n  readonly payload: Payload\n  readonly rowIndex: number\n  readonly serverField: Field\n}\nexport function renderCell({\n  clientField,\n  collectionSlug,\n  columnIndex,\n  customCellProps,\n  doc,\n  enableRowSelections,\n  i18n,\n  isLinkedColumn,\n  payload,\n  rowIndex,\n  serverField,\n}: RenderCellArgs) {\n  const baseCellClientProps: DefaultCellComponentProps = {\n    cellData: undefined,\n    collectionSlug,\n    customCellProps,\n    field: clientField,\n    rowData: undefined,\n  }\n\n  const accessor: string | undefined =\n    ('accessor' in clientField ? (clientField.accessor as string) : undefined) ??\n    ('name' in clientField ? clientField.name : undefined)\n\n  const cellClientProps: DefaultCellComponentProps = {\n    ...baseCellClientProps,\n    cellData: 'name' in clientField ? findValueFromPath(doc, accessor) : undefined,\n    link: isLinkedColumn,\n    rowData: doc,\n  }\n\n  const cellServerProps: DefaultServerCellComponentProps = {\n    cellData: cellClientProps.cellData,\n    className: baseCellClientProps.className,\n    collectionConfig: payload.collections[collectionSlug].config,\n    collectionSlug,\n    columnIndex,\n    customCellProps: baseCellClientProps.customCellProps,\n    field: serverField,\n    i18n,\n    link: cellClientProps.link,\n    onClick: baseCellClientProps.onClick,\n    payload,\n    rowData: doc,\n  }\n\n  let CustomCell = null\n\n  if (serverField?.type === 'richText') {\n    if (!serverField?.editor) {\n      throw new MissingEditorProp(serverField) // while we allow disabling editor functionality, you should not have any richText fields defined if you do not have an editor\n    }\n\n    if (typeof serverField?.editor === 'function') {\n      throw new Error('Attempted to access unsanitized rich text editor.')\n    }\n\n    if (!serverField.admin) {\n      serverField.admin = {}\n    }\n\n    if (!serverField.admin.components) {\n      serverField.admin.components = {}\n    }\n\n    CustomCell = RenderServerComponent({\n      clientProps: cellClientProps,\n      Component: serverField.editor.CellComponent,\n      importMap: payload.importMap,\n      serverProps: cellServerProps,\n    })\n  } else {\n    const CustomCellComponent = serverField?.admin?.components?.Cell\n\n    if (CustomCellComponent) {\n      CustomCell = RenderServerComponent({\n        clientProps: cellClientProps,\n        Component: CustomCellComponent,\n        importMap: payload.importMap,\n        serverProps: cellServerProps,\n      })\n    } else if (\n      cellClientProps.cellData &&\n      cellClientProps.field &&\n      hasOptionLabelJSXElement(cellClientProps)\n    ) {\n      CustomCell = RenderServerComponent({\n        clientProps: cellClientProps,\n        Component: DefaultCell,\n        importMap: payload.importMap,\n      })\n    } else {\n      const CustomCellComponent = serverField?.admin?.components?.Cell\n\n      if (CustomCellComponent) {\n        CustomCell = RenderServerComponent({\n          clientProps: cellClientProps,\n          Component: CustomCellComponent,\n          importMap: payload.importMap,\n          serverProps: cellServerProps,\n        })\n      } else {\n        CustomCell = undefined\n      }\n    }\n  }\n\n  return (\n    <RenderCustomComponent\n      CustomComponent={CustomCell}\n      Fallback={\n        <RenderDefaultCell\n          clientProps={cellClientProps}\n          columnIndex={columnIndex}\n          enableRowSelections={enableRowSelections}\n          isLinkedColumn={isLinkedColumn}\n        />\n      }\n      key={`${rowIndex}-${columnIndex}`}\n    />\n  )\n}\n"],"mappings":"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","ignoreList":[]}