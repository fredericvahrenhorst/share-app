{"version":3,"sources":["../src/deleteMany.ts"],"sourcesContent":["import type { DeleteOptions } from 'mongodb'\n\nimport { type DeleteMany } from 'payload'\n\nimport type { MongooseAdapter } from './index.js'\n\nimport { buildQuery } from './queries/buildQuery.js'\nimport { getCollection } from './utilities/getEntity.js'\nimport { getSession } from './utilities/getSession.js'\n\nexport const deleteMany: DeleteMany = async function deleteMany(\n  this: MongooseAdapter,\n  { collection: collectionSlug, req, where },\n) {\n  const { collectionConfig, Model } = getCollection({ adapter: this, collectionSlug })\n\n  const options: DeleteOptions = {\n    session: await getSession(this, req),\n  }\n\n  const query = await buildQuery({\n    adapter: this,\n    collectionSlug,\n    fields: collectionConfig.flattenedFields,\n    where,\n  })\n\n  await Model.deleteMany(query, options)\n}\n"],"names":["buildQuery","getCollection","getSession","deleteMany","collection","collectionSlug","req","where","collectionConfig","Model","adapter","options","session","query","fields","flattenedFields"],"mappings":"AAMA,SAASA,UAAU,QAAQ,0BAAyB;AACpD,SAASC,aAAa,QAAQ,2BAA0B;AACxD,SAASC,UAAU,QAAQ,4BAA2B;AAEtD,OAAO,MAAMC,aAAyB,eAAeA,WAEnD,EAAEC,YAAYC,cAAc,EAAEC,GAAG,EAAEC,KAAK,EAAE;IAE1C,MAAM,EAAEC,gBAAgB,EAAEC,KAAK,EAAE,GAAGR,cAAc;QAAES,SAAS,IAAI;QAAEL;IAAe;IAElF,MAAMM,UAAyB;QAC7BC,SAAS,MAAMV,WAAW,IAAI,EAAEI;IAClC;IAEA,MAAMO,QAAQ,MAAMb,WAAW;QAC7BU,SAAS,IAAI;QACbL;QACAS,QAAQN,iBAAiBO,eAAe;QACxCR;IACF;IAEA,MAAME,MAAMN,UAAU,CAACU,OAAOF;AAChC,EAAC"}