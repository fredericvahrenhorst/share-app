{"version":3,"sources":["../../src/uploads/safeFetch.ts"],"sourcesContent":["import type { Dispatcher } from 'undici'\n\nimport { lookup } from 'dns/promises'\nimport ipaddr from 'ipaddr.js'\nimport { Agent, fetch as undiciFetch } from 'undici'\n\nconst isSafeIp = (ip: string) => {\n  try {\n    if (!ip) {\n      return false\n    }\n\n    if (!ipaddr.isValid(ip)) {\n      return false\n    }\n\n    const parsedIpAddress = ipaddr.parse(ip)\n    const range = parsedIpAddress.range()\n    if (range !== 'unicast') {\n      return false // Private IP Range\n    }\n  } catch (ignore) {\n    return false\n  }\n  return true\n}\n\n/**\n * Checks if a hostname or IP address is safe to fetch from.\n * @param hostname a hostname or IP address\n * @returns\n */\nconst isSafe = async (hostname: string) => {\n  try {\n    if (ipaddr.isValid(hostname)) {\n      return isSafeIp(hostname)\n    }\n\n    const { address } = await lookup(hostname)\n    return isSafeIp(address)\n  } catch (_ignore) {\n    return false\n  }\n}\n\nconst ssrfFilterInterceptor: Dispatcher.DispatcherComposeInterceptor = (dispatch) => {\n  return (opts, handler) => {\n    return dispatch(opts, handler)\n  }\n}\n\nconst safeDispatcher = new Agent().compose(ssrfFilterInterceptor)\n\n/**\n * A \"safe\" version of undici's fetch that prevents SSRF attacks.\n *\n * - Utilizes a custom dispatcher that filters out requests to unsafe IP addresses.\n * - Validates domain names by resolving them to IP addresses and checking if they're safe.\n * - Undici was used because it supported interceptors as well as \"credentials: include\". Native fetch\n */\nexport const safeFetch = async (...args: Parameters<typeof undiciFetch>) => {\n  const [unverifiedUrl, options] = args\n\n  try {\n    const url = new URL(unverifiedUrl)\n\n    const isHostnameSafe = await isSafe(url.hostname)\n    if (!isHostnameSafe) {\n      throw new Error(`Blocked unsafe attempt to ${url.toString()}`)\n    }\n\n    return await undiciFetch(url, {\n      ...options,\n      dispatcher: safeDispatcher,\n    })\n  } catch (error) {\n    if (error instanceof Error) {\n      if (error.cause instanceof Error && error.cause.message.includes('unsafe')) {\n        // Errors thrown from within interceptors always have 'fetch error' as the message\n        // The desired message we want to bubble up is in the cause\n        throw new Error(error.cause.message)\n      } else {\n        let stringifiedUrl: string | undefined = undefined\n        if (typeof unverifiedUrl === 'string') {\n          stringifiedUrl = unverifiedUrl\n        } else if (unverifiedUrl instanceof URL) {\n          stringifiedUrl = unverifiedUrl.toString()\n        } else if (unverifiedUrl instanceof Request) {\n          stringifiedUrl = unverifiedUrl.url\n        }\n\n        throw new Error(`Failed to fetch from ${stringifiedUrl}, ${error.message}`)\n      }\n    }\n    throw error\n  }\n}\n"],"names":["lookup","ipaddr","Agent","fetch","undiciFetch","isSafeIp","ip","isValid","parsedIpAddress","parse","range","ignore","isSafe","hostname","address","_ignore","ssrfFilterInterceptor","dispatch","opts","handler","safeDispatcher","compose","safeFetch","args","unverifiedUrl","options","url","URL","isHostnameSafe","Error","toString","dispatcher","error","cause","message","includes","stringifiedUrl","undefined","Request"],"mappings":"AAEA,SAASA,MAAM,QAAQ,eAAc;AACrC,OAAOC,YAAY,YAAW;AAC9B,SAASC,KAAK,EAAEC,SAASC,WAAW,QAAQ,SAAQ;AAEpD,MAAMC,WAAW,CAACC;IAChB,IAAI;QACF,IAAI,CAACA,IAAI;YACP,OAAO;QACT;QAEA,IAAI,CAACL,OAAOM,OAAO,CAACD,KAAK;YACvB,OAAO;QACT;QAEA,MAAME,kBAAkBP,OAAOQ,KAAK,CAACH;QACrC,MAAMI,QAAQF,gBAAgBE,KAAK;QACnC,IAAIA,UAAU,WAAW;YACvB,OAAO,MAAM,mBAAmB;;QAClC;IACF,EAAE,OAAOC,QAAQ;QACf,OAAO;IACT;IACA,OAAO;AACT;AAEA;;;;CAIC,GACD,MAAMC,SAAS,OAAOC;IACpB,IAAI;QACF,IAAIZ,OAAOM,OAAO,CAACM,WAAW;YAC5B,OAAOR,SAASQ;QAClB;QAEA,MAAM,EAAEC,OAAO,EAAE,GAAG,MAAMd,OAAOa;QACjC,OAAOR,SAASS;IAClB,EAAE,OAAOC,SAAS;QAChB,OAAO;IACT;AACF;AAEA,MAAMC,wBAAiE,CAACC;IACtE,OAAO,CAACC,MAAMC;QACZ,OAAOF,SAASC,MAAMC;IACxB;AACF;AAEA,MAAMC,iBAAiB,IAAIlB,QAAQmB,OAAO,CAACL;AAE3C;;;;;;CAMC,GACD,OAAO,MAAMM,YAAY,OAAO,GAAGC;IACjC,MAAM,CAACC,eAAeC,QAAQ,GAAGF;IAEjC,IAAI;QACF,MAAMG,MAAM,IAAIC,IAAIH;QAEpB,MAAMI,iBAAiB,MAAMhB,OAAOc,IAAIb,QAAQ;QAChD,IAAI,CAACe,gBAAgB;YACnB,MAAM,IAAIC,MAAM,CAAC,0BAA0B,EAAEH,IAAII,QAAQ,IAAI;QAC/D;QAEA,OAAO,MAAM1B,YAAYsB,KAAK;YAC5B,GAAGD,OAAO;YACVM,YAAYX;QACd;IACF,EAAE,OAAOY,OAAO;QACd,IAAIA,iBAAiBH,OAAO;YAC1B,IAAIG,MAAMC,KAAK,YAAYJ,SAASG,MAAMC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAAC,WAAW;gBAC1E,kFAAkF;gBAClF,2DAA2D;gBAC3D,MAAM,IAAIN,MAAMG,MAAMC,KAAK,CAACC,OAAO;YACrC,OAAO;gBACL,IAAIE,iBAAqCC;gBACzC,IAAI,OAAOb,kBAAkB,UAAU;oBACrCY,iBAAiBZ;gBACnB,OAAO,IAAIA,yBAAyBG,KAAK;oBACvCS,iBAAiBZ,cAAcM,QAAQ;gBACzC,OAAO,IAAIN,yBAAyBc,SAAS;oBAC3CF,iBAAiBZ,cAAcE,GAAG;gBACpC;gBAEA,MAAM,IAAIG,MAAM,CAAC,qBAAqB,EAAEO,eAAe,EAAE,EAAEJ,MAAME,OAAO,EAAE;YAC5E;QACF;QACA,MAAMF;IACR;AACF,EAAC"}