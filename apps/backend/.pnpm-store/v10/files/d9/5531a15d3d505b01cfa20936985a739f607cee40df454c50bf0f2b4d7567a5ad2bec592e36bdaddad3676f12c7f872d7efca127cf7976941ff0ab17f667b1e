{"version":3,"file":"index.js","names":["c","_c","getFieldPermissions","React","Fragment","useCallback","useEffect","useMemo","useState","toast","Button","EmailAndUsernameFields","CheckboxField","ConfirmPasswordField","PasswordField","useFormFields","useFormModified","useAuth","useConfig","useDocumentInfo","useTranslation","APIKey","baseClass","Auth","props","$","className","collectionSlug","disableLocalStrategy","email","loginWithUsername","operation","readOnly","requirePassword","setValidateBeforeSubmit","useAPIKey","username","verify","permissions","changingPassword","setChangingPassword","enableAPIKey","_temp","dispatchFields","_temp2","modified","i18n","t","docPermissions","isEditing","isInitializing","config","t0","routes","t1","serverURL","api","showPasswordFields","showUnlock","hasPasswordFieldOverride","fields","hasLoginFieldOverride","passwordPermissions","field","name","type","parentName","create","update","hasEmailAndUsernameFields","requireEmail","allowEmailLogin","emailPermission","usernamePermission","enableFields","disabled","apiKeyPermissions","apiKeyReadOnly","enableAPIKeyReadOnly","canReadApiKey","read","t2","bb0","collection","collections","Boolean","unlock","undefined","hasPermissionToUnlock","t3","changingPassword_0","errorMessage","path","valid","handleChangePassword","t4","url","response","fetch","body","JSON","stringify","credentials","headers","language","method","status","success","error","t5","t6","t7","filter","t8","value","_jsx","children","_jsxs","admin","label","schemaPath","enabled","t9","join","autoComplete","required","indexPath","parentPath","parentSchemaPath","buttonStyle","onClick","size","id","reducer"],"sources":["../../../../src/views/Edit/Auth/index.tsx"],"sourcesContent":["'use client'\n\nimport { getFieldPermissions } from 'payload/shared'\nimport React, { Fragment, useCallback, useEffect, useMemo, useState } from 'react'\nimport { toast } from 'sonner'\n\nimport type { Props } from './types.js'\n\nimport { Button } from '../../../elements/Button/index.js'\nimport { EmailAndUsernameFields } from '../../../elements/EmailAndUsername/index.js'\nimport { CheckboxField } from '../../../fields/Checkbox/index.js'\nimport { ConfirmPasswordField } from '../../../fields/ConfirmPassword/index.js'\nimport { PasswordField } from '../../../fields/Password/index.js'\nimport { useFormFields, useFormModified } from '../../../forms/Form/context.js'\nimport { useAuth } from '../../../providers/Auth/index.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport { useDocumentInfo } from '../../../providers/DocumentInfo/index.js'\nimport { useTranslation } from '../../../providers/Translation/index.js'\nimport { APIKey } from './APIKey.js'\nimport './index.scss'\n\nconst baseClass = 'auth-fields'\n\nexport const Auth: React.FC<Props> = (props) => {\n  const {\n    className,\n    collectionSlug,\n    disableLocalStrategy,\n    email,\n    loginWithUsername,\n    operation,\n    readOnly,\n    requirePassword,\n    setValidateBeforeSubmit,\n    useAPIKey,\n    username,\n    verify,\n  } = props\n\n  const { permissions } = useAuth()\n  const [changingPassword, setChangingPassword] = useState(requirePassword)\n  const enableAPIKey = useFormFields(([fields]) => (fields && fields?.enableAPIKey) || null)\n  const dispatchFields = useFormFields((reducer) => reducer[1])\n  const modified = useFormModified()\n  const { i18n, t } = useTranslation()\n  const { docPermissions, isEditing, isInitializing } = useDocumentInfo()\n\n  const {\n    config: {\n      routes: { api },\n      serverURL,\n    },\n  } = useConfig()\n\n  let showPasswordFields = true\n  let showUnlock = true\n  const hasPasswordFieldOverride =\n    typeof docPermissions.fields === 'object' && 'password' in docPermissions.fields\n  const hasLoginFieldOverride =\n    typeof docPermissions.fields === 'object' &&\n    ('username' in docPermissions.fields || 'email' in docPermissions.fields)\n\n  if (hasPasswordFieldOverride) {\n    const { permissions: passwordPermissions } = getFieldPermissions({\n      field: { name: 'password', type: 'text' },\n      operation,\n      parentName: '',\n      permissions: docPermissions?.fields,\n    })\n\n    if (operation === 'create') {\n      showPasswordFields =\n        passwordPermissions === true ||\n        (typeof passwordPermissions === 'object' && passwordPermissions.create)\n    } else {\n      showPasswordFields =\n        passwordPermissions === true ||\n        (typeof passwordPermissions === 'object' && passwordPermissions.update)\n    }\n  }\n\n  if (hasLoginFieldOverride) {\n    const hasEmailAndUsernameFields =\n      loginWithUsername && (loginWithUsername.requireEmail || loginWithUsername.allowEmailLogin)\n\n    const { operation: emailPermission } = getFieldPermissions({\n      field: { name: 'email', type: 'text' },\n      operation: 'read',\n      parentName: '',\n      permissions: docPermissions?.fields,\n    })\n\n    const { operation: usernamePermission } = getFieldPermissions({\n      field: { name: 'username', type: 'text' },\n      operation: 'read',\n      parentName: '',\n      permissions: docPermissions?.fields,\n    })\n\n    if (hasEmailAndUsernameFields) {\n      showUnlock = usernamePermission || emailPermission\n    } else if (loginWithUsername && !hasEmailAndUsernameFields) {\n      showUnlock = usernamePermission\n    } else {\n      showUnlock = emailPermission\n    }\n  }\n\n  const enableFields =\n    (!disableLocalStrategy ||\n      (typeof disableLocalStrategy === 'object' && disableLocalStrategy.enableFields === true)) &&\n    (showUnlock || showPasswordFields)\n\n  const disabled = readOnly || isInitializing\n\n  const apiKeyPermissions =\n    docPermissions?.fields === true ? true : docPermissions?.fields?.enableAPIKey\n\n  const apiKeyReadOnly =\n    readOnly ||\n    apiKeyPermissions === true ||\n    (apiKeyPermissions && typeof apiKeyPermissions === 'object' && !apiKeyPermissions?.update)\n\n  const enableAPIKeyReadOnly =\n    readOnly || (apiKeyPermissions !== true && !apiKeyPermissions?.update)\n\n  const canReadApiKey = apiKeyPermissions === true || apiKeyPermissions?.read\n\n  const hasPermissionToUnlock: boolean = useMemo(() => {\n    const collection = permissions?.collections?.[collectionSlug]\n\n    if (collection) {\n      return Boolean('unlock' in collection ? collection.unlock : undefined)\n    }\n\n    return false\n  }, [permissions, collectionSlug])\n\n  const handleChangePassword = useCallback(\n    (changingPassword: boolean) => {\n      if (changingPassword) {\n        setValidateBeforeSubmit(true)\n\n        dispatchFields({\n          type: 'UPDATE',\n          errorMessage: t('validation:required'),\n          path: 'password',\n          valid: false,\n        })\n\n        dispatchFields({\n          type: 'UPDATE',\n          errorMessage: t('validation:required'),\n          path: 'confirm-password',\n          valid: false,\n        })\n      } else {\n        setValidateBeforeSubmit(false)\n        dispatchFields({ type: 'REMOVE', path: 'password' })\n        dispatchFields({ type: 'REMOVE', path: 'confirm-password' })\n      }\n\n      setChangingPassword(changingPassword)\n    },\n    [dispatchFields, t, setValidateBeforeSubmit],\n  )\n\n  const unlock = useCallback(async () => {\n    const url = `${serverURL}${api}/${collectionSlug}/unlock`\n    const response = await fetch(url, {\n      body:\n        loginWithUsername && username ? JSON.stringify({ username }) : JSON.stringify({ email }),\n      credentials: 'include',\n      headers: {\n        'Accept-Language': i18n.language,\n        'Content-Type': 'application/json',\n      },\n      method: 'post',\n    })\n\n    if (response.status === 200) {\n      toast.success(t('authentication:successfullyUnlocked'))\n    } else {\n      toast.error(t('authentication:failedToUnlock'))\n    }\n  }, [i18n, serverURL, api, collectionSlug, email, username, t, loginWithUsername])\n\n  useEffect(() => {\n    if (!modified) {\n      setChangingPassword(false)\n    }\n  }, [modified])\n\n  if (disableLocalStrategy && !enableFields && !useAPIKey) {\n    return null\n  }\n\n  return (\n    <div className={[baseClass, className].filter(Boolean).join(' ')}>\n      {enableFields && (\n        <React.Fragment>\n          <EmailAndUsernameFields\n            loginWithUsername={loginWithUsername}\n            operation={operation}\n            permissions={docPermissions?.fields}\n            readOnly={readOnly}\n            t={t}\n          />\n          {(changingPassword || requirePassword) && (!disableLocalStrategy || !enableFields) && (\n            <div className={`${baseClass}__changing-password`}>\n              <PasswordField\n                autoComplete=\"new-password\"\n                field={{\n                  name: 'password',\n                  label: t('authentication:newPassword'),\n                  required: true,\n                }}\n                indexPath=\"\"\n                parentPath=\"\"\n                parentSchemaPath=\"\"\n                path=\"password\"\n                schemaPath=\"password\"\n              />\n              <ConfirmPasswordField disabled={readOnly} />\n            </div>\n          )}\n          <div className={`${baseClass}__controls`}>\n            {changingPassword && !requirePassword && (\n              <Button\n                buttonStyle=\"secondary\"\n                disabled={disabled}\n                onClick={() => handleChangePassword(false)}\n                size=\"medium\"\n              >\n                {t('general:cancel')}\n              </Button>\n            )}\n            {!changingPassword &&\n              !requirePassword &&\n              !disableLocalStrategy &&\n              showPasswordFields && (\n                <Button\n                  buttonStyle=\"secondary\"\n                  disabled={disabled}\n                  id=\"change-password\"\n                  onClick={() => handleChangePassword(true)}\n                  size=\"medium\"\n                >\n                  {t('authentication:changePassword')}\n                </Button>\n              )}\n            {operation === 'update' && hasPermissionToUnlock && (\n              <Button\n                buttonStyle=\"secondary\"\n                disabled={disabled || !showUnlock}\n                onClick={() => void unlock()}\n                size=\"medium\"\n              >\n                {t('authentication:forceUnlock')}\n              </Button>\n            )}\n          </div>\n        </React.Fragment>\n      )}\n      {useAPIKey && (\n        <div className={`${baseClass}__api-key`}>\n          {canReadApiKey && (\n            <Fragment>\n              <CheckboxField\n                field={{\n                  name: 'enableAPIKey',\n                  admin: { disabled, readOnly: enableAPIKeyReadOnly },\n                  label: t('authentication:enableAPIKey'),\n                }}\n                path=\"enableAPIKey\"\n                schemaPath={`${collectionSlug}.enableAPIKey`}\n              />\n              <APIKey enabled={!!enableAPIKey?.value} readOnly={apiKeyReadOnly} />\n            </Fragment>\n          )}\n        </div>\n      )}\n      {verify && isEditing && (\n        <CheckboxField\n          field={{\n            name: '_verified',\n            admin: { disabled, readOnly },\n            label: t('authentication:verified'),\n          }}\n          path=\"_verified\"\n          schemaPath={`${collectionSlug}._verified`}\n        />\n      )}\n    </div>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAEA,SAASC,mBAAmB,QAAQ;AACpC,OAAOC,KAAA,IAASC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ;AAC3E,SAASC,KAAK,QAAQ;AAItB,SAASC,MAAM,QAAQ;AACvB,SAASC,sBAAsB,QAAQ;AACvC,SAASC,aAAa,QAAQ;AAC9B,SAASC,oBAAoB,QAAQ;AACrC,SAASC,aAAa,QAAQ;AAC9B,SAASC,aAAa,EAAEC,eAAe,QAAQ;AAC/C,SAASC,OAAO,QAAQ;AACxB,SAASC,SAAS,QAAQ;AAC1B,SAASC,eAAe,QAAQ;AAChC,SAASC,cAAc,QAAQ;AAC/B,SAASC,MAAM,QAAQ;AACvB,OAAO;AAEP,MAAMC,SAAA,GAAY;AAElB,OAAO,MAAMC,IAAA,GAAwBC,KAAA;EAAA,MAAAC,CAAA,GAAAxB,EAAA;EACnC;IAAAyB,SAAA;IAAAC,cAAA;IAAAC,oBAAA;IAAAC,KAAA;IAAAC,iBAAA;IAAAC,SAAA;IAAAC,QAAA;IAAAC,eAAA;IAAAC,uBAAA;IAAAC,SAAA;IAAAC,QAAA;IAAAC;EAAA,IAaIb,KAAA;EAEJ;IAAAc;EAAA,IAAwBrB,OAAA;EACxB,OAAAsB,gBAAA,EAAAC,mBAAA,IAAgDhC,QAAA,CAASyB,eAAA;EACzD,MAAAQ,YAAA,GAAqB1B,aAAA,CAAA2B,KAAgE;EACrF,MAAAC,cAAA,GAAuB5B,aAAA,CAAA6B,MAAqC;EAC5D,MAAAC,QAAA,GAAiB7B,eAAA;EACjB;IAAA8B,IAAA;IAAAC;EAAA,IAAoB3B,cAAA;EACpB;IAAA4B,cAAA;IAAAC,SAAA;IAAAC;EAAA,IAAsD/B,eAAA;EAEtD;IAAAgC,MAAA,EAAAC;EAAA,IAKIlC,SAAA;EAJM;IAAAmC,MAAA,EAAAC,EAAA;IAAAC;EAAA,IAAAH,EAGP;EAFS;IAAAI;EAAA,IAAAF,EAAO;EAKnB,IAAAG,kBAAA;EACA,IAAAC,UAAA;EACA,MAAAC,wBAAA,GACE,OAAOX,cAAA,CAAAY,MAAA,KAA0B,YAAY,cAAcZ,cAAA,CAAAY,MAAqB;EAClF,MAAAC,qBAAA,GACE,OAAOb,cAAA,CAAAY,MAAA,KAA0B,aAChC,cAAcZ,cAAA,CAAAY,MAAqB,IAAI,WAAWZ,cAAA,CAAAY,MAAqB,CAAD;EAAA,IAErED,wBAAA;IACF;MAAArB,WAAA,EAAAwB;IAAA,IAA6C5D,mBAAA;MAAA6D,KAAA;QAAAC,IAAA,EAC5B;QAAAC,IAAA,EAAkB;MAAA;MAAAlC,SAAA;MAAAmC,UAAA,EAErB;MAAA5B,WAAA,EACCU,cAAA,EAAAY;IAAA,CACf;IAAA,IAEI7B,SAAA,KAAc;MAChB0B,kBAAA,CAAAA,CAAA,CACEK,mBAAA,SAAwB,IACvB,OAAOA,mBAAA,KAAwB,YAAYA,mBAAA,CAAAK,MAA0B;IAFxE;MAIAV,kBAAA,CAAAA,CAAA,CACEK,mBAAA,SAAwB,IACvB,OAAOA,mBAAA,KAAwB,YAAYA,mBAAA,CAAAM,MAA0B;IAFxE;EAAA;EAAA,IAMAP,qBAAA;IACF,MAAAQ,yBAAA,GACEvC,iBAAA,KAAsBA,iBAAA,CAAAwC,YAAA,IAAkCxC,iBAAA,CAAAyC,eAAiC,CAAD;IAE1F;MAAAxC,SAAA,EAAAyC;IAAA,IAAuCtE,mBAAA;MAAA6D,KAAA;QAAAC,IAAA,EACtB;QAAAC,IAAA,EAAe;MAAA;MAAAlC,SAAA,EACnB;MAAAmC,UAAA,EACC;MAAA5B,WAAA,EACCU,cAAA,EAAAY;IAAA,CACf;IAEA;MAAA7B,SAAA,EAAA0C;IAAA,IAA0CvE,mBAAA;MAAA6D,KAAA;QAAAC,IAAA,EACzB;QAAAC,IAAA,EAAkB;MAAA;MAAAlC,SAAA,EACtB;MAAAmC,UAAA,EACC;MAAA5B,WAAA,EACCU,cAAA,EAAAY;IAAA,CACf;IAAA,IAEIS,yBAAA;MACFX,UAAA,CAAAA,CAAA,CAAae,kBAAA,IAAsBD,eAAA;IAAnC;MAAA,IACS1C,iBAAA,KAAsBuC,yBAAA;QAC/BX,UAAA,CAAAA,CAAA,CAAae,kBAAA;MAAb;QAEAf,UAAA,CAAAA,CAAA,CAAac,eAAA;MAAb;IAAA;EAAA;EAIJ,MAAAE,YAAA,GACE,CAAC,CAAC9C,oBAAA,IACC,OAAOA,oBAAA,KAAyB,YAAYA,oBAAA,CAAA8C,YAAA,SAA0C,MACxFhB,UAAA,IAAcD,kBAAiB;EAElC,MAAAkB,QAAA,GAAiB3C,QAAA,IAAYkB,cAAA;EAE7B,MAAA0B,iBAAA,GACE5B,cAAA,EAAAY,MAAA,SAA2B,UAAcZ,cAAA,EAAAY,MAAA,EAAAnB,YAAwB;EAEnE,MAAAoC,cAAA,GACE7C,QAAA,IACA4C,iBAAA,SAAsB,IACrBA,iBAAA,IAAqB,OAAOA,iBAAA,KAAsB,aAAaA,iBAAA,EAAAR,MAAmB;EAErF,MAAAU,oBAAA,GACE9C,QAAA,IAAa4C,iBAAA,SAAsB,KAASA,iBAAA,EAAAR,MAAmB;EAEjE,MAAAW,aAAA,GAAsBH,iBAAA,SAAsB,IAAQA,iBAAA,EAAAI,IAAmB;EAAA,IAAAC,EAAA;EAAAC,GAAA;IAGrE,MAAAC,UAAA,GAAmB7C,WAAA,EAAA8C,WAAA,GAA2BzD,cAAA;IAAe,IAEzDwD,UAAA;MACFF,EAAA,GAAOI,OAAA,CAAQ,YAAYF,UAAA,GAAaA,UAAA,CAAAG,MAAA,GAAAC,SAAoB;MAAA,MAAAL,GAAA;IAAA;IAG9DD,EAAA;EAAO;EAPT,MAAAO,qBAAA,GAAuCP,EAQP;EAAA,IAAAQ,EAAA;EAAA,IAAAhE,CAAA,QAAAkB,cAAA,IAAAlB,CAAA,QAAAS,uBAAA,IAAAT,CAAA,QAAAsB,CAAA;IAG9B0C,EAAA,GAAAC,kBAAA;MAAA,IACMnD,kBAAA;QACFL,uBAAA,KAAwB;QAExBS,cAAA;UAAAsB,IAAA,EACQ;UAAA0B,YAAA,EACQ5C,CAAA,CAAE;UAAA6C,IAAA,EACV;UAAAC,KAAA;QAAA,CAER;QAEAlD,cAAA;UAAAsB,IAAA,EACQ;UAAA0B,YAAA,EACQ5C,CAAA,CAAE;UAAA6C,IAAA,EACV;UAAAC,KAAA;QAAA,CAER;MAAA;QAEA3D,uBAAA,MAAwB;QACxBS,cAAA;UAAAsB,IAAA,EAAuB;UAAA2B,IAAA,EAAgB;QAAA,CAAW;QAClDjD,cAAA;UAAAsB,IAAA,EAAuB;UAAA2B,IAAA,EAAgB;QAAA,CAAmB;MAAA;MAG5DpD,mBAAA,CAAoBD,kBAAA;IAAA;IACtBd,CAAA,MAAAkB,cAAA;IAAAlB,CAAA,MAAAS,uBAAA;IAAAT,CAAA,MAAAsB,CAAA;IAAAtB,CAAA,MAAAgE,EAAA;EAAA;IAAAA,EAAA,GAAAhE,CAAA;EAAA;EAzBF,MAAAqE,oBAAA,GAA6BL,EA0BiB;EAAA,IAAAM,EAAA;EAAA,IAAAtE,CAAA,QAAA+B,GAAA,IAAA/B,CAAA,QAAAE,cAAA,IAAAF,CAAA,QAAAI,KAAA,IAAAJ,CAAA,QAAAqB,IAAA,IAAArB,CAAA,QAAAK,iBAAA,IAAAL,CAAA,QAAA8B,SAAA,IAAA9B,CAAA,SAAAsB,CAAA,IAAAtB,CAAA,SAAAW,QAAA;IAGnB2D,EAAA,SAAAA,CAAA;MACzB,MAAAC,GAAA,GAAY,GAAGzC,SAAA,GAAYC,GAAA,IAAO7B,cAAA,SAAuB;MACzD,MAAAsE,QAAA,SAAuBC,KAAA,CAAMF,GAAA;QAAAG,IAAA,EAEzBrE,iBAAA,IAAqBM,QAAA,GAAWgE,IAAA,CAAAC,SAAA;UAAAjE;QAAA,CAA0B,IAAKgE,IAAA,CAAAC,SAAA;UAAAxE;QAAA,CAAuB;QAAAyE,WAAA,EAC3E;QAAAC,OAAA;UAAA,mBAEQzD,IAAA,CAAA0D,QAAA;UAAA,gBACH;QAAA;QAAAC,MAAA,EAEV;MAAA,CACV;MAAA,IAEIR,QAAA,CAAAS,MAAA,QAAoB;QACtBjG,KAAA,CAAAkG,OAAA,CAAc5D,CAAA,CAAE;MAAA;QAEhBtC,KAAA,CAAAmG,KAAA,CAAY7D,CAAA,CAAE;MAAA;IAAA;IAElBtB,CAAA,MAAA+B,GAAA;IAAA/B,CAAA,MAAAE,cAAA;IAAAF,CAAA,MAAAI,KAAA;IAAAJ,CAAA,MAAAqB,IAAA;IAAArB,CAAA,MAAAK,iBAAA;IAAAL,CAAA,MAAA8B,SAAA;IAAA9B,CAAA,OAAAsB,CAAA;IAAAtB,CAAA,OAAAW,QAAA;IAAAX,CAAA,OAAAsE,EAAA;EAAA;IAAAA,EAAA,GAAAtE,CAAA;EAAA;EAlBA,MAAA6D,MAAA,GAAeS,EAkBiE;EAAA,IAAAc,EAAA;EAAA,IAAAC,EAAA;EAAA,IAAArF,CAAA,SAAAoB,QAAA;IAEtEgE,EAAA,GAAAA,CAAA;MAAA,KACHhE,QAAA;QACHL,mBAAA,MAAoB;MAAA;IAAA;IAErBsE,EAAA,IAACjE,QAAA;IAASpB,CAAA,OAAAoB,QAAA;IAAApB,CAAA,OAAAoF,EAAA;IAAApF,CAAA,OAAAqF,EAAA;EAAA;IAAAD,EAAA,GAAApF,CAAA;IAAAqF,EAAA,GAAArF,CAAA;EAAA;EAJbnB,SAAA,CAAUuG,EAIV,EAAGC,EAAU;EAAA,IAETlF,oBAAA,KAAyB8C,YAAA,KAAiBvC,SAAA;IAAA;EAAA;EAAA,IAAA4E,EAAA;EAAA,IAAAtF,CAAA,SAAAC,SAAA;IAK5BqF,EAAA,IAAAzF,SAAA,EAAYI,SAAA,EAAAsF,MAAA,CAAA3B,OAAkB;IAAA5D,CAAA,OAAAC,SAAA;IAAAD,CAAA,OAAAsF,EAAA;EAAA;IAAAA,EAAA,GAAAtF,CAAA;EAAA;EAAA,IAAAwF,EAAA;EAAA,IAAAxF,CAAA,SAAAoD,cAAA,IAAApD,CAAA,SAAAsD,aAAA,IAAAtD,CAAA,SAAAE,cAAA,IAAAF,CAAA,SAAAkD,QAAA,IAAAlD,CAAA,SAAAgB,YAAA,EAAAyE,KAAA,IAAAzF,CAAA,SAAAqD,oBAAA,IAAArD,CAAA,SAAAsB,CAAA,IAAAtB,CAAA,SAAAU,SAAA;IAkE3C8E,EAAA,GAAA9E,SAAA,IACCgF,IAAA,CAAC;MAAAzF,SAAA,EAAe,GAAAJ,SAAA,WAAuB;MAAA8F,QAAA,EACpCrC,aAAA,IACCsC,KAAA,CAAAjH,QAAA;QAAAgH,QAAA,GACED,IAAA,CAAAvG,aAAA;UAAAmD,KAAA;YAAAC,IAAA,EAEU;YAAAsD,KAAA;cAAA3C,QAAA;cAAA3C,QAAA,EACuB8C;YAAA;YAAAyC,KAAA,EACtBxE,CAAA,CAAE;UAAA;UAAA6C,IAAA,EAEN;UAAA4B,UAAA,EACO,GAAG7F,cAAA;QAA6B,C,GAE9CwF,IAAA,CAAA9F,MAAA;UAAAoG,OAAA,IAAmBhF,YAAA,EAAAyE,KAAA;UAAAlF,QAAA,EAA+B6C;QAAA,C;;;;;;;;;;;;;;;;;IAKzD6C,EAAA,GAAArF,MAAA,IAAUY,SAAA,IACTkE,IAAA,CAAAvG,aAAA;MAAAmD,KAAA;QAAAC,IAAA,EAEU;QAAAsD,KAAA;UAAA3C,QAAA;UAAA3C;QAAA;QAAAuF,KAAA,EAECxE,CAAA,CAAE;MAAA;MAAA6C,IAAA,EAEN;MAAA4B,UAAA,EACO,GAAG7F,cAAA;IAA0B,C;;;;;;;;;;;SA5F/C0F,KAAA,CAAC;IAAA3F,SAAA,EAAeqF,EAA8B,CAAAY,IAAA,CAAc;IAAAP,QAAA,GACzD1C,YAAA,IACC2C,KAAA,CAAAlH,KAAA,CAAAC,QAAA;MAAAgH,QAAA,GACED,IAAA,CAAAxG,sBAAA;QAAAmB,iBAAA;QAAAC,SAAA;QAAAO,WAAA,EAGeU,cAAA,EAAAY,MAAA;QAAA5B,QAAA;QAAAe;MAAA,C,GAIb,CAAAR,gBAAA,IAAoBN,eAAc,MAAO,CAACL,oBAAA,KAAyB8C,YAAW,KAC9E2C,KAAA,CAAC;QAAA3F,SAAA,EAAe,GAAAJ,SAAA,qBAAiC;QAAA8F,QAAA,GAC/CD,IAAA,CAAArG,aAAA;UAAA8G,YAAA,EACe;UAAA7D,KAAA;YAAAC,IAAA,EAEL;YAAAuD,KAAA,EACCxE,CAAA,CAAE;YAAA8E,QAAA;UAAA;UAAAC,SAAA,EAGD;UAAAC,UAAA,EACC;UAAAC,gBAAA,EACM;UAAApC,IAAA,EACZ;UAAA4B,UAAA,EACM;QAAA,C,GAEbL,IAAA,CAAAtG,oBAAA;UAAA8D,QAAA,EAAgC3C;QAAA,C;UAGpCqF,KAAA,CAAC;QAAA3F,SAAA,EAAe,GAAAJ,SAAA,YAAwB;QAAA8F,QAAA,GACrC7E,gBAAA,KAAqBN,eAAA,IACpBkF,IAAA,CAAAzG,MAAA;UAAAuH,WAAA,EACc;UAAAtD,QAAA;UAAAuD,OAAA,EAAAA,CAAA,KAEGpC,oBAAA,MAAqB;UAAAqC,IAAA,EAC/B;UAAAf,QAAA,EAEJrE,CAAA,CAAE;QAAA,C,GAGN,CAACR,gBAAA,KACCN,eAAA,KACAL,oBAAA,IACD6B,kBAAA,IACE0D,IAAA,CAAAzG,MAAA;UAAAuH,WAAA,EACc;UAAAtD,QAAA;UAAAyD,EAAA,EAET;UAAAF,OAAA,EAAAA,CAAA,KACYpC,oBAAA,KAAqB;UAAAqC,IAAA,EAC/B;UAAAf,QAAA,EAEJrE,CAAA,CAAE;QAAA,C,GAGRhB,SAAA,KAAc,YAAYyD,qBAAA,IACzB2B,IAAA,CAAAzG,MAAA;UAAAuH,WAAA,EACc;UAAAtD,QAAA,EACFA,QAAA,KAAajB,UAAA;UAAAwE,OAAA,EAAAA,CAAA,UACH5C,MAAA;UAAA6C,IAAA,EACf;UAAAf,QAAA,EAEJrE,CAAA,CAAE;QAAA,C;;QAMZkE,E,EAkBAS,E;;CAaP;AAhRqC,SAAAhF,MAAAU,EAAA;EAkBC,OAAAQ,MAAA,IAAAR,EAAQ;EAAA,OAAKQ,MAAC,IAAUA,MAAA,EAAAnB,YAAQ,QAAiB;AAAA;AAlBlD,SAAAG,OAAAyF,OAAA;EAAA,OAmBeA,OAAO;AAAA","ignoreList":[]}